<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<ndoc SchemaVersion="2.0">
  <copyright text="Copyright © MControl.Net" />
  <threadsafety static="true" instance="false" />
  <namespaceHierarchies>
    <namespaceHierarchy name="MControl.Util">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System">
        <hierarchyType id="T:MControl.Util.IPerms" displayName="IPerms" namespace="MControl.Util" />
        <hierarchyType id="T:MControl.Util.IPermsUser" displayName="IPermsUser" namespace="MControl.Util" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="MControl.Data.Caching">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System">
        <hierarchyType id="T:MControl.Caching.GenericCache" displayName="GenericCache" namespace="MControl.Caching">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" fullName="System.Collections.IEnumerable" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
          <hierarchyType id="T:MControl.Data.Caching.GenericDataCache" displayName="GenericDataCache" namespace="MControl.Data.Caching" />
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="MControl.Data.Common">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System">
        <hierarchyType id="T:MControl.Data.Common.DalAsync" displayName="DalAsync" namespace="MControl.Data.Common">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:MControl.Data.IDalAsync" displayName="IDalAsync" namespace="MControl.Data" fullName="MControl.Data.IDalAsync" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.Common.DalAsyncFactory" displayName="DalAsyncFactory" namespace="MControl.Data.Common" />
        <hierarchyType id="T:MControl.Data.Common.DalCommand" displayName="DalCommand" namespace="MControl.Data.Common" />
        <hierarchyType id="T:MControl.Data.Common.DalDB" displayName="DalDB" namespace="MControl.Data.Common" />
        <hierarchyType id="T:MControl.Data.Common.DalProvider" displayName="DalProvider" namespace="MControl.Data.Common">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:MControl.Data.IDalBase" displayName="IDalBase" namespace="MControl.Data" fullName="MControl.Data.IDalBase" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="MControl.Data.SqlClient">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System">
        <hierarchyType id="T:MControl.Data.Common.DalAsync" displayName="DalAsync" namespace="MControl.Data.Common">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:MControl.Data.IDalAsync" displayName="IDalAsync" namespace="MControl.Data" fullName="MControl.Data.IDalAsync" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
          <hierarchyType id="T:MControl.Data.SqlClient.DalAsync" displayName="DalAsync" namespace="MControl.Data.SqlClient">
            <hierarchyType id="T:MControl.Data.SqlClient.DalAsyncServer" displayName="DalAsyncServer" namespace="MControl.Data.SqlClient" />
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.Common.DalDB" displayName="DalDB" namespace="MControl.Data.Common">
          <hierarchyType id="T:MControl.Data.SqlClient.DalDB" displayName="DalDB" namespace="MControl.Data.SqlClient">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:MControl.Data.IDalDB" displayName="IDalDB" namespace="MControl.Data" fullName="MControl.Data.IDalDB" />
            </hierarchyInterfaces>
            <hierarchyType id="T:MControl.Data.SqlClient.DalCommand" displayName="DalCommand" namespace="MControl.Data.SqlClient">
              <hierarchyInterfaces>
                <hierarchyInterface id="T:MControl.Data.IDalCommand" displayName="IDalCommand" namespace="MControl.Data" fullName="MControl.Data.IDalCommand" />
                <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
              </hierarchyInterfaces>
            </hierarchyType>
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.DBFactory" displayName="DBFactory" namespace="MControl.Data">
          <hierarchyType id="T:MControl.Data.SqlClient.DBCmd" displayName="DBCmd" namespace="MControl.Data.SqlClient">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:MControl.Data.IDBCmd" displayName="IDBCmd" namespace="MControl.Data" fullName="MControl.Data.IDBCmd" />
              <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
            </hierarchyInterfaces>
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.SqlClient.CmdTran" displayName="CmdTran" namespace="MControl.Data.SqlClient" />
        <hierarchyType id="T:MControl.Data.SqlClient.CommandBuilder" displayName="CommandBuilder" namespace="MControl.Data.SqlClient" />
        <hierarchyType id="T:MControl.Data.SqlClient.DalBase" displayName="DalBase" namespace="MControl.Data.SqlClient">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:MControl.Data.IDalBase" displayName="IDalBase" namespace="MControl.Data" fullName="MControl.Data.IDalBase" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.SqlClient.DalCmd" displayName="DalCmd" namespace="MControl.Data.SqlClient" />
        <hierarchyType id="T:MControl.Data.SqlClient.DalFactory" displayName="DalFactory" namespace="MControl.Data.SqlClient" />
        <hierarchyType id="T:System.Attribute" displayName="Attribute" namespace="System">
          <hierarchyType id="T:MControl.Data.SqlClient.DalParamAttribute" displayName="DalParamAttribute" namespace="MControl.Data.SqlClient" />
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="MControl.Data.OleDb">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System">
        <hierarchyType id="T:MControl.Data.Common.DalAsync" displayName="DalAsync" namespace="MControl.Data.Common">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:MControl.Data.IDalAsync" displayName="IDalAsync" namespace="MControl.Data" fullName="MControl.Data.IDalAsync" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
          <hierarchyType id="T:MControl.Data.OleDb.DalAsync" displayName="DalAsync" namespace="MControl.Data.OleDb">
            <hierarchyType id="T:MControl.Data.OleDb.DalAsyncServer" displayName="DalAsyncServer" namespace="MControl.Data.OleDb" />
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.Common.DalDB" displayName="DalDB" namespace="MControl.Data.Common">
          <hierarchyType id="T:MControl.Data.OleDb.DalDB" displayName="DalDB" namespace="MControl.Data.OleDb">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:MControl.Data.IDalDB" displayName="IDalDB" namespace="MControl.Data" fullName="MControl.Data.IDalDB" />
            </hierarchyInterfaces>
            <hierarchyType id="T:MControl.Data.OleDb.DalCommand" displayName="DalCommand" namespace="MControl.Data.OleDb">
              <hierarchyInterfaces>
                <hierarchyInterface id="T:MControl.Data.IDalCommand" displayName="IDalCommand" namespace="MControl.Data" fullName="MControl.Data.IDalCommand" />
                <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
              </hierarchyInterfaces>
              <hierarchyType id="T:MControl.Data.OleDb.DalCommandServer" displayName="DalCommandServer" namespace="MControl.Data.OleDb" />
            </hierarchyType>
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.DBFactory" displayName="DBFactory" namespace="MControl.Data">
          <hierarchyType id="T:MControl.Data.OleDb.DBCmd" displayName="DBCmd" namespace="MControl.Data.OleDb">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:MControl.Data.IDBCmd" displayName="IDBCmd" namespace="MControl.Data" fullName="MControl.Data.IDBCmd" />
              <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
            </hierarchyInterfaces>
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.OleDb.CmdTran" displayName="CmdTran" namespace="MControl.Data.OleDb" />
        <hierarchyType id="T:MControl.Data.OleDb.DalBase" displayName="DalBase" namespace="MControl.Data.OleDb">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:MControl.Data.IDalBase" displayName="IDalBase" namespace="MControl.Data" fullName="MControl.Data.IDalBase" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.OleDb.DalCmd" displayName="DalCmd" namespace="MControl.Data.OleDb" />
        <hierarchyType id="T:MControl.Data.OleDb.DalFactory" displayName="DalFactory" namespace="MControl.Data.OleDb" />
        <hierarchyType id="T:System.Attribute" displayName="Attribute" namespace="System">
          <hierarchyType id="T:MControl.Data.OleDb.DalParamAttribute" displayName="DalParamAttribute" namespace="MControl.Data.OleDb" />
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="MControl.Data.Util">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System">
        <hierarchyType id="T:MControl.Data.ActiveBase" displayName="ActiveBase" namespace="MControl.Data">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:MControl.Data.IActiveRecord" displayName="IActiveRecord" namespace="MControl.Data" fullName="MControl.Data.IActiveRecord" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
          <hierarchyType id="T:MControl.Data.ActiveRecord" displayName="ActiveRecord" namespace="MControl.Data">
            <hierarchyType id="T:MControl.Data.Util.ActiveUser" displayName="ActiveUser" namespace="MControl.Data.Util">
              <hierarchyInterfaces>
                <hierarchyInterface id="T:MControl.Util.IPermsUser" displayName="IPermsUser" namespace="MControl.Util" fullName="MControl.Util.IPermsUser" />
              </hierarchyInterfaces>
            </hierarchyType>
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.Util.ActivePerms" displayName="ActivePerms" namespace="MControl.Data.Util">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:MControl.Util.IPerms" displayName="IPerms" namespace="MControl.Util" fullName="MControl.Util.IPerms" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.Util.DalStorage" displayName="DalStorage" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.DataSource" displayName="DataSource" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.DataSourceFactory" displayName="DataSourceFactory" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.DB" displayName="DB" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.DBCommands" displayName="DBCommands" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.DBCommon" displayName="DBCommon" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.DBManager" displayName="DBManager" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.DBObject" displayName="DBObject" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.DBObjectAttribute" displayName="DBObjectAttribute" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.DBObjectProperties" displayName="DBObjectProperties" namespace="MControl.Data.Util" />
        <hierarchyType id="T:MControl.Data.Util.Security" displayName="Security" namespace="MControl.Data.Util" />
        <hierarchyType id="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.Collections.ICollection" displayName="ICollection" namespace="System.Collections" fullName="System.Collections.ICollection" />
            <hierarchyInterface id="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" fullName="System.Collections.IEnumerable" />
            <hierarchyInterface id="T:System.Collections.IList" displayName="IList" namespace="System.Collections" fullName="System.Collections.IList" />
            <hierarchyInterface id="T:System.ICloneable" displayName="ICloneable" namespace="System" fullName="System.ICloneable" />
          </hierarchyInterfaces>
          <hierarchyType id="T:MControl.Data.Util.DBObjectAttributeCollection" displayName="DBObjectAttributeCollection" namespace="MControl.Data.Util" />
          <hierarchyType id="T:MControl.Data.Util.DBObjectCollection" displayName="DBObjectCollection" namespace="MControl.Data.Util" />
        </hierarchyType>
        <hierarchyType id="T:System.Collections.CollectionBase" displayName="CollectionBase" namespace="System.Collections">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.Collections.ICollection" displayName="ICollection" namespace="System.Collections" fullName="System.Collections.ICollection" />
            <hierarchyInterface id="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" fullName="System.Collections.IEnumerable" />
            <hierarchyInterface id="T:System.Collections.IList" displayName="IList" namespace="System.Collections" fullName="System.Collections.IList" />
          </hierarchyInterfaces>
          <hierarchyType id="T:MControl.Data.Util.DataSourceCollection" displayName="DataSourceCollection" namespace="MControl.Data.Util" />
        </hierarchyType>
        <hierarchyType id="T:System.Delegate" displayName="Delegate" namespace="System">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.ICloneable" displayName="ICloneable" namespace="System" fullName="System.ICloneable" />
            <hierarchyInterface id="T:System.Runtime.Serialization.ISerializable" displayName="ISerializable" namespace="System.Runtime.Serialization" fullName="System.Runtime.Serialization.ISerializable" />
          </hierarchyInterfaces>
          <hierarchyType id="T:System.MulticastDelegate" displayName="MulticastDelegate" namespace="System">
            <hierarchyType id="T:MControl.Data.Util.DalExceptionEventHandler" displayName="DalExceptionEventHandler" namespace="MControl.Data.Util" />
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:System.EventArgs" displayName="EventArgs" namespace="System">
          <hierarchyType id="T:MControl.Data.Util.DalExceptionEventArgs" displayName="DalExceptionEventArgs" namespace="MControl.Data.Util" />
        </hierarchyType>
        <hierarchyType id="T:System.ValueType" displayName="ValueType" namespace="System">
          <hierarchyType id="T:MControl.Data.Util.SYNCSOURCE" displayName="SYNCSOURCE" namespace="MControl.Data.Util" />
          <hierarchyType id="T:System.Enum" displayName="Enum" namespace="System">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:System.IComparable" displayName="IComparable" namespace="System" fullName="System.IComparable" />
              <hierarchyInterface id="T:System.IConvertible" displayName="IConvertible" namespace="System" fullName="System.IConvertible" />
              <hierarchyInterface id="T:System.IFormattable" displayName="IFormattable" namespace="System" fullName="System.IFormattable" />
            </hierarchyInterfaces>
            <hierarchyType id="T:MControl.Data.Util.DalErrors" displayName="DalErrors" namespace="MControl.Data.Util" />
            <hierarchyType id="T:MControl.Data.Util.DataStorageState" displayName="DataStorageState" namespace="MControl.Data.Util" />
            <hierarchyType id="T:MControl.Data.Util.DBCommon.ScriptObjectType" displayName="DBCommon.ScriptObjectType" namespace="MControl.Data.Util" />
            <hierarchyType id="T:MControl.Data.Util.DBCommon.ScriptType" displayName="DBCommon.ScriptType" namespace="MControl.Data.Util" />
            <hierarchyType id="T:MControl.Data.Util.DBConnectionType" displayName="DBConnectionType" namespace="MControl.Data.Util" />
            <hierarchyType id="T:MControl.Data.Util.StorageSettingState" displayName="StorageSettingState" namespace="MControl.Data.Util" />
            <hierarchyType id="T:MControl.Data.Util.StorageSyncState" displayName="StorageSyncState" namespace="MControl.Data.Util" />
            <hierarchyType id="T:MControl.Data.Util.SyncOption" displayName="SyncOption" namespace="MControl.Data.Util" />
          </hierarchyType>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="MControl.Data.Server">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System">
        <hierarchyType id="T:MControl.Data.Common.DalDB" displayName="DalDB" namespace="MControl.Data.Common">
          <hierarchyType id="T:MControl.Data.SqlClient.DalDB" displayName="DalDB" namespace="MControl.Data.SqlClient">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:MControl.Data.IDalDB" displayName="IDalDB" namespace="MControl.Data" fullName="MControl.Data.IDalDB" />
            </hierarchyInterfaces>
            <hierarchyType id="T:MControl.Data.SqlClient.DalCommand" displayName="DalCommand" namespace="MControl.Data.SqlClient">
              <hierarchyInterfaces>
                <hierarchyInterface id="T:MControl.Data.IDalCommand" displayName="IDalCommand" namespace="MControl.Data" fullName="MControl.Data.IDalCommand" />
                <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
              </hierarchyInterfaces>
              <hierarchyType id="T:MControl.Data.Server.DalCommandServer" displayName="DalCommandServer" namespace="MControl.Data.Server" />
            </hierarchyType>
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.Server.DalWs" displayName="DalWs" namespace="MControl.Data.Server" />
        <hierarchyType id="T:MControl.Data.Server.WsAdapter" displayName="WsAdapter" namespace="MControl.Data.Server" />
        <hierarchyType id="T:MControl.Data.Server.WsCommand" displayName="WsCommand" namespace="MControl.Data.Server" />
        <hierarchyType id="T:MControl.Data.Server.WsParameter" displayName="WsParameter" namespace="MControl.Data.Server" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="MControl.Data">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System">
        <hierarchyType id="T:MControl.Data.ActiveBase" displayName="ActiveBase" namespace="MControl.Data">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:MControl.Data.IActiveRecord" displayName="IActiveRecord" namespace="MControl.Data" fullName="MControl.Data.IActiveRecord" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
          <hierarchyType id="T:MControl.Data.ActiveRecord" displayName="ActiveRecord" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.ActiveRecordset" displayName="ActiveRecordset" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.ActiveView" displayName="ActiveView" namespace="MControl.Data" />
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.ActiveConfig" displayName="ActiveConfig" namespace="MControl.Data">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.ActiveRow" displayName="ActiveRow" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.AsyncDataSource" displayName="AsyncDataSource" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.Connections" displayName="Connections" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.DalMethods" displayName="DalMethods" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.DataField" displayName="DataField" namespace="MControl.Data">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.DataSetHelper" displayName="DataSetHelper" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.DataSetUtil" displayName="DataSetUtil" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.DataSource" displayName="DataSource" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.DataTableReader" displayName="DataTableReader" namespace="MControl.Data">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.DataUtil" displayName="DataUtil" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.DBFactory" displayName="DBFactory" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.DBParameter" displayName="DBParameter" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.IActiveRecord" displayName="IActiveRecord" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.IConnection" displayName="IConnection" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.IDalAsync" displayName="IDalAsync" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.IDalBase" displayName="IDalBase" namespace="MControl.Data">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.IDalCommand" displayName="IDalCommand" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.IDalDB" displayName="IDalDB" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.IDataSource" displayName="IDataSource" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.IDBCmd" displayName="IDBCmd" namespace="MControl.Data">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:MControl.Data.LookupView" displayName="LookupView" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.LookupView.KeysView" displayName="LookupView.KeysView" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.LookupView.ValuesView" displayName="LookupView.ValuesView" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.MAPPING" displayName="MAPPING" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.QueryBuilder" displayName="QueryBuilder" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.Relation" displayName="Relation" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.RESULT" displayName="RESULT" namespace="MControl.Data" />
        <hierarchyType id="T:MControl.Data.SqlBuilder" displayName="SqlBuilder" namespace="MControl.Data" />
        <hierarchyType id="T:System.Attribute" displayName="Attribute" namespace="System">
          <hierarchyType id="T:MControl.Data.DBCommandAttribute" displayName="DBCommandAttribute" namespace="MControl.Data" />
        </hierarchyType>
        <hierarchyType id="T:System.Collections.CollectionBase" displayName="CollectionBase" namespace="System.Collections">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.Collections.ICollection" displayName="ICollection" namespace="System.Collections" fullName="System.Collections.ICollection" />
            <hierarchyInterface id="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" fullName="System.Collections.IEnumerable" />
            <hierarchyInterface id="T:System.Collections.IList" displayName="IList" namespace="System.Collections" fullName="System.Collections.IList" />
          </hierarchyInterfaces>
          <hierarchyType id="T:MControl.Data.DataFieldCollection" displayName="DataFieldCollection" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.RelationCollection" displayName="RelationCollection" namespace="MControl.Data" />
        </hierarchyType>
        <hierarchyType id="T:System.ComponentModel.MarshalByValueComponent" displayName="MarshalByValueComponent" namespace="System.ComponentModel">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.ComponentModel.IComponent" displayName="IComponent" namespace="System.ComponentModel" fullName="System.ComponentModel.IComponent" />
            <hierarchyInterface id="T:System.IDisposable" displayName="IDisposable" namespace="System" fullName="System.IDisposable" />
            <hierarchyInterface id="T:System.IServiceProvider" displayName="IServiceProvider" namespace="System" fullName="System.IServiceProvider" />
          </hierarchyInterfaces>
          <hierarchyType id="T:System.Data.DataSet" displayName="DataSet" namespace="System.Data">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:System.ComponentModel.IListSource" displayName="IListSource" namespace="System.ComponentModel" fullName="System.ComponentModel.IListSource" />
              <hierarchyInterface id="T:System.ComponentModel.ISupportInitialize" displayName="ISupportInitialize" namespace="System.ComponentModel" fullName="System.ComponentModel.ISupportInitialize" />
              <hierarchyInterface id="T:System.ComponentModel.ISupportInitializeNotification" displayName="ISupportInitializeNotification" namespace="System.ComponentModel" fullName="System.ComponentModel.ISupportInitializeNotification" />
              <hierarchyInterface id="T:System.Runtime.Serialization.ISerializable" displayName="ISerializable" namespace="System.Runtime.Serialization" fullName="System.Runtime.Serialization.ISerializable" />
              <hierarchyInterface id="T:System.Xml.Serialization.IXmlSerializable" displayName="IXmlSerializable" namespace="System.Xml.Serialization" fullName="System.Xml.Serialization.IXmlSerializable" />
            </hierarchyInterfaces>
            <hierarchyType id="T:MControl.Data.DalSchema" displayName="DalSchema" namespace="MControl.Data" />
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:System.Data.DataRow" displayName="DataRow" namespace="System.Data">
          <hierarchyType id="T:MControl.Data.ActiveDataRow" displayName="ActiveDataRow" namespace="MControl.Data" />
        </hierarchyType>
        <hierarchyType id="T:System.Delegate" displayName="Delegate" namespace="System">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.ICloneable" displayName="ICloneable" namespace="System" fullName="System.ICloneable" />
            <hierarchyInterface id="T:System.Runtime.Serialization.ISerializable" displayName="ISerializable" namespace="System.Runtime.Serialization" fullName="System.Runtime.Serialization.ISerializable" />
          </hierarchyInterfaces>
          <hierarchyType id="T:System.MulticastDelegate" displayName="MulticastDelegate" namespace="System">
            <hierarchyType id="T:MControl.Data.AsyncDataFill" displayName="AsyncDataFill" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.AsyncDisplayStatus" displayName="AsyncDisplayStatus" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.SyncDataSourceEventHandler" displayName="SyncDataSourceEventHandler" namespace="MControl.Data" />
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:System.EventArgs" displayName="EventArgs" namespace="System">
          <hierarchyType id="T:MControl.Data.SyncDataSourceEventArgs" displayName="SyncDataSourceEventArgs" namespace="MControl.Data" />
        </hierarchyType>
        <hierarchyType id="T:System.Exception" displayName="Exception" namespace="System">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.Runtime.Serialization.ISerializable" displayName="ISerializable" namespace="System.Runtime.Serialization" fullName="System.Runtime.Serialization.ISerializable" />
          </hierarchyInterfaces>
          <hierarchyType id="T:System.ApplicationException" displayName="ApplicationException" namespace="System">
            <hierarchyType id="T:MControl.Data.DalException" displayName="DalException" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Util.AppException" displayName="AppException" namespace="MControl.Util">
              <hierarchyType id="T:MControl.Data.BinaryDataSetInvalidException" displayName="BinaryDataSetInvalidException" namespace="MControl.Data" />
              <hierarchyType id="T:MControl.Data.BinaryDataSetVersionException" displayName="BinaryDataSetVersionException" namespace="MControl.Data" />
            </hierarchyType>
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:System.ValueType" displayName="ValueType" namespace="System">
          <hierarchyType id="T:MControl.Data.CONNECTION" displayName="CONNECTION" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.CONSTRAINT" displayName="CONSTRAINT" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.DataKey" displayName="DataKey" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.DBCOMMAND" displayName="DBCOMMAND" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.Field" displayName="Field" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.IndexField" displayName="IndexField" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.Record" displayName="Record" namespace="MControl.Data" />
          <hierarchyType id="T:MControl.Data.STATUS" displayName="STATUS" namespace="MControl.Data" />
          <hierarchyType id="T:System.Enum" displayName="Enum" namespace="System">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:System.IComparable" displayName="IComparable" namespace="System" fullName="System.IComparable" />
              <hierarchyInterface id="T:System.IConvertible" displayName="IConvertible" namespace="System" fullName="System.IConvertible" />
              <hierarchyInterface id="T:System.IFormattable" displayName="IFormattable" namespace="System" fullName="System.IFormattable" />
            </hierarchyInterfaces>
            <hierarchyType id="T:MControl.Data.AcceptChanges" displayName="AcceptChanges" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.Aggregate" displayName="Aggregate" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.AggregationMode" displayName="AggregationMode" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.ChangesStatus" displayName="ChangesStatus" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.ConnectionMember" displayName="ConnectionMember" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.DalParamType" displayName="DalParamType" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.DalReturnType" displayName="DalReturnType" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.DBCommandType" displayName="DBCommandType" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.DBProvider" displayName="DBProvider" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.ParamDir" displayName="ParamDir" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.StatusPriority" displayName="StatusPriority" namespace="MControl.Data" />
            <hierarchyType id="T:MControl.Data.StreamDataSetFormat" displayName="StreamDataSetFormat" namespace="MControl.Data" />
          </hierarchyType>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
  </namespaceHierarchies>
  <assembly name="MControl.Data" filename="MControl.Data.dll" version="2.3.0.0">
    <attribute name="CompilationRelaxationsAttribute" id="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" target="assembly">
      <argument id="M:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.#ctor(System.Int32)" type="System.Int32" value="8" />
    </attribute>
    <attribute name="GuidAttribute" id="T:System.Runtime.InteropServices.GuidAttribute" target="assembly">
      <argument id="M:System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)" type="System.String" value="13d627a4-ff52-4e31-be2e-3bf196d143db" />
    </attribute>
    <attribute name="DebuggableAttribute" id="T:System.Diagnostics.DebuggableAttribute" target="assembly">
      <argument id="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)" type="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="DebuggingModes.IgnoreSymbolStoreSequencePoints" />
    </attribute>
    <attribute name="RuntimeCompatibilityAttribute" id="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" target="assembly">
      <property name="WrapNonExceptionThrows" id="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows" type="System.Boolean" value="True" />
    </attribute>
    <attribute name="AssemblyCopyrightAttribute" id="T:System.Reflection.AssemblyCopyrightAttribute" target="assembly">
      <argument id="M:System.Reflection.AssemblyCopyrightAttribute.#ctor(System.String)" type="System.String" value="Copyright © MControl.Net 2006" />
    </attribute>
    <attribute name="AssemblyFileVersionAttribute" id="T:System.Reflection.AssemblyFileVersionAttribute" target="assembly">
      <argument id="M:System.Reflection.AssemblyFileVersionAttribute.#ctor(System.String)" type="System.String" value="2.3.0.0" />
    </attribute>
    <attribute name="ComVisibleAttribute" id="T:System.Runtime.InteropServices.ComVisibleAttribute" target="assembly">
      <argument id="M:System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)" type="System.Boolean" value="False" />
    </attribute>
    <attribute name="AssemblyTrademarkAttribute" id="T:System.Reflection.AssemblyTrademarkAttribute" target="assembly">
      <argument id="M:System.Reflection.AssemblyTrademarkAttribute.#ctor(System.String)" type="System.String" value="" />
    </attribute>
    <attribute name="AssemblyCompanyAttribute" id="T:System.Reflection.AssemblyCompanyAttribute" target="assembly">
      <argument id="M:System.Reflection.AssemblyCompanyAttribute.#ctor(System.String)" type="System.String" value="MControl.Net" />
    </attribute>
    <attribute name="AssemblyProductAttribute" id="T:System.Reflection.AssemblyProductAttribute" target="assembly">
      <argument id="M:System.Reflection.AssemblyProductAttribute.#ctor(System.String)" type="System.String" value="MControl.Data" />
    </attribute>
    <attribute name="AssemblyConfigurationAttribute" id="T:System.Reflection.AssemblyConfigurationAttribute" target="assembly">
      <argument id="M:System.Reflection.AssemblyConfigurationAttribute.#ctor(System.String)" type="System.String" value="" />
    </attribute>
    <attribute name="AssemblyDescriptionAttribute" id="T:System.Reflection.AssemblyDescriptionAttribute" target="assembly">
      <argument id="M:System.Reflection.AssemblyDescriptionAttribute.#ctor(System.String)" type="System.String" value="Data Access Layer" />
    </attribute>
    <attribute name="AssemblyTitleAttribute" id="T:System.Reflection.AssemblyTitleAttribute" target="assembly">
      <argument id="M:System.Reflection.AssemblyTitleAttribute.#ctor(System.String)" type="System.String" value="MControl.Data" />
    </attribute>
    <module name="MControl.Data.dll">
      <namespace name="MControl.Data" id="N:MControl.Data">
        <class name="ActiveBase" id="T:MControl.Data.ActiveBase" access="Public" namespace="MControl.Data" displayName="ActiveBase" abstract="true">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <derivedBy id="T:MControl.Data.ActiveRecord" displayName="MControl.Data.ActiveRecord" />
          <derivedBy id="T:MControl.Data.ActiveRecordset" displayName="MControl.Data.ActiveRecordset" />
          <derivedBy id="T:MControl.Data.ActiveView" displayName="MControl.Data.ActiveView" />
          <implements name="IActiveRecord" id="T:MControl.Data.IActiveRecord" />
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructor name=".ctor" id="M:MControl.Data.ActiveBase.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.ActiveBase" /> class.</autoText></summary></documentation>
          </constructor>
          <property name="Count" id="P:MControl.Data.ActiveBase.Count" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <implements name="Count" id="P:MControl.Data.IActiveRecord.Count" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="CurrentIndex" id="P:MControl.Data.ActiveBase.CurrentIndex" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
            <implements name="CurrentIndex" id="P:MControl.Data.IActiveRecord.CurrentIndex" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="HasErrors" id="P:MControl.Data.ActiveBase.HasErrors" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="HasErrors" id="P:MControl.Data.IActiveRecord.HasErrors" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.ActiveBase.Initilaized" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Initilaized" id="P:MControl.Data.IActiveRecord.Initilaized" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.ActiveBase.IsEmpty" access="Public" contract="Virtual">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="IsEmpty" id="P:MControl.Data.IActiveRecord.IsEmpty" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <propertyOverload name="Item" id="Overload:MControl.Data.ActiveBase.Item">
            <property name="Item" id="P:MControl.Data.ActiveBase.Item(System.String)" access="Public" contract="Abstract">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <implements name="Item" id="P:MControl.Data.IActiveRecord.Item(System.String)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.ActiveBase.Item(System.Int32)" access="Public" contract="Abstract">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <implements name="Item" id="P:MControl.Data.IActiveRecord.Item(System.Int32)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="columnIndex">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </property>
          </propertyOverload>
          <property name="ItemArray" id="P:MControl.Data.ActiveBase.ItemArray" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object">
              <array rank="1" />
            </type>
            <get access="Public" />
            <set access="Public" />
            <implements name="ItemArray" id="P:MControl.Data.IActiveRecord.ItemArray" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="RowError" id="P:MControl.Data.ActiveBase.RowError" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
            <implements name="RowError" id="P:MControl.Data.IActiveRecord.RowError" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="RowState" id="P:MControl.Data.ActiveBase.RowState" access="Public" contract="Abstract">
            <type name="DataRowState" id="T:System.Data.DataRowState" valueType="true" />
            <get access="Public" />
            <implements name="RowState" id="P:MControl.Data.IActiveRecord.RowState" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="Table" id="P:MControl.Data.ActiveBase.Table" access="Public" contract="Abstract">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
            <implements name="Table" id="P:MControl.Data.IActiveRecord.Table" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <method name="AcceptChanges" id="M:MControl.Data.ActiveBase.AcceptChanges" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AcceptChanges" id="M:MControl.Data.IActiveRecord.AcceptChanges" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="AddColumnMapping" id="M:MControl.Data.ActiveBase.AddColumnMapping(System.String,System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="BeginEdit" id="M:MControl.Data.ActiveBase.BeginEdit" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="BeginEdit" id="M:MControl.Data.IActiveRecord.BeginEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="CancelEdit" id="M:MControl.Data.ActiveBase.CancelEdit" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="CancelEdit" id="M:MControl.Data.IActiveRecord.CancelEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="ClearErrors" id="M:MControl.Data.ActiveBase.ClearErrors" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="ClearErrors" id="M:MControl.Data.IActiveRecord.ClearErrors" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="CreateMapping" id="M:MControl.Data.ActiveBase.CreateMapping" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="Delete" id="M:MControl.Data.ActiveBase.Delete" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Delete" id="M:MControl.Data.IActiveRecord.Delete" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="Dispose" id="M:MControl.Data.ActiveBase.Dispose" access="Public" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
          </method>
          <method name="EndEdit" id="M:MControl.Data.ActiveBase.EndEdit" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="EndEdit" id="M:MControl.Data.IActiveRecord.EndEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="GetBoolValue" id="M:MControl.Data.ActiveBase.GetBoolValue(System.String)" access="Family" contract="Virtual">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDateValue" id="M:MControl.Data.ActiveBase.GetDateValue(System.String)" access="Family" contract="Virtual">
            <type name="DateTime" id="T:System.DateTime" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDecimalValue" id="M:MControl.Data.ActiveBase.GetDecimalValue(System.String)" access="Family" contract="Virtual">
            <type name="Decimal" id="T:System.Decimal" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDoubleValue" id="M:MControl.Data.ActiveBase.GetDoubleValue(System.String)" access="Family" contract="Virtual">
            <type name="Double" id="T:System.Double" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIntValue" id="M:MControl.Data.ActiveBase.GetIntValue(System.String)" access="Family" contract="Virtual">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetStringValue" id="M:MControl.Data.ActiveBase.GetStringValue(System.String)" access="Family" contract="Virtual">
            <type name="String" id="T:System.String" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetValue" id="Overload:MControl.Data.ActiveBase.GetValue">
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String)" access="Family" contract="Abstract">
              <type name="Object" id="T:System.Object" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Int32)" access="Public" contract="Virtual">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.Int32)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Decimal)" access="Public" contract="Virtual">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <implements name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.Decimal)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Double)" access="Public" contract="Virtual">
              <type name="Double" id="T:System.Double" valueType="true" />
              <implements name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.Double)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Boolean)" access="Public" contract="Virtual">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <implements name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.Boolean)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.String)" access="Public" contract="Virtual">
              <type name="String" id="T:System.String" />
              <implements name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.String)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.DateTime)" access="Public" contract="Virtual">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <implements name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.DateTime)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Refresh" id="M:MControl.Data.ActiveBase.Refresh" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Refresh" id="M:MControl.Data.IActiveRecord.Refresh" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="RejectChanges" id="M:MControl.Data.ActiveBase.RejectChanges" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="RejectChanges" id="M:MControl.Data.IActiveRecord.RejectChanges" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="SetValue" id="M:MControl.Data.ActiveBase.SetValue(System.String,System.Object)" access="Family" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.ActiveBase.UpdateChanges">
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.Data.IDbConnection)" access="Public" contract="Virtual">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IActiveRecord.UpdateChanges(System.Data.IDbConnection)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.String,MControl.Data.DBProvider)" access="Public" contract="Virtual">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IActiveRecord.UpdateChanges(System.String,MControl.Data.DBProvider)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="ActiveConfig" id="T:MControl.Data.ActiveConfig" access="Public" namespace="MControl.Data" displayName="ActiveConfig">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.ActiveConfig.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.ActiveConfig.#ctor(System.Data.DataTable)" access="Public" contract="Normal">
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveConfig.#ctor(System.Data.IDbConnection,System.String)" access="Public" contract="Normal">
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveConfig.#ctor(System.Data.IDbConnection,System.String,System.String,System.String)" access="Public" contract="Normal">
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keyName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="valueName">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Copy" id="P:MControl.Data.ActiveConfig.Copy" access="Public" contract="Normal">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
          </property>
          <property name="Count" id="P:MControl.Data.ActiveConfig.Count" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsDirty" id="P:MControl.Data.ActiveConfig.IsDirty" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.ActiveConfig.IsEmpty" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsSynchronized" id="P:MControl.Data.ActiveConfig.IsSynchronized" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Item" id="P:MControl.Data.ActiveConfig.Item(System.Object)" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
            <parameter name="key">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </property>
          <property name="KeyName" id="P:MControl.Data.ActiveConfig.KeyName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="Keys" id="P:MControl.Data.ActiveConfig.Keys" access="Public" contract="Normal">
            <type name="ICollection" id="T:System.Collections.ICollection" />
            <get access="Public" />
          </property>
          <property name="SyncRoot" id="P:MControl.Data.ActiveConfig.SyncRoot" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
          </property>
          <property name="ValueName" id="P:MControl.Data.ActiveConfig.ValueName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="Values" id="P:MControl.Data.ActiveConfig.Values" access="Public" contract="Normal">
            <type name="ICollection" id="T:System.Collections.ICollection" />
            <get access="Public" />
          </property>
          <methodOverload name="Add" id="Overload:MControl.Data.ActiveConfig.Add">
            <method name="Add" id="M:MControl.Data.ActiveConfig.Add(System.Object,System.Object)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="key">
                <type name="Object" id="T:System.Object" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Add" id="M:MControl.Data.ActiveConfig.Add(System.Object,System.Object,System.String)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="key">
                <type name="Object" id="T:System.Object" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
              <parameter name="section">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Contains" id="M:MControl.Data.ActiveConfig.Contains(System.Object)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="key">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="ContainsKey" id="M:MControl.Data.ActiveConfig.ContainsKey(System.Object)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="key">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="ContainsValue" id="M:MControl.Data.ActiveConfig.ContainsValue(System.Object)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="CopyTo" id="M:MControl.Data.ActiveConfig.CopyTo(System.Array,System.Int32)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="array">
              <type name="Array" id="T:System.Array" />
            </parameter>
            <parameter name="index">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="Dispose" id="M:MControl.Data.ActiveConfig.Dispose" access="Public" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
          </method>
          <method name="Finalize" id="M:MControl.Data.ActiveConfig.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="GetBoolValue" id="M:MControl.Data.ActiveConfig.GetBoolValue(System.String)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDateValue" id="M:MControl.Data.ActiveConfig.GetDateValue(System.String)" access="Public" contract="Normal">
            <type name="DateTime" id="T:System.DateTime" valueType="true" />
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDecimalValue" id="M:MControl.Data.ActiveConfig.GetDecimalValue(System.String)" access="Public" contract="Normal">
            <type name="Decimal" id="T:System.Decimal" valueType="true" />
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDoubleValue" id="M:MControl.Data.ActiveConfig.GetDoubleValue(System.String)" access="Public" contract="Normal">
            <type name="Double" id="T:System.Double" valueType="true" />
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIntValue" id="M:MControl.Data.ActiveConfig.GetIntValue(System.String)" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetStringValue" id="M:MControl.Data.ActiveConfig.GetStringValue(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetValue" id="Overload:MControl.Data.ActiveConfig.GetValue">
            <method name="GetValue" id="M:MControl.Data.ActiveConfig.GetValue(System.String)" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveConfig.GetValue(System.String,System.Int32)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveConfig.GetValue(System.String,System.Decimal)" access="Public" contract="Normal">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveConfig.GetValue(System.String,System.Double)" access="Public" contract="Normal">
              <type name="Double" id="T:System.Double" valueType="true" />
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveConfig.GetValue(System.String,System.Boolean)" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveConfig.GetValue(System.String,System.String)" access="Public" contract="Normal">
              <type name="String" id="T:System.String" />
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveConfig.GetValue(System.String,System.DateTime)" access="Public" contract="Normal">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetValues" id="M:MControl.Data.ActiveConfig.GetValues(System.String)" access="Public" contract="Normal">
            <type name="Record" id="T:MControl.Data.Record" valueType="true">
              <array rank="1" />
            </type>
            <parameter name="section">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Refresh" id="M:MControl.Data.ActiveConfig.Refresh" access="Public" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="SetValue" id="M:MControl.Data.ActiveConfig.SetValue(System.Object,System.Object)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="key">
              <type name="Object" id="T:System.Object" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.ActiveConfig.UpdateChanges">
            <method name="UpdateChanges" id="M:MControl.Data.ActiveConfig.UpdateChanges(System.String,MControl.Data.DBProvider)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.ActiveConfig.UpdateChanges(System.Data.IDbConnection)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.ActiveConfig.UpdateChanges(MControl.Data.IDBCmd)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="cmd">
                <type name="IDBCmd" id="T:MControl.Data.IDBCmd" />
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="ActiveDataRow" id="T:MControl.Data.ActiveDataRow" access="Public" namespace="MControl.Data" displayName="ActiveDataRow">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <base name="DataRow" id="T:System.Data.DataRow" displayName="System.Data.DataRow" />
          <constructor name=".ctor" id="M:MControl.Data.ActiveDataRow.#ctor(System.Data.DataRowBuilder)" access="Public" contract="Normal">
            <parameter name="builder">
              <type name="DataRowBuilder" id="T:System.Data.DataRowBuilder" />
            </parameter>
          </constructor>
          <method name="GetBoolValue" id="M:MControl.Data.ActiveDataRow.GetBoolValue(System.String)" access="Family" contract="Virtual">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDateValue" id="M:MControl.Data.ActiveDataRow.GetDateValue(System.String)" access="Family" contract="Virtual">
            <type name="DateTime" id="T:System.DateTime" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDecimalValue" id="M:MControl.Data.ActiveDataRow.GetDecimalValue(System.String)" access="Family" contract="Virtual">
            <type name="Decimal" id="T:System.Decimal" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDoubleValue" id="M:MControl.Data.ActiveDataRow.GetDoubleValue(System.String)" access="Family" contract="Virtual">
            <type name="Double" id="T:System.Double" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIntValue" id="M:MControl.Data.ActiveDataRow.GetIntValue(System.String)" access="Family" contract="Virtual">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetStringValue" id="M:MControl.Data.ActiveDataRow.GetStringValue(System.String)" access="Family" contract="Virtual">
            <type name="String" id="T:System.String" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetValue" id="Overload:MControl.Data.ActiveDataRow.GetValue">
            <method name="GetValue" id="M:MControl.Data.ActiveDataRow.GetValue(System.String)" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveDataRow.GetValue(System.String,System.Int32)" access="Family" contract="Virtual">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveDataRow.GetValue(System.String,System.Decimal)" access="Family" contract="Virtual">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveDataRow.GetValue(System.String,System.Double)" access="Family" contract="Virtual">
              <type name="Double" id="T:System.Double" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveDataRow.GetValue(System.String,System.Boolean)" access="Family" contract="Virtual">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveDataRow.GetValue(System.String,System.String)" access="Family" contract="Virtual">
              <type name="String" id="T:System.String" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveDataRow.GetValue(System.String,System.DateTime)" access="Family" contract="Virtual">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="SetValue" id="M:MControl.Data.ActiveDataRow.SetValue(System.String,System.Object)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
        </class>
        <class name="ActiveRecord" id="T:MControl.Data.ActiveRecord" access="Public" namespace="MControl.Data" displayName="ActiveRecord">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <base name="ActiveBase" id="T:MControl.Data.ActiveBase" displayName="MControl.Data.ActiveBase" />
          <derivedBy id="T:MControl.Data.Util.ActiveUser" displayName="MControl.Data.Util.ActiveUser" />
          <implements name="IActiveRecord" id="T:MControl.Data.IActiveRecord" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.ActiveRecord.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.ActiveRecord" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.ActiveRecord.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.ActiveRecord" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveRecord.#ctor(System.Data.DataRow)" access="Public" contract="Normal">
              <parameter name="row">
                <type name="DataRow" id="T:System.Data.DataRow" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Count" id="P:MControl.Data.ActiveRecord.Count" access="Public" contract="Override">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <implements name="Count" id="P:MControl.Data.IActiveRecord.Count" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
            <attribute name="EditorBrowsableAttribute" id="T:System.ComponentModel.EditorBrowsableAttribute">
              <argument id="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)" type="System.ComponentModel.EditorBrowsableState" value="EditorBrowsableState.Never" />
            </attribute>
          </property>
          <property name="CurrentIndex" id="P:MControl.Data.ActiveRecord.CurrentIndex" access="Public" contract="Override">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
            <implements name="CurrentIndex" id="P:MControl.Data.IActiveRecord.CurrentIndex" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
            <attribute name="EditorBrowsableAttribute" id="T:System.ComponentModel.EditorBrowsableAttribute">
              <argument id="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)" type="System.ComponentModel.EditorBrowsableState" value="EditorBrowsableState.Never" />
            </attribute>
          </property>
          <property name="HasErrors" id="P:MControl.Data.ActiveRecord.HasErrors" access="Public" contract="Override">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="HasErrors" id="P:MControl.Data.IActiveRecord.HasErrors" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.ActiveRecord.Initilaized" access="Public" contract="Override">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Initilaized" id="P:MControl.Data.IActiveRecord.Initilaized" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.ActiveBase.IsEmpty" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <get access="Public" />
          </property>
          <propertyOverload name="Item" id="Overload:MControl.Data.ActiveRecord.Item">
            <property name="Item" id="P:MControl.Data.ActiveRecord.Item(System.String)" access="Public" contract="Override">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <implements name="Item" id="P:MControl.Data.IActiveRecord.Item(System.String)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.ActiveRecord.Item(System.Int32)" access="Public" contract="Override">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <implements name="Item" id="P:MControl.Data.IActiveRecord.Item(System.Int32)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="columnIndex">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </property>
          </propertyOverload>
          <property name="ItemArray" id="P:MControl.Data.ActiveRecord.ItemArray" access="Public" contract="Override">
            <type name="Object" id="T:System.Object">
              <array rank="1" />
            </type>
            <get access="Public" />
            <set access="Public" />
            <implements name="ItemArray" id="P:MControl.Data.IActiveRecord.ItemArray" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="RowError" id="P:MControl.Data.ActiveRecord.RowError" access="Public" contract="Override">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
            <implements name="RowError" id="P:MControl.Data.IActiveRecord.RowError" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="RowState" id="P:MControl.Data.ActiveRecord.RowState" access="Public" contract="Override">
            <type name="DataRowState" id="T:System.Data.DataRowState" valueType="true" />
            <get access="Public" />
            <implements name="RowState" id="P:MControl.Data.IActiveRecord.RowState" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="Table" id="P:MControl.Data.ActiveRecord.Table" access="Public" contract="Override">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
            <implements name="Table" id="P:MControl.Data.IActiveRecord.Table" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <method name="AcceptChanges" id="M:MControl.Data.ActiveRecord.AcceptChanges" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AcceptChanges" id="M:MControl.Data.IActiveRecord.AcceptChanges" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="AddColumnMapping" id="M:MControl.Data.ActiveBase.AddColumnMapping(System.String,System.String)" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="BeginEdit" id="M:MControl.Data.ActiveRecord.BeginEdit" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="BeginEdit" id="M:MControl.Data.IActiveRecord.BeginEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="CancelEdit" id="M:MControl.Data.ActiveRecord.CancelEdit" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="CancelEdit" id="M:MControl.Data.IActiveRecord.CancelEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="ClearErrors" id="M:MControl.Data.ActiveRecord.ClearErrors" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="ClearErrors" id="M:MControl.Data.IActiveRecord.ClearErrors" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="CreateMapping" id="M:MControl.Data.ActiveBase.CreateMapping" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveBase" />
          <method name="Delete" id="M:MControl.Data.ActiveRecord.Delete" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Delete" id="M:MControl.Data.IActiveRecord.Delete" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="Dispose" id="M:MControl.Data.ActiveRecord.Dispose" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
          </method>
          <method name="EndEdit" id="M:MControl.Data.ActiveRecord.EndEdit" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="EndEdit" id="M:MControl.Data.IActiveRecord.EndEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="GetBoolValue" id="M:MControl.Data.ActiveBase.GetBoolValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetChildRows" id="M:MControl.Data.ActiveRecord.GetChildRows(System.Data.DataRelation)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetDateValue" id="M:MControl.Data.ActiveBase.GetDateValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDecimalValue" id="M:MControl.Data.ActiveBase.GetDecimalValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDoubleValue" id="M:MControl.Data.ActiveBase.GetDoubleValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIntValue" id="M:MControl.Data.ActiveBase.GetIntValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetParentRow" id="M:MControl.Data.ActiveRecord.GetParentRow(System.Data.DataRelation)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow" />
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetParentRows" id="M:MControl.Data.ActiveRecord.GetParentRows(System.Data.DataRelation)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetStringValue" id="M:MControl.Data.ActiveBase.GetStringValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetValue" id="Overload:MControl.Data.ActiveRecord.GetValue">
            <method name="GetValue" id="M:MControl.Data.ActiveRecord.GetValue(System.String)" access="Family" contract="Override">
              <type name="Object" id="T:System.Object" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Int32)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Decimal)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Double)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Boolean)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.String)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.DateTime)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Init" id="Overload:MControl.Data.ActiveRecord.Init">
            <method name="Init" id="M:MControl.Data.ActiveRecord.Init(System.Data.DataRow)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="row">
                <type name="DataRow" id="T:System.Data.DataRow" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.ActiveRecord.Init(System.Data.IDbConnection,System.String,System.String)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Refresh" id="M:MControl.Data.ActiveRecord.Refresh" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Refresh" id="M:MControl.Data.IActiveRecord.Refresh" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="RejectChanges" id="M:MControl.Data.ActiveRecord.RejectChanges" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="RejectChanges" id="M:MControl.Data.IActiveRecord.RejectChanges" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="SetValue" id="M:MControl.Data.ActiveRecord.SetValue(System.String,System.Object)" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <methodOverload name="ToString" id="Overload:MControl.Data.ActiveRecord.ToString">
            <method name="ToString" id="M:MControl.Data.ActiveRecord.ToString" access="Public" contract="Override">
              <type name="String" id="T:System.String" />
            </method>
            <method name="ToString" id="M:MControl.Data.ActiveRecord.ToString(System.Boolean)" access="Public" contract="Normal">
              <type name="String" id="T:System.String" />
              <parameter name="useCaption">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.ActiveRecord.UpdateChanges" declaringType="T:MControl.Data.ActiveBase">
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.Data.IDbConnection)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.String,MControl.Data.DBProvider)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="ActiveRecordset" id="T:MControl.Data.ActiveRecordset" access="Public" namespace="MControl.Data" displayName="ActiveRecordset">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <base name="ActiveBase" id="T:MControl.Data.ActiveBase" displayName="MControl.Data.ActiveBase" />
          <implements name="IActiveRecord" id="T:MControl.Data.IActiveRecord" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.ActiveRecordset.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.ActiveRecordset" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.ActiveRecordset.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.ActiveRecordset" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveRecordset.#ctor(System.Data.DataRow[])" access="Public" contract="Normal">
              <parameter name="rows">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveRecordset.#ctor(System.Data.DataTable)" access="Public" contract="Normal">
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveRecordset.#ctor(System.Collections.Generic.List{System.Data.DataRow})" access="Public" contract="Normal">
              <parameter name="rowList">
                <type name="List`1" id="T:System.Collections.Generic.List`1">
                  <typeparam name="DataRow" id="T:System.Data.DataRow" />
                </type>
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveRecordset.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)" access="Family" contract="Normal">
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="state">
                <type name="DataViewRowState" id="T:System.Data.DataViewRowState" valueType="true" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Count" id="P:MControl.Data.ActiveRecordset.Count" access="Public" contract="Override">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <implements name="Count" id="P:MControl.Data.IActiveRecord.Count" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="CurrentIndex" id="P:MControl.Data.ActiveRecordset.CurrentIndex" access="Public" contract="Override">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
            <implements name="CurrentIndex" id="P:MControl.Data.IActiveRecord.CurrentIndex" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="HasErrors" id="P:MControl.Data.ActiveRecordset.HasErrors" access="Public" contract="Override">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="HasErrors" id="P:MControl.Data.IActiveRecord.HasErrors" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.ActiveRecordset.Initilaized" access="Public" contract="Override">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Initilaized" id="P:MControl.Data.IActiveRecord.Initilaized" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.ActiveBase.IsEmpty" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <get access="Public" />
          </property>
          <property name="IsReadOnly" id="P:MControl.Data.ActiveRecordset.IsReadOnly" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsSynchronized" id="P:MControl.Data.ActiveRecordset.IsSynchronized" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <propertyOverload name="Item" id="Overload:MControl.Data.ActiveRecordset.Item">
            <property name="Item" id="P:MControl.Data.ActiveRecordset.Item(System.Int32,System.String)" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <parameter name="index">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.ActiveRecordset.Item(System.String)" access="Public" contract="Override">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <implements name="Item" id="P:MControl.Data.IActiveRecord.Item(System.String)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.ActiveRecordset.Item(System.Int32)" access="Public" contract="Override">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <implements name="Item" id="P:MControl.Data.IActiveRecord.Item(System.Int32)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="columnIndex">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </property>
          </propertyOverload>
          <property name="ItemArray" id="P:MControl.Data.ActiveRecordset.ItemArray" access="Public" contract="Override">
            <type name="Object" id="T:System.Object">
              <array rank="1" />
            </type>
            <get access="Public" />
            <set access="Public" />
            <implements name="ItemArray" id="P:MControl.Data.IActiveRecord.ItemArray" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="RowError" id="P:MControl.Data.ActiveRecordset.RowError" access="Public" contract="Override">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
            <implements name="RowError" id="P:MControl.Data.IActiveRecord.RowError" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="RowState" id="P:MControl.Data.ActiveRecordset.RowState" access="Public" contract="Override">
            <type name="DataRowState" id="T:System.Data.DataRowState" valueType="true" />
            <get access="Public" />
            <implements name="RowState" id="P:MControl.Data.IActiveRecord.RowState" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="Table" id="P:MControl.Data.ActiveRecordset.Table" access="Public" contract="Override">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
            <implements name="Table" id="P:MControl.Data.IActiveRecord.Table" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <method name="AcceptChanges" id="M:MControl.Data.ActiveRecordset.AcceptChanges" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AcceptChanges" id="M:MControl.Data.IActiveRecord.AcceptChanges" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="AddColumnMapping" id="M:MControl.Data.ActiveBase.AddColumnMapping(System.String,System.String)" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="BeginEdit" id="M:MControl.Data.ActiveRecordset.BeginEdit" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="BeginEdit" id="M:MControl.Data.IActiveRecord.BeginEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="CancelEdit" id="M:MControl.Data.ActiveRecordset.CancelEdit" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="CancelEdit" id="M:MControl.Data.IActiveRecord.CancelEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="ClearErrors" id="M:MControl.Data.ActiveRecordset.ClearErrors" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="ClearErrors" id="M:MControl.Data.IActiveRecord.ClearErrors" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="CompareRecord" id="M:MControl.Data.ActiveRecordset.CompareRecord(System.Int32,System.String,System.Object)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="index">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="column">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="CreateMapping" id="M:MControl.Data.ActiveBase.CreateMapping" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveBase" />
          <method name="Delete" id="M:MControl.Data.ActiveRecordset.Delete" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Delete" id="M:MControl.Data.IActiveRecord.Delete" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="Dispose" id="M:MControl.Data.ActiveRecordset.Dispose" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
          </method>
          <method name="EndEdit" id="M:MControl.Data.ActiveRecordset.EndEdit" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="EndEdit" id="M:MControl.Data.IActiveRecord.EndEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <methodOverload name="Find" id="Overload:MControl.Data.ActiveRecordset.Find">
            <method name="Find" id="M:MControl.Data.ActiveRecordset.Find(System.Object)" access="Public" contract="Normal">
              <type name="ActiveRecordset" id="T:MControl.Data.ActiveRecordset" />
              <parameter name="key">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Find" id="M:MControl.Data.ActiveRecordset.Find(System.Object[])" access="Public" contract="Normal">
              <type name="ActiveRecordset" id="T:MControl.Data.ActiveRecordset" />
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="Find" id="M:MControl.Data.ActiveRecordset.Find(System.String,System.Object)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Find" id="M:MControl.Data.ActiveRecordset.Find(System.String[],System.Object[])" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="columns">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="values">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="Find" id="M:MControl.Data.ActiveRecordset.Find(MControl.Data.Field[])" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="fields" isParamArray="true">
                <type name="Field" id="T:MControl.Data.Field" valueType="true">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetActiveRow" id="M:MControl.Data.ActiveRecordset.GetActiveRow(System.Object[])" access="Public" contract="Normal">
            <type name="ActiveRow" id="T:MControl.Data.ActiveRow" />
            <parameter name="keys">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="GetBoolValue" id="M:MControl.Data.ActiveBase.GetBoolValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetChildRows" id="M:MControl.Data.ActiveRecordset.GetChildRows(System.Data.DataRelation)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetDateValue" id="M:MControl.Data.ActiveBase.GetDateValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDecimalValue" id="M:MControl.Data.ActiveBase.GetDecimalValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDoubleValue" id="M:MControl.Data.ActiveBase.GetDoubleValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIntValue" id="M:MControl.Data.ActiveBase.GetIntValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetParentRow" id="M:MControl.Data.ActiveRecordset.GetParentRow(System.Data.DataRelation)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow" />
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetParentRows" id="M:MControl.Data.ActiveRecordset.GetParentRows(System.Data.DataRelation)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetStringValue" id="M:MControl.Data.ActiveBase.GetStringValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetValue" id="Overload:MControl.Data.ActiveRecordset.GetValue">
            <method name="GetValue" id="M:MControl.Data.ActiveRecordset.GetValue(System.String,System.String,System.Object[])" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRecordset.GetValue(System.String,System.String,System.Object[],System.Int32)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRecordset.GetValue(System.String,System.String,System.Object[],System.Decimal)" access="Public" contract="Normal">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRecordset.GetValue(System.String,System.String,System.Object[],System.Double)" access="Public" contract="Normal">
              <type name="Double" id="T:System.Double" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRecordset.GetValue(System.String,System.String,System.Object[],System.Boolean)" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRecordset.GetValue(System.String,System.String,System.Object[],System.DateTime)" access="Public" contract="Normal">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRecordset.GetValue(System.String)" access="Family" contract="Override">
              <type name="Object" id="T:System.Object" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Int32)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Decimal)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Double)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Boolean)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.String)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.DateTime)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Init" id="Overload:MControl.Data.ActiveRecordset.Init">
            <method name="Init" id="M:MControl.Data.ActiveRecordset.Init(System.Data.DataRow[])" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="rows">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.ActiveRecordset.Init(System.Data.DataTable)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.ActiveRecordset.Init(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="state">
                <type name="DataViewRowState" id="T:System.Data.DataViewRowState" valueType="true" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.ActiveRecordset.Init(System.Data.IDbConnection,System.String,System.String)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="MoveTo" id="Overload:MControl.Data.ActiveRecordset.MoveTo">
            <method name="MoveTo" id="M:MControl.Data.ActiveRecordset.MoveTo(System.String,System.Object)" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="MoveTo" id="M:MControl.Data.ActiveRecordset.MoveTo(System.String[],System.Object[])" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="columns">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="values">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="MoveTo" id="M:MControl.Data.ActiveRecordset.MoveTo(MControl.Data.Field[])" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="fields">
                <type name="Field" id="T:MControl.Data.Field" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <method name="Refresh" id="M:MControl.Data.ActiveRecordset.Refresh" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Refresh" id="M:MControl.Data.IActiveRecord.Refresh" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="RejectChanges" id="M:MControl.Data.ActiveRecordset.RejectChanges" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="RejectChanges" id="M:MControl.Data.IActiveRecord.RejectChanges" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <methodOverload name="Select" id="Overload:MControl.Data.ActiveRecordset.Select">
            <method name="Select" id="M:MControl.Data.ActiveRecordset.Select(System.String,System.String,System.Data.DataViewRowState)" access="Public" contract="Normal">
              <type name="ActiveRecordset" id="T:MControl.Data.ActiveRecordset" />
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="state">
                <type name="DataViewRowState" id="T:System.Data.DataViewRowState" valueType="true" />
              </parameter>
            </method>
            <method name="Select" id="M:MControl.Data.ActiveRecordset.Select(System.String,System.String)" access="Public" contract="Normal">
              <type name="ActiveRecordset" id="T:MControl.Data.ActiveRecordset" />
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Select" id="M:MControl.Data.ActiveRecordset.Select(System.String)" access="Public" contract="Normal">
              <type name="ActiveRecordset" id="T:MControl.Data.ActiveRecordset" />
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="SetValue" id="M:MControl.Data.ActiveRecordset.SetValue(System.String,System.Object)" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <methodOverload name="ToString" id="Overload:MControl.Data.ActiveRecordset.ToString">
            <method name="ToString" id="M:MControl.Data.ActiveRecordset.ToString" access="Public" contract="Override">
              <type name="String" id="T:System.String" />
            </method>
            <method name="ToString" id="M:MControl.Data.ActiveRecordset.ToString(System.Boolean)" access="Public" contract="Normal">
              <type name="String" id="T:System.String" />
              <parameter name="useCaption">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.ActiveRecordset.UpdateChanges" declaringType="T:MControl.Data.ActiveBase">
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.Data.IDbConnection)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.String,MControl.Data.DBProvider)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ValidCurrent" id="M:MControl.Data.ActiveRecordset.ValidCurrent" access="Family" contract="Virtual">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </method>
          <method name="ValidCurrentWithException" id="M:MControl.Data.ActiveRecordset.ValidCurrentWithException" access="Family" contract="Virtual">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </method>
        </class>
        <class name="ActiveRow" id="T:MControl.Data.ActiveRow" access="Public" namespace="MControl.Data" displayName="ActiveRow">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.ActiveRow.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.ActiveRow.#ctor(System.Data.DataRow)" access="Public" contract="Normal">
              <parameter name="dr">
                <type name="DataRow" id="T:System.Data.DataRow" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveRow.#ctor(MControl.Data.ActiveRow)" access="Public" contract="Normal">
              <parameter name="ar">
                <type name="ActiveRow" id="T:MControl.Data.ActiveRow" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="DataRow" id="P:MControl.Data.ActiveRow.DataRow" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.ActiveRow.IsEmpty" access="Public" contract="Virtual">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="ItemArray" id="P:MControl.Data.ActiveRow.ItemArray" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object">
              <array rank="1" />
            </type>
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="GetBoolValue" id="M:MControl.Data.ActiveRow.GetBoolValue(System.String)" access="Public" contract="Virtual">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDateValue" id="M:MControl.Data.ActiveRow.GetDateValue(System.String)" access="Public" contract="Virtual">
            <type name="DateTime" id="T:System.DateTime" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDecimalValue" id="M:MControl.Data.ActiveRow.GetDecimalValue(System.String)" access="Public" contract="Virtual">
            <type name="Decimal" id="T:System.Decimal" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDoubleValue" id="M:MControl.Data.ActiveRow.GetDoubleValue(System.String)" access="Public" contract="Virtual">
            <type name="Double" id="T:System.Double" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIntValue" id="M:MControl.Data.ActiveRow.GetIntValue(System.String)" access="Public" contract="Virtual">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetStringValue" id="M:MControl.Data.ActiveRow.GetStringValue(System.String)" access="Public" contract="Virtual">
            <type name="String" id="T:System.String" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetValue" id="Overload:MControl.Data.ActiveRow.GetValue">
            <method name="GetValue" id="M:MControl.Data.ActiveRow.GetValue(System.String)" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRow.GetValue(System.String,System.Int32)" access="Public" contract="Virtual">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRow.GetValue(System.String,System.Decimal)" access="Public" contract="Virtual">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRow.GetValue(System.String,System.Double)" access="Public" contract="Virtual">
              <type name="Double" id="T:System.Double" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRow.GetValue(System.String,System.Boolean)" access="Public" contract="Virtual">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRow.GetValue(System.String,System.String)" access="Public" contract="Virtual">
              <type name="String" id="T:System.String" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveRow.GetValue(System.String,System.DateTime)" access="Public" contract="Virtual">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="SetValue" id="M:MControl.Data.ActiveRow.SetValue(System.String,System.Object)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
        </class>
        <class name="ActiveView" id="T:MControl.Data.ActiveView" access="Public" namespace="MControl.Data" displayName="ActiveView">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <base name="ActiveBase" id="T:MControl.Data.ActiveBase" displayName="MControl.Data.ActiveBase" />
          <implements name="IActiveRecord" id="T:MControl.Data.IActiveRecord" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.ActiveView.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.ActiveView" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.ActiveView.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.ActiveView" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveView.#ctor(System.Data.DataTable)" access="Public" contract="Normal">
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.ActiveView.#ctor(System.Data.DataView)" access="Public" contract="Normal">
              <parameter name="view">
                <type name="DataView" id="T:System.Data.DataView" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Count" id="P:MControl.Data.ActiveView.Count" access="Public" contract="Override">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <implements name="Count" id="P:MControl.Data.IActiveRecord.Count" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="CurrentIndex" id="P:MControl.Data.ActiveView.CurrentIndex" access="Public" contract="Override">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
            <implements name="CurrentIndex" id="P:MControl.Data.IActiveRecord.CurrentIndex" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="HasErrors" id="P:MControl.Data.ActiveView.HasErrors" access="Public" contract="Override">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="HasErrors" id="P:MControl.Data.IActiveRecord.HasErrors" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.ActiveView.Initilaized" access="Public" contract="Override">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Initilaized" id="P:MControl.Data.IActiveRecord.Initilaized" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.ActiveBase.IsEmpty" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <get access="Public" />
          </property>
          <propertyOverload name="Item" id="Overload:MControl.Data.ActiveView.Item">
            <property name="Item" id="P:MControl.Data.ActiveView.Item(System.String)" access="Public" contract="Override">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <implements name="Item" id="P:MControl.Data.IActiveRecord.Item(System.String)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.ActiveView.Item(System.Int32)" access="Public" contract="Override">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <implements name="Item" id="P:MControl.Data.IActiveRecord.Item(System.Int32)" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
              <parameter name="columnIndex">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </property>
          </propertyOverload>
          <property name="ItemArray" id="P:MControl.Data.ActiveView.ItemArray" access="Public" contract="Override">
            <type name="Object" id="T:System.Object">
              <array rank="1" />
            </type>
            <get access="Public" />
            <set access="Public" />
            <implements name="ItemArray" id="P:MControl.Data.IActiveRecord.ItemArray" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="RowError" id="P:MControl.Data.ActiveView.RowError" access="Public" contract="Override">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
            <implements name="RowError" id="P:MControl.Data.IActiveRecord.RowError" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="RowState" id="P:MControl.Data.ActiveView.RowState" access="Public" contract="Override">
            <type name="DataRowState" id="T:System.Data.DataRowState" valueType="true" />
            <get access="Public" />
            <implements name="RowState" id="P:MControl.Data.IActiveRecord.RowState" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="Table" id="P:MControl.Data.ActiveView.Table" access="Public" contract="Override">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
            <implements name="Table" id="P:MControl.Data.IActiveRecord.Table" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </property>
          <property name="View" id="P:MControl.Data.ActiveView.View" access="Public" contract="Normal">
            <type name="DataView" id="T:System.Data.DataView" />
            <get access="Public" />
          </property>
          <method name="AcceptChanges" id="M:MControl.Data.ActiveView.AcceptChanges" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AcceptChanges" id="M:MControl.Data.IActiveRecord.AcceptChanges" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="AddColumnMapping" id="M:MControl.Data.ActiveBase.AddColumnMapping(System.String,System.String)" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="BeginEdit" id="M:MControl.Data.ActiveView.BeginEdit" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="BeginEdit" id="M:MControl.Data.IActiveRecord.BeginEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="CancelEdit" id="M:MControl.Data.ActiveView.CancelEdit" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="CancelEdit" id="M:MControl.Data.IActiveRecord.CancelEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="ClearErrors" id="M:MControl.Data.ActiveView.ClearErrors" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="ClearErrors" id="M:MControl.Data.IActiveRecord.ClearErrors" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="CompareRecord" id="M:MControl.Data.ActiveView.CompareRecord(System.Int32,System.String,System.Object)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="index">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="column">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="CreateMapping" id="M:MControl.Data.ActiveBase.CreateMapping" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveBase" />
          <method name="Delete" id="M:MControl.Data.ActiveView.Delete" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Delete" id="M:MControl.Data.IActiveRecord.Delete" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="Dispose" id="M:MControl.Data.ActiveView.Dispose" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
          </method>
          <method name="EndEdit" id="M:MControl.Data.ActiveView.EndEdit" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="EndEdit" id="M:MControl.Data.IActiveRecord.EndEdit" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <methodOverload name="Find" id="Overload:MControl.Data.ActiveView.Find">
            <method name="Find" id="M:MControl.Data.ActiveView.Find(System.String,System.Object)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Find" id="M:MControl.Data.ActiveView.Find(System.String,System.Object[])" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="columns">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetActiveRow" id="M:MControl.Data.ActiveView.GetActiveRow(System.Object[])" access="Public" contract="Normal">
            <type name="ActiveRow" id="T:MControl.Data.ActiveRow" />
            <parameter name="keys">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="GetBoolValue" id="M:MControl.Data.ActiveBase.GetBoolValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetChildRows" id="M:MControl.Data.ActiveView.GetChildRows(System.Data.DataRelation)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetDateValue" id="M:MControl.Data.ActiveBase.GetDateValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDecimalValue" id="M:MControl.Data.ActiveBase.GetDecimalValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDoubleValue" id="M:MControl.Data.ActiveBase.GetDoubleValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIntValue" id="M:MControl.Data.ActiveBase.GetIntValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetParentRow" id="M:MControl.Data.ActiveView.GetParentRow(System.Data.DataRelation)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow" />
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetParentRows" id="M:MControl.Data.ActiveView.GetParentRows(System.Data.DataRelation)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetStringValue" id="M:MControl.Data.ActiveBase.GetStringValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetValue" id="Overload:MControl.Data.ActiveView.GetValue">
            <method name="GetValue" id="M:MControl.Data.ActiveView.GetValue(System.String,System.String,System.Object[])" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveView.GetValue(System.String,System.String,System.Object[],System.Int32)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveView.GetValue(System.String,System.String,System.Object[],System.Decimal)" access="Public" contract="Normal">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveView.GetValue(System.String,System.String,System.Object[],System.Double)" access="Public" contract="Normal">
              <type name="Double" id="T:System.Double" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveView.GetValue(System.String,System.String,System.Object[],System.Boolean)" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveView.GetValue(System.String,System.String,System.Object[],System.DateTime)" access="Public" contract="Normal">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="keys">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveView.GetValue(System.String)" access="Family" contract="Override">
              <type name="Object" id="T:System.Object" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Int32)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Decimal)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Double)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Boolean)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.String)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.DateTime)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Init" id="Overload:MControl.Data.ActiveView.Init">
            <method name="Init" id="M:MControl.Data.ActiveView.Init(System.Data.DataView)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="view">
                <type name="DataView" id="T:System.Data.DataView" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.ActiveView.Init(System.Data.DataTable,System.Boolean)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="isCopy">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.ActiveView.Init(System.Data.DataTable,System.Boolean,System.Boolean)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="isCopy">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="readOnly">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.ActiveView.Init(System.Data.IDbConnection,System.String,System.String)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="MoveTo" id="Overload:MControl.Data.ActiveView.MoveTo">
            <method name="MoveTo" id="M:MControl.Data.ActiveView.MoveTo(System.String,System.Object)" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="MoveTo" id="M:MControl.Data.ActiveView.MoveTo(System.String,System.Object[])" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="columns">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Refresh" id="M:MControl.Data.ActiveView.Refresh" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Refresh" id="M:MControl.Data.IActiveRecord.Refresh" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <method name="RejectChanges" id="M:MControl.Data.ActiveView.RejectChanges" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="RejectChanges" id="M:MControl.Data.IActiveRecord.RejectChanges" interface="IActiveRecord" interfaceId="T:MControl.Data.IActiveRecord" declaringType="MControl.Data.IActiveRecord" />
          </method>
          <methodOverload name="Select" id="Overload:MControl.Data.ActiveView.Select">
            <method name="Select" id="M:MControl.Data.ActiveView.Select(System.String,System.String,System.Data.DataViewRowState)" access="Public" contract="Normal">
              <type name="ActiveView" id="T:MControl.Data.ActiveView" />
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="state">
                <type name="DataViewRowState" id="T:System.Data.DataViewRowState" valueType="true" />
              </parameter>
            </method>
            <method name="Select" id="M:MControl.Data.ActiveView.Select(System.String,System.String)" access="Public" contract="Normal">
              <type name="ActiveView" id="T:MControl.Data.ActiveView" />
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Select" id="M:MControl.Data.ActiveView.Select(System.String)" access="Public" contract="Normal">
              <type name="ActiveView" id="T:MControl.Data.ActiveView" />
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="SetValue" id="M:MControl.Data.ActiveView.SetValue(System.String,System.Object)" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <methodOverload name="ToString" id="Overload:MControl.Data.ActiveView.ToString">
            <method name="ToString" id="M:MControl.Data.ActiveView.ToString" access="Public" contract="Override">
              <type name="String" id="T:System.String" />
            </method>
            <method name="ToString" id="M:MControl.Data.ActiveView.ToString(System.Boolean)" access="Public" contract="Normal">
              <type name="String" id="T:System.String" />
              <parameter name="useCaption">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.ActiveView.UpdateChanges" declaringType="T:MControl.Data.ActiveBase">
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.Data.IDbConnection)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.String,MControl.Data.DBProvider)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ValidCurrent" id="M:MControl.Data.ActiveView.ValidCurrent" access="Family" contract="Virtual">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </method>
          <method name="ValidCurrentWithException" id="M:MControl.Data.ActiveView.ValidCurrentWithException" access="Family" contract="Virtual">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </method>
        </class>
        <class name="AsyncDataSource" id="T:MControl.Data.AsyncDataSource" access="Public" namespace="MControl.Data" displayName="AsyncDataSource">
          <constructor name=".ctor" id="M:MControl.Data.AsyncDataSource.#ctor(MControl.Data.IDataSource)" access="Public" contract="Normal">
            <parameter name="ctl">
              <type name="IDataSource" id="T:MControl.Data.IDataSource" />
            </parameter>
          </constructor>
          <property name="IsCompleted" id="P:MControl.Data.AsyncDataSource.IsCompleted" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="RecordIndex" id="P:MControl.Data.AsyncDataSource.RecordIndex" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
          </property>
          <methodOverload name="Invoke" id="Overload:MControl.Data.AsyncDataSource.Invoke">
            <method name="Invoke" id="M:MControl.Data.AsyncDataSource.Invoke(System.Data.IDbConnection,System.String,System.String,System.Int32,System.Int32)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="connection">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="fastFirstRows">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="maxRows">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Invoke" id="M:MControl.Data.AsyncDataSource.Invoke(System.Data.IDataReader,System.Data.DataTable,System.String,System.Int32,System.Int32)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="reader">
                <type name="IDataReader" id="T:System.Data.IDataReader" />
              </parameter>
              <parameter name="tblSchema">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="fastFirstRows">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="maxRows">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Invoke" id="M:MControl.Data.AsyncDataSource.Invoke(System.Data.IDataReader,System.String[],System.String,System.Int32,System.Int32)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="reader">
                <type name="IDataReader" id="T:System.Data.IDataReader" />
              </parameter>
              <parameter name="fields">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="fastFirstRows">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="maxRows">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Invoke" id="M:MControl.Data.AsyncDataSource.Invoke(System.Data.IDataReader,System.String)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="reader">
                <type name="IDataReader" id="T:System.Data.IDataReader" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <event name="LoadDataSourceEnd" id="E:MControl.Data.AsyncDataSource.LoadDataSourceEnd" access="Public" contract="Normal" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
        </class>
        <class name="BinaryDataSetInvalidException" id="T:MControl.Data.BinaryDataSetInvalidException" access="Public" namespace="MControl.Data" displayName="BinaryDataSetInvalidException">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <base name="AppException" id="T:MControl.Util.AppException" displayName="MControl.Util.AppException">
            <base name="ApplicationException" id="T:System.ApplicationException" displayName="System.ApplicationException">
              <base name="Exception" id="T:System.Exception" displayName="System.Exception" />
            </base>
          </base>
          <implements name="ISerializable" id="T:System.Runtime.Serialization.ISerializable" inherited="true" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.BinaryDataSetInvalidException.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.BinaryDataSetInvalidException" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.BinaryDataSetInvalidException.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.BinaryDataSetInvalidException" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.BinaryDataSetInvalidException.#ctor(System.Exception)" access="Public" contract="Normal">
              <parameter name="p_InnerException">
                <type name="Exception" id="T:System.Exception" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.BinaryDataSetInvalidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" access="Family" contract="Normal">
              <parameter name="p_Info">
                <type name="SerializationInfo" id="T:System.Runtime.Serialization.SerializationInfo" />
              </parameter>
              <parameter name="p_StreamingContext">
                <type name="StreamingContext" id="T:System.Runtime.Serialization.StreamingContext" valueType="true" />
              </parameter>
            </constructor>
          </constructorOverload>
        </class>
        <class name="BinaryDataSetVersionException" id="T:MControl.Data.BinaryDataSetVersionException" access="Public" namespace="MControl.Data" displayName="BinaryDataSetVersionException">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <base name="AppException" id="T:MControl.Util.AppException" displayName="MControl.Util.AppException">
            <base name="ApplicationException" id="T:System.ApplicationException" displayName="System.ApplicationException">
              <base name="Exception" id="T:System.Exception" displayName="System.Exception" />
            </base>
          </base>
          <implements name="ISerializable" id="T:System.Runtime.Serialization.ISerializable" inherited="true" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.BinaryDataSetVersionException.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.BinaryDataSetVersionException" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.BinaryDataSetVersionException.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.BinaryDataSetVersionException" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.BinaryDataSetVersionException.#ctor(System.Exception)" access="Public" contract="Normal">
              <parameter name="p_InnerException">
                <type name="Exception" id="T:System.Exception" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.BinaryDataSetVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" access="Family" contract="Normal">
              <parameter name="p_Info">
                <type name="SerializationInfo" id="T:System.Runtime.Serialization.SerializationInfo" />
              </parameter>
              <parameter name="p_StreamingContext">
                <type name="StreamingContext" id="T:System.Runtime.Serialization.StreamingContext" valueType="true" />
              </parameter>
            </constructor>
          </constructorOverload>
        </class>
        <class name="Connections" id="T:MControl.Data.Connections" access="Public" namespace="MControl.Data" displayName="Connections" abstract="true" sealed="true">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <property name="CONNECTIONS" id="P:MControl.Data.Connections.CONNECTIONS" access="Public" contract="Static">
            <type name="List`1" id="T:System.Collections.Generic.List`1">
              <typeparam name="CONNECTION" id="T:MControl.Data.CONNECTION" />
            </type>
            <get access="Public" />
          </property>
          <method name="CreateConnections" id="M:MControl.Data.Connections.CreateConnections(MControl.Data.CONNECTION[],System.Boolean,System.String)" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="con">
              <type name="CONNECTION" id="T:MControl.Data.CONNECTION" valueType="true">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="encrypted">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
            <parameter name="path">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetConnection" id="Overload:MControl.Data.Connections.GetConnection" contract="Static">
            <method name="GetConnection" id="M:MControl.Data.Connections.GetConnection(System.String)" access="Public" contract="Static">
              <type name="CONNECTION" id="T:MControl.Data.CONNECTION" valueType="true" />
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetConnection" id="M:MControl.Data.Connections.GetConnection(System.String,System.String)" access="Public" contract="Static">
              <type name="CONNECTION" id="T:MControl.Data.CONNECTION" valueType="true" />
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="path">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="GetConnectionString" id="Overload:MControl.Data.Connections.GetConnectionString" contract="Static">
            <method name="GetConnectionString" id="M:MControl.Data.Connections.GetConnectionString(System.String)" access="Public" contract="Static">
              <type name="String" id="T:System.String" />
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetConnectionString" id="M:MControl.Data.Connections.GetConnectionString(System.String,System.String)" access="Public" contract="Static">
              <type name="String" id="T:System.String" />
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="path">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ReadDalServer" id="M:MControl.Data.Connections.ReadDalServer(System.String)" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="path">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="SetConnecions" id="Overload:MControl.Data.Connections.SetConnecions" contract="Static">
            <method name="SetConnecions" id="M:MControl.Data.Connections.SetConnecions" access="Public" contract="Static">
              <type name="Void" id="T:System.Void" valueType="true" />
            </method>
            <method name="SetConnecions" id="M:MControl.Data.Connections.SetConnecions(System.String)" access="Public" contract="Static">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="path">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="DalException" id="T:MControl.Data.DalException" access="Public" namespace="MControl.Data" displayName="DalException" sealed="true">
          <base name="ApplicationException" id="T:System.ApplicationException" displayName="System.ApplicationException">
            <base name="Exception" id="T:System.Exception" displayName="System.Exception" />
          </base>
          <implements name="ISerializable" id="T:System.Runtime.Serialization.ISerializable" inherited="true" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.DalException.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.DalException.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="msg">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DalException.#ctor(System.String,System.Exception)" access="Public" contract="Normal">
              <parameter name="msg">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="inner">
                <type name="Exception" id="T:System.Exception" />
              </parameter>
            </constructor>
          </constructorOverload>
        </class>
        <class name="DalMethods" id="T:MControl.Data.DalMethods" access="Public" namespace="MControl.Data" displayName="DalMethods">
          <constructor name=".ctor" id="M:MControl.Data.DalMethods.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.DalMethods" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="ReturnTypesString" id="F:MControl.Data.DalMethods.ReturnTypesString" access="Public" contract="Static" literal="true" value="Int,Object,DalSchema,DataSet,DataTable,DataRow[],IDataAdapter,IDataReader,IDbCommand">
            <type name="String" id="T:System.String" />
          </field>
          <method name="DBCommandTypeToCommandType" id="M:MControl.Data.DalMethods.DBCommandTypeToCommandType(MControl.Data.DBCommandType)" access="Public" contract="Static">
            <type name="CommandType" id="T:System.Data.CommandType" valueType="true" />
            <parameter name="dbcmd">
              <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="GetReturnType" id="Overload:MControl.Data.DalMethods.GetReturnType" contract="Static">
            <method name="GetReturnType" id="M:MControl.Data.DalMethods.GetReturnType(MControl.Data.DalReturnType)" access="Public" contract="Static">
              <type name="Type" id="T:System.Type" />
              <parameter name="typ">
                <type name="DalReturnType" id="T:MControl.Data.DalReturnType" valueType="true" />
              </parameter>
            </method>
            <method name="GetReturnType" id="M:MControl.Data.DalMethods.GetReturnType(System.String)" access="Public" contract="Static">
              <type name="Type" id="T:System.Type" />
              <parameter name="typ">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ParseEnum" id="M:MControl.Data.DalMethods.ParseEnum(System.Type,System.String,System.Boolean,System.Int32)" access="Public" contract="Static">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="enumType">
              <type name="Type" id="T:System.Type" />
            </parameter>
            <parameter name="value">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="ignoreCase">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
            <parameter name="defaultValue">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
        </class>
        <class name="DalSchema" id="T:MControl.Data.DalSchema" access="Public" namespace="MControl.Data" displayName="DalSchema">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <attribute name="HelpKeywordAttribute" id="T:System.ComponentModel.Design.HelpKeywordAttribute">
            <argument id="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.String)" type="System.String" value="vs.data.DataSet" />
          </attribute>
          <attribute name="XmlRootAttribute" id="T:System.Xml.Serialization.XmlRootAttribute">
            <argument id="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)" type="System.String" value="DalSchema" />
          </attribute>
          <attribute name="GeneratedCodeAttribute" id="T:System.CodeDom.Compiler.GeneratedCodeAttribute">
            <argument id="M:System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)" type="System.String" value="System.Data.Design.TypedDataSetGenerator" />
            <argument id="M:System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)" type="System.String" value="2.0.0.0" />
          </attribute>
          <attribute name="DesignerCategoryAttribute" id="T:System.ComponentModel.DesignerCategoryAttribute">
            <argument id="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)" type="System.String" value="code" />
          </attribute>
          <attribute name="ToolboxItemAttribute" id="T:System.ComponentModel.ToolboxItemAttribute">
            <argument id="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Boolean)" type="System.Boolean" value="True" />
          </attribute>
          <attribute name="XmlSchemaProviderAttribute" id="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
            <argument id="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)" type="System.String" value="GetTypedDataSetSchema" />
          </attribute>
          <base name="DataSet" id="T:System.Data.DataSet" displayName="System.Data.DataSet">
            <base name="MarshalByValueComponent" id="T:System.ComponentModel.MarshalByValueComponent" displayName="System.ComponentModel.MarshalByValueComponent" />
          </base>
          <implements name="IComponent" id="T:System.ComponentModel.IComponent" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <implements name="IServiceProvider" id="T:System.IServiceProvider" inherited="true" />
          <implements name="IListSource" id="T:System.ComponentModel.IListSource" inherited="true" />
          <implements name="IXmlSerializable" id="T:System.Xml.Serialization.IXmlSerializable" inherited="true" />
          <implements name="ISupportInitializeNotification" id="T:System.ComponentModel.ISupportInitializeNotification" inherited="true" />
          <implements name="ISupportInitialize" id="T:System.ComponentModel.ISupportInitialize" inherited="true" />
          <implements name="ISerializable" id="T:System.Runtime.Serialization.ISerializable" inherited="true" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.DalSchema.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.DalSchema" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.DalSchema.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.DalSchema" /> class.</autoText></summary></documentation>
              <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DalSchema.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" access="Family" contract="Normal">
              <parameter name="info">
                <type name="SerializationInfo" id="T:System.Runtime.Serialization.SerializationInfo" />
              </parameter>
              <parameter name="context">
                <type name="StreamingContext" id="T:System.Runtime.Serialization.StreamingContext" valueType="true" />
              </parameter>
              <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
            </constructor>
          </constructorOverload>
          <property name="Relations" id="P:MControl.Data.DalSchema.Relations" access="Public" contract="Normal">
            <type name="DataRelationCollection" id="T:System.Data.DataRelationCollection" />
            <get access="Public" />
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
            <attribute name="DesignerSerializationVisibilityAttribute" id="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
              <argument id="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)" type="System.ComponentModel.DesignerSerializationVisibility" value="DesignerSerializationVisibility.Hidden" />
            </attribute>
          </property>
          <property name="SchemaSerializationMode" id="P:MControl.Data.DalSchema.SchemaSerializationMode" access="Public" contract="Override">
            <type name="SchemaSerializationMode" id="T:System.Data.SchemaSerializationMode" valueType="true" />
            <get access="Public" />
            <set access="Public" />
            <attribute name="BrowsableAttribute" id="T:System.ComponentModel.BrowsableAttribute">
              <argument id="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)" type="System.Boolean" value="True" />
            </attribute>
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
            <attribute name="DesignerSerializationVisibilityAttribute" id="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
              <argument id="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)" type="System.ComponentModel.DesignerSerializationVisibility" value="DesignerSerializationVisibility.Visible" />
            </attribute>
          </property>
          <property name="Tables" id="P:MControl.Data.DalSchema.Tables" access="Public" contract="Normal">
            <type name="DataTableCollection" id="T:System.Data.DataTableCollection" />
            <get access="Public" />
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
            <attribute name="DesignerSerializationVisibilityAttribute" id="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
              <argument id="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)" type="System.ComponentModel.DesignerSerializationVisibility" value="DesignerSerializationVisibility.Hidden" />
            </attribute>
          </property>
          <method name="Clone" id="M:MControl.Data.DalSchema.Clone" access="Public" contract="Override">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
          </method>
          <method name="GetSchemaSerializable" id="M:MControl.Data.DalSchema.GetSchemaSerializable" access="Family" contract="Override">
            <type name="XmlSchema" id="T:System.Xml.Schema.XmlSchema" />
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
          </method>
          <method name="GetTypedDataSetSchema" id="M:MControl.Data.DalSchema.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)" access="Public" contract="Static">
            <type name="XmlSchemaComplexType" id="T:System.Xml.Schema.XmlSchemaComplexType" />
            <parameter name="xs">
              <type name="XmlSchemaSet" id="T:System.Xml.Schema.XmlSchemaSet" />
            </parameter>
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
          </method>
          <method name="InitializeDerivedDataSet" id="M:MControl.Data.DalSchema.InitializeDerivedDataSet" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
          </method>
          <method name="ReadXmlSerializable" id="M:MControl.Data.DalSchema.ReadXmlSerializable(System.Xml.XmlReader)" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="reader">
              <type name="XmlReader" id="T:System.Xml.XmlReader" />
            </parameter>
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
          </method>
          <method name="ShouldSerializeRelations" id="M:MControl.Data.DalSchema.ShouldSerializeRelations" access="Family" contract="Override">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
          </method>
          <method name="ShouldSerializeTables" id="M:MControl.Data.DalSchema.ShouldSerializeTables" access="Family" contract="Override">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <attribute name="DebuggerNonUserCodeAttribute" id="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
          </method>
        </class>
        <class name="DataField" id="T:MControl.Data.DataField" access="Public" namespace="MControl.Data" displayName="DataField">
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.DataField.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.DataField.#ctor(System.String,System.Object,MControl.DataTypes)" access="Public" contract="Normal">
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
              <parameter name="fieldType">
                <type name="DataTypes" id="T:MControl.DataTypes" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DataField.#ctor(System.String,System.Object)" access="Public" contract="Normal">
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Caption" id="P:MControl.Data.DataField.Caption" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="FieldType" id="P:MControl.Data.DataField.FieldType" access="Public" contract="Normal">
            <type name="DataTypes" id="T:MControl.DataTypes" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Items" id="P:MControl.Data.DataField.Items" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <get access="Public" />
            <attribute name="EditorAttribute" id="T:System.ComponentModel.EditorAttribute">
              <argument id="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)" type="System.String" value="System.Windows.Forms.Design.StringCollectionEditor,System.Design" />
              <argument id="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)" type="System.String" value="System.Drawing.Design.UITypeEditor,System.Drawing" />
            </attribute>
            <attribute name="DesignerSerializationVisibilityAttribute" id="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
              <argument id="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)" type="System.ComponentModel.DesignerSerializationVisibility" value="DesignerSerializationVisibility.Content" />
            </attribute>
            <attribute name="CategoryAttribute" id="T:System.ComponentModel.CategoryAttribute">
              <argument id="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)" type="System.String" value="Data" />
            </attribute>
          </property>
          <property name="Key" id="P:MControl.Data.DataField.Key" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Text" id="P:MControl.Data.DataField.Text" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Value" id="P:MControl.Data.DataField.Value" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="Dispose" id="M:MControl.Data.DataField.Dispose" access="Public" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
          </method>
          <method name="Finalize" id="M:MControl.Data.DataField.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="OnValueChanged" id="M:MControl.Data.DataField.OnValueChanged(System.EventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="ValueToBool" id="M:MControl.Data.DataField.ValueToBool" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </method>
          <method name="ValueToDateTime" id="M:MControl.Data.DataField.ValueToDateTime" access="Public" contract="Normal">
            <type name="DateTime" id="T:System.DateTime" valueType="true" />
          </method>
          <method name="ValueToDecimal" id="M:MControl.Data.DataField.ValueToDecimal" access="Public" contract="Normal">
            <type name="Decimal" id="T:System.Decimal" valueType="true" />
          </method>
          <method name="ValueToDouble" id="M:MControl.Data.DataField.ValueToDouble" access="Public" contract="Normal">
            <type name="Double" id="T:System.Double" valueType="true" />
          </method>
          <method name="ValueToInt" id="M:MControl.Data.DataField.ValueToInt" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
          </method>
          <event name="ValueChanged" id="E:MControl.Data.DataField.ValueChanged" access="Public" contract="Normal" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
        </class>
        <class name="DataFieldCollection" id="T:MControl.Data.DataFieldCollection" access="Public" namespace="MControl.Data" displayName="DataFieldCollection">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <base name="CollectionBase" id="T:System.Collections.CollectionBase" displayName="System.Collections.CollectionBase" />
          <implements name="IList" id="T:System.Collections.IList" inherited="true" />
          <implements name="ICollection" id="T:System.Collections.ICollection" inherited="true" />
          <implements name="IEnumerable" id="T:System.Collections.IEnumerable" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.DataFieldCollection.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.DataFieldCollection" /> class.</autoText></summary></documentation>
          </constructor>
          <propertyOverload name="Item" id="Overload:MControl.Data.DataFieldCollection.Item">
            <property name="Item" id="P:MControl.Data.DataFieldCollection.Item(System.Int32)" access="Public" contract="Normal">
              <type name="DataField" id="T:MControl.Data.DataField" />
              <get access="Public" />
              <parameter name="index">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.DataFieldCollection.Item(System.String)" access="Public" contract="Normal">
              <type name="DataField" id="T:MControl.Data.DataField" />
              <get access="Public" />
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
          </propertyOverload>
          <method name="Add" id="M:MControl.Data.DataFieldCollection.Add(MControl.Data.DataField)" access="Public" contract="Normal">
            <type name="DataField" id="T:MControl.Data.DataField" />
            <parameter name="field">
              <type name="DataField" id="T:MControl.Data.DataField" />
            </parameter>
          </method>
          <method name="AddNoDuplicate" id="M:MControl.Data.DataFieldCollection.AddNoDuplicate(MControl.Data.DataField)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="field">
              <type name="DataField" id="T:MControl.Data.DataField" />
            </parameter>
          </method>
          <method name="AddRange" id="M:MControl.Data.DataFieldCollection.AddRange(MControl.Data.DataField[])" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="cols">
              <type name="DataField" id="T:MControl.Data.DataField">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="Clear" id="M:MControl.Data.DataFieldCollection.Clear" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="Contains" id="M:MControl.Data.DataFieldCollection.Contains(MControl.Data.DataField)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="field">
              <type name="DataField" id="T:MControl.Data.DataField" />
            </parameter>
          </method>
          <method name="CopyTo" id="M:MControl.Data.DataFieldCollection.CopyTo(MControl.Data.DataField[])" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="fields">
              <type name="DataField" id="T:MControl.Data.DataField">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="GetFieldsArray" id="M:MControl.Data.DataFieldCollection.GetFieldsArray" access="Public" contract="Normal">
            <type name="DataField" id="T:MControl.Data.DataField">
              <array rank="1" />
            </type>
          </method>
          <method name="IndexOf" id="M:MControl.Data.DataFieldCollection.IndexOf(MControl.Data.DataField)" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="value">
              <type name="DataField" id="T:MControl.Data.DataField" />
            </parameter>
          </method>
          <method name="Insert" id="M:MControl.Data.DataFieldCollection.Insert(MControl.Data.DataField,System.Int32)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="field">
              <type name="DataField" id="T:MControl.Data.DataField" />
            </parameter>
            <parameter name="index">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="OnCollectionChanged" id="M:MControl.Data.DataFieldCollection.OnCollectionChanged(System.EventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="Remove" id="M:MControl.Data.DataFieldCollection.Remove(MControl.Data.DataField)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="field">
              <type name="DataField" id="T:MControl.Data.DataField" />
            </parameter>
          </method>
          <method name="RemoveAt" id="M:MControl.Data.DataFieldCollection.RemoveAt(System.Int32)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="index">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <event name="CollectionChanged" id="E:MControl.Data.DataFieldCollection.CollectionChanged" access="Public" contract="Normal" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
        </class>
        <class name="DataSetHelper" id="T:MControl.Data.DataSetHelper" access="Public" namespace="MControl.Data" displayName="DataSetHelper">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.DataSetHelper.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.DataSetHelper.#ctor(System.Data.DataSet@)" access="Public" contract="Normal">
              <parameter name="DataSet" direction="ref">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DataSetHelper.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.DataSetHelper" /> class.</autoText></summary></documentation>
            </constructor>
          </constructorOverload>
          <field name="ds" id="F:MControl.Data.DataSetHelper.ds" access="Public" contract="Normal">
            <type name="DataSet" id="T:System.Data.DataSet" />
          </field>
          <method name="CreateGroupByTable" id="M:MControl.Data.DataSetHelper.CreateGroupByTable(System.String,System.Data.DataTable,System.String)" access="Public" contract="Normal">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="SourceTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="FieldList">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="CreateJoinTable" id="M:MControl.Data.DataSetHelper.CreateJoinTable(System.String,System.Data.DataTable,System.String)" access="Public" contract="Normal">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="SourceTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="FieldList">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="InsertGroupByInto" id="M:MControl.Data.DataSetHelper.InsertGroupByInto(System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="DestTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="SourceTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="FieldList">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="RowFilter">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="GroupBy">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="InsertJoinInto" id="M:MControl.Data.DataSetHelper.InsertJoinInto(System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="DestTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="SourceTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="FieldList">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="RowFilter">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Sort">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="SelectGroupByInto" id="M:MControl.Data.DataSetHelper.SelectGroupByInto(System.String,System.Data.DataTable,System.String,System.String,System.String)" access="Public" contract="Normal">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="SourceTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="FieldList">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="RowFilter">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="GroupBy">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="SelectJoinInto" id="M:MControl.Data.DataSetHelper.SelectJoinInto(System.String,System.Data.DataTable,System.String,System.String,System.String)" access="Public" contract="Normal">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="SourceTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="FieldList">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="RowFilter">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Sort">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="DataSetUtil" id="T:MControl.Data.DataSetUtil" access="Public" namespace="MControl.Data" displayName="DataSetUtil">
          <method name="Read" id="M:MControl.Data.DataSetUtil.Read(System.IO.Stream,System.Data.DataSet,MControl.Data.StreamDataSetFormat,System.Boolean)" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="source">
              <type name="Stream" id="T:System.IO.Stream" />
            </parameter>
            <parameter name="destination">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="format">
              <type name="StreamDataSetFormat" id="T:MControl.Data.StreamDataSetFormat" valueType="true" />
            </parameter>
            <parameter name="mergeSchema">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
          <method name="Write" id="M:MControl.Data.DataSetUtil.Write(System.IO.Stream,System.Data.DataSet,MControl.Data.StreamDataSetFormat)" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="destination">
              <type name="Stream" id="T:System.IO.Stream" />
            </parameter>
            <parameter name="source">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="format">
              <type name="StreamDataSetFormat" id="T:MControl.Data.StreamDataSetFormat" valueType="true" />
            </parameter>
          </method>
        </class>
        <class name="DataSource" id="T:MControl.Data.DataSource" access="Public" namespace="MControl.Data" displayName="DataSource">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <constructorOverload name=".ctor" id="Overload:MControl.Data.DataSource.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.DataSource" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.DataSource.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.DataSource" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DataSource.#ctor(MControl.Data.DBProvider,System.String,System.String)" access="Public" contract="Normal">
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="connectionID">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DataSource.#ctor(MControl.Data.DBProvider,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)" access="Public" contract="Normal">
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
              <parameter name="connectionID">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="integratedSecurity">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="serverName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="database">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="persistSecurityInfo">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="userId">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="password">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="timeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="isEncrypted">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="asynchronousProcessing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="AsynchronousProcessing" id="P:MControl.Data.DataSource.AsynchronousProcessing" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ConnectionID" id="P:MControl.Data.DataSource.ConnectionID" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ConnectionString" id="P:MControl.Data.DataSource.ConnectionString" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DBName" id="P:MControl.Data.DataSource.DBName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DBPath" id="P:MControl.Data.DataSource.DBPath" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DB_ID" id="P:MControl.Data.DataSource.DB_ID" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Empty" id="P:MControl.Data.DataSource.Empty" access="Public" contract="Normal">
            <type name="DataSource" id="T:MControl.Data.DataSource" />
            <get access="Public" />
          </property>
          <property name="InitialCatalog" id="P:MControl.Data.DataSource.InitialCatalog" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="IntegratedSecurity" id="P:MControl.Data.DataSource.IntegratedSecurity" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="IsConnected" id="P:MControl.Data.DataSource.IsConnected" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.DataSource.IsEmpty" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsEncrypted" id="P:MControl.Data.DataSource.IsEncrypted" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Item" id="P:MControl.Data.DataSource.Item(System.String)" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
            <parameter name="properyName">
              <type name="String" id="T:System.String" />
            </parameter>
          </property>
          <property name="PacketSize" id="P:MControl.Data.DataSource.PacketSize" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Password" id="P:MControl.Data.DataSource.Password" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="PersistSecurityInfo" id="P:MControl.Data.DataSource.PersistSecurityInfo" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Provider" id="P:MControl.Data.DataSource.Provider" access="Public" contract="Normal">
            <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ServerName" id="P:MControl.Data.DataSource.ServerName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="TimeOut" id="P:MControl.Data.DataSource.TimeOut" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="UserId" id="P:MControl.Data.DataSource.UserId" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="WorkstationID" id="P:MControl.Data.DataSource.WorkstationID" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="ConnectionFactory" id="M:MControl.Data.DataSource.ConnectionFactory(MControl.Data.DBProvider,System.String)" access="Public" contract="Static">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <parameter name="provider">
              <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
            </parameter>
            <parameter name="connectionString">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetAsynchronousProcessing" id="M:MControl.Data.DataSource.GetAsynchronousProcessing" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="GetConnection" id="M:MControl.Data.DataSource.GetConnection" access="Public" contract="Normal">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
          </method>
          <method name="GetValidConnectionString" id="M:MControl.Data.DataSource.GetValidConnectionString" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="ParseConnectionString" id="M:MControl.Data.DataSource.ParseConnectionString" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
        </class>
        <class name="DataTableReader" id="T:MControl.Data.DataTableReader" access="Public" namespace="MControl.Data" displayName="DataTableReader">
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructor name=".ctor" id="M:MControl.Data.DataTableReader.#ctor(System.Data.DataTable)" access="Public" contract="Normal">
            <parameter name="dataTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
          </constructor>
          <property name="FieldCount" id="P:MControl.Data.DataTableReader.FieldCount" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
          </property>
          <method name="Dispose" id="M:MControl.Data.DataTableReader.Dispose" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
          </method>
          <method name="GetFieldType" id="M:MControl.Data.DataTableReader.GetFieldType(System.Int32)" access="Public" contract="Normal">
            <type name="Type" id="T:System.Type" />
            <parameter name="fieldIndex">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="GetName" id="M:MControl.Data.DataTableReader.GetName(System.Int32)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="fieldIndex">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="GetOrdinal" id="M:MControl.Data.DataTableReader.GetOrdinal(System.String)" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="fieldName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetValue" id="M:MControl.Data.DataTableReader.GetValue(System.Int32)" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <parameter name="fieldIndex">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="Read" id="M:MControl.Data.DataTableReader.Read" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </method>
        </class>
        <class name="DataUtil" id="T:MControl.Data.DataUtil" access="Public" namespace="MControl.Data" displayName="DataUtil">
          <constructor name=".ctor" id="M:MControl.Data.DataUtil.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.DataUtil" /> class.</autoText></summary></documentation>
          </constructor>
          <method name="CreateGroupByTable" id="M:MControl.Data.DataUtil.CreateGroupByTable(System.String,System.Data.DataTable,System.String)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="TableSource">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="FieldList">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="CreateTableSchema" id="Overload:MControl.Data.DataUtil.CreateTableSchema" contract="Static">
            <method name="CreateTableSchema" id="M:MControl.Data.DataUtil.CreateTableSchema(System.String,System.String[])" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columns">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="CreateTableSchema" id="M:MControl.Data.DataUtil.CreateTableSchema(System.String,System.Data.DataColumn[])" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columns">
                <type name="DataColumn" id="T:System.Data.DataColumn">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="CreateTableSchema" id="M:MControl.Data.DataUtil.CreateTableSchema(System.String,System.Collections.Generic.Dictionary{System.String,System.Type})" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columns">
                <type name="Dictionary`2" id="T:System.Collections.Generic.Dictionary`2">
                  <typeparam name="String" id="T:System.String" />
                  <typeparam name="Type" id="T:System.Type" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="FillDataTable" id="Overload:MControl.Data.DataUtil.FillDataTable" contract="Static">
            <method name="FillDataTable" id="M:MControl.Data.DataUtil.FillDataTable(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object}[])" access="Public" contract="Static">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="rows">
                <type name="Dictionary`2" id="T:System.Collections.Generic.Dictionary`2">
                  <array rank="1" />
                  <typeparam name="String" id="T:System.String" />
                  <typeparam name="Object" id="T:System.Object" />
                </type>
              </parameter>
            </method>
            <method name="FillDataTable" id="M:MControl.Data.DataUtil.FillDataTable(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Object,System.Object})" access="Public" contract="Static">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="rows">
                <type name="Dictionary`2" id="T:System.Collections.Generic.Dictionary`2">
                  <typeparam name="Object" id="T:System.Object" />
                  <typeparam name="Object" id="T:System.Object" />
                </type>
              </parameter>
            </method>
            <method name="FillDataTable" id="M:MControl.Data.DataUtil.FillDataTable(System.Data.DataTable,System.Collections.Generic.List{System.Object}[])" access="Public" contract="Static">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="rows">
                <type name="List`1" id="T:System.Collections.Generic.List`1">
                  <array rank="1" />
                  <typeparam name="Object" id="T:System.Object" />
                </type>
              </parameter>
            </method>
            <method name="FillDataTable" id="M:MControl.Data.DataUtil.FillDataTable(System.Data.DataTable,System.Object[])" access="Public" contract="Static">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="rows">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="FillDataTable" id="M:MControl.Data.DataUtil.FillDataTable(System.Data.DataTable,System.Object[0:,0:])" access="Public" contract="Static">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="rows">
                <type name="Object" id="T:System.Object">
                  <array rank="2" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <method name="GetDataRow" id="M:MControl.Data.DataUtil.GetDataRow(System.Data.DataSet,System.String,System.String,System.String)" access="Public" contract="Static">
            <type name="DataRow" id="T:System.Data.DataRow" />
            <parameter name="ds">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="filter">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="sort">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDataRows" id="M:MControl.Data.DataUtil.GetDataRows(System.Data.DataSet,System.String,System.String,System.String)" access="Public" contract="Static">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <parameter name="ds">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="filter">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="sort">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDataSetValue" id="M:MControl.Data.DataUtil.GetDataSetValue(System.Data.DataSet,System.String,System.String,System.String,System.String)" access="Public" contract="Static">
            <type name="Object" id="T:System.Object" />
            <parameter name="ds">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="columnName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="filter">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="sort">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetFilteredData" id="Overload:MControl.Data.DataUtil.GetFilteredData" contract="Static">
            <method name="GetFilteredData" id="M:MControl.Data.DataUtil.GetFilteredData(System.Data.DataView,System.String)" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="dv">
                <type name="DataView" id="T:System.Data.DataView" />
              </parameter>
              <parameter name="filterExperssion">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetFilteredData" id="M:MControl.Data.DataUtil.GetFilteredData(System.Data.DataView,System.String,System.String)" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="dv">
                <type name="DataView" id="T:System.Data.DataView" />
              </parameter>
              <parameter name="filterExperssion">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetFilteredData" id="M:MControl.Data.DataUtil.GetFilteredData(System.Data.DataView,System.String,System.String,System.Data.DataViewRowState)" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="dv">
                <type name="DataView" id="T:System.Data.DataView" />
              </parameter>
              <parameter name="filterExperssion">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="state">
                <type name="DataViewRowState" id="T:System.Data.DataViewRowState" valueType="true" />
              </parameter>
            </method>
            <method name="GetFilteredData" id="M:MControl.Data.DataUtil.GetFilteredData(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="dtv">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="filterExperssion">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sort">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="state">
                <type name="DataViewRowState" id="T:System.Data.DataViewRowState" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetTableSchema" id="M:MControl.Data.DataUtil.GetTableSchema(System.Data.IDataReader,System.String)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="InsertGroupByInto" id="M:MControl.Data.DataUtil.InsertGroupByInto(System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.String)" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="DestTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="SourceTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="FieldList">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="RowFilter">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="GroupBy">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="SelectGroupByInto" id="Overload:MControl.Data.DataUtil.SelectGroupByInto" contract="Static">
            <method name="SelectGroupByInto" id="M:MControl.Data.DataUtil.SelectGroupByInto(MControl.Data.Aggregate,System.Data.DataTable,System.String,System.String[],System.String[],System.String[],System.String)" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="mode">
                <type name="Aggregate" id="T:MControl.Data.Aggregate" valueType="true" />
              </parameter>
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="groupByFields">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="sumFields">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="aliasFields">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="filter">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="SelectGroupByInto" id="M:MControl.Data.DataUtil.SelectGroupByInto(MControl.Data.Aggregate,System.Data.DataTable,System.String,System.String,System.String,System.String,System.String)" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="mode">
                <type name="Aggregate" id="T:MControl.Data.Aggregate" valueType="true" />
              </parameter>
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="groupByField">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sumField">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="aliasField">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="filter">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="SelectGroupByInto" id="M:MControl.Data.DataUtil.SelectGroupByInto(System.String,System.Data.DataTable,System.String,System.String,System.String)" access="Public" contract="Static">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="TableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="SourceTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="FieldList">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="RowFilter">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="GroupBy">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="SummaryRunning" id="M:MControl.Data.DataUtil.SummaryRunning(System.Data.DataTable,System.String)" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="dt">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="summaryColumn">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="DBCommandAttribute" id="T:MControl.Data.DBCommandAttribute" access="Public" namespace="MControl.Data" displayName="DBCommandAttribute" sealed="true">
          <attribute name="AttributeUsageAttribute" id="T:System.AttributeUsageAttribute">
            <argument id="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" type="System.AttributeTargets" value="AttributeTargets.Method" />
          </attribute>
          <base name="Attribute" id="T:System.Attribute" displayName="System.Attribute" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.DBCommandAttribute.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.DBCommandAttribute.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="commandText">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DBCommandAttribute.#ctor(System.String,System.Object)" access="Public" contract="Normal">
              <parameter name="commandText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="returnIfNull">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DBCommandAttribute.#ctor(MControl.Data.DBCommandType,System.String)" access="Public" contract="Normal">
              <parameter name="commandType">
                <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
              </parameter>
              <parameter name="commandText">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DBCommandAttribute.#ctor(MControl.Data.DBCommandType,System.String,System.Object,System.Data.MissingSchemaAction)" access="Public" contract="Normal">
              <parameter name="commandType">
                <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
              </parameter>
              <parameter name="commandText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="returnIfNull">
                <type name="Object" id="T:System.Object" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="CommandText" id="P:MControl.Data.DBCommandAttribute.CommandText" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="CommandType" id="P:MControl.Data.DBCommandAttribute.CommandType" access="Public" contract="Normal">
            <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="MissingSchemaAction" id="P:MControl.Data.DBCommandAttribute.MissingSchemaAction" access="Public" contract="Normal">
            <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ReturnIfNull" id="P:MControl.Data.DBCommandAttribute.ReturnIfNull" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="GetAttributeBuilder" id="M:MControl.Data.DBCommandAttribute.GetAttributeBuilder(MControl.Data.DBCommandAttribute)" access="Public" contract="Static">
            <type name="CustomAttributeBuilder" id="T:System.Reflection.Emit.CustomAttributeBuilder" />
            <parameter name="attr">
              <type name="DBCommandAttribute" id="T:MControl.Data.DBCommandAttribute" />
            </parameter>
          </method>
        </class>
        <class name="DBFactory" id="T:MControl.Data.DBFactory" access="Public" namespace="MControl.Data" displayName="DBFactory" abstract="true">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <derivedBy id="T:MControl.Data.OleDb.DBCmd" displayName="MControl.Data.OleDb.DBCmd" />
          <derivedBy id="T:MControl.Data.SqlClient.DBCmd" displayName="MControl.Data.SqlClient.DBCmd" />
          <constructor name=".ctor" id="M:MControl.Data.DBFactory.#ctor" access="Family" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.DBFactory" /> class.</autoText></summary></documentation>
          </constructor>
          <methodOverload name="Create" id="Overload:MControl.Data.DBFactory.Create" contract="Static">
            <method name="Create" id="M:MControl.Data.DBFactory.Create(System.Data.IDbConnection)" access="Public" contract="Static">
              <type name="IDBCmd" id="T:MControl.Data.IDBCmd" />
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="Create" id="M:MControl.Data.DBFactory.Create(System.String,MControl.Data.DBProvider)" access="Public" contract="Static">
              <type name="IDBCmd" id="T:MControl.Data.IDBCmd" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Dispose" id="M:MControl.Data.DBFactory.Dispose" access="Public" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <methodOverload name="GetChanges" id="Overload:MControl.Data.DBFactory.GetChanges">
            <method name="GetChanges" id="M:MControl.Data.DBFactory.GetChanges(System.Data.DataTable)" access="Public" contract="Virtual">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
            <method name="GetChanges" id="M:MControl.Data.DBFactory.GetChanges(System.Data.DataSet)" access="Public" contract="Virtual">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetSelectCommand" id="M:MControl.Data.DBFactory.GetSelectCommand(System.Data.DataTable,System.String)" access="Public" contract="Static">
            <type name="String" id="T:System.String" />
            <parameter name="dataTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="dbTableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.DBFactory.UpdateChanges">
            <method name="UpdateChanges" id="M:MControl.Data.DBFactory.UpdateChanges(System.Data.DataTable,System.String)" access="Public" contract="Virtual">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.DBFactory.UpdateChanges(System.Data.DataTable)" access="Public" contract="Virtual">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.DBFactory.UpdateChanges(System.Data.DataTable,System.String,System.String)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="strSql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="DBParameter" id="T:MControl.Data.DBParameter" access="Public" namespace="MControl.Data" displayName="DBParameter" sealed="true">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.DBParameter.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.DBParameter.#ctor(System.String,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DBParameter.#ctor(System.String,System.Data.DbType,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="DbType" id="T:System.Data.DbType" valueType="true" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DBParameter.#ctor(System.String,System.Data.DbType,System.Data.ParameterDirection,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="DbType" id="T:System.Data.DbType" valueType="true" />
              </parameter>
              <parameter name="direction">
                <type name="ParameterDirection" id="T:System.Data.ParameterDirection" valueType="true" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DBParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="DbType" id="T:System.Data.DbType" valueType="true" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DBParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="DbType" id="T:System.Data.DbType" valueType="true" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="direction">
                <type name="ParameterDirection" id="T:System.Data.ParameterDirection" valueType="true" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Direction" id="P:MControl.Data.DBParameter.Direction" access="Public" contract="Normal">
            <type name="ParameterDirection" id="T:System.Data.ParameterDirection" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Name" id="P:MControl.Data.DBParameter.Name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ParameterType" id="P:MControl.Data.DBParameter.ParameterType" access="Public" contract="Normal">
            <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Size" id="P:MControl.Data.DBParameter.Size" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Type" id="P:MControl.Data.DBParameter.Type" access="Public" contract="Normal">
            <type name="DbType" id="T:System.Data.DbType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Value" id="P:MControl.Data.DBParameter.Value" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
          </property>
        </class>
        <class name="LookupView" id="T:MControl.Data.LookupView" access="Public" namespace="MControl.Data" displayName="LookupView">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.LookupView.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.LookupView.#ctor(System.Data.DataTable,System.String,System.String)" access="Public" contract="Normal">
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="keyMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="valueMember">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.LookupView.#ctor(System.Data.DataTable,System.String,System.String,System.Boolean)" access="Public" contract="Normal">
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="keyMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="valueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="valueSorted">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.LookupView.#ctor(System.String[])" access="Public" contract="Normal">
              <parameter name="list">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.LookupView.#ctor(System.Object[0:,0:])" access="Public" contract="Normal">
              <parameter name="list">
                <type name="Object" id="T:System.Object">
                  <array rank="2" />
                </type>
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.LookupView.#ctor(System.Collections.Generic.Dictionary{System.Object,System.Object})" access="Public" contract="Normal">
              <parameter name="list">
                <type name="Dictionary`2" id="T:System.Collections.Generic.Dictionary`2">
                  <typeparam name="Object" id="T:System.Object" />
                  <typeparam name="Object" id="T:System.Object" />
                </type>
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Count" id="P:MControl.Data.LookupView.Count" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.LookupView.Initilaized" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="KeyMember" id="P:MControl.Data.LookupView.KeyMember" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="Keys" id="P:MControl.Data.LookupView.Keys" access="Public" contract="Normal">
            <type name="LookupView.KeysView" id="T:MControl.Data.LookupView.KeysView" />
            <get access="Public" />
          </property>
          <property name="ReadOnly" id="P:MControl.Data.LookupView.ReadOnly" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ValueMember" id="P:MControl.Data.LookupView.ValueMember" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="Values" id="P:MControl.Data.LookupView.Values" access="Public" contract="Normal">
            <type name="LookupView.ValuesView" id="T:MControl.Data.LookupView.ValuesView" />
            <get access="Public" />
          </property>
          <property name="View" id="P:MControl.Data.LookupView.View" access="Public" contract="Normal">
            <type name="DataView" id="T:System.Data.DataView" />
            <get access="Public" />
          </property>
          <method name="Instance" id="M:MControl.Data.LookupView.Instance(System.Data.DataTable,System.String,System.String)" access="Public" contract="Static">
            <type name="LookupView" id="T:MControl.Data.LookupView" />
            <parameter name="dt">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="keyMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="valueMember">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="LookupSearch" id="M:MControl.Data.LookupView.LookupSearch(System.String)" access="Public" contract="Normal">
            <type name="DataRowView" id="T:System.Data.DataRowView" />
            <parameter name="text">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="LookupView.KeysView" id="T:MControl.Data.LookupView.KeysView" access="NestedPublic" namespace="MControl.Data" displayName="LookupView.KeysView" declaringType="LookupView">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <constructor name=".ctor" id="M:MControl.Data.LookupView.KeysView.#ctor(System.Data.DataTable,MControl.Data.LookupView)" access="Public" contract="Normal">
            <parameter name="dt">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="lv">
              <type name="LookupView" id="T:MControl.Data.LookupView" />
            </parameter>
          </constructor>
          <property name="Item" id="P:MControl.Data.LookupView.KeysView.Item(System.Object)" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <parameter name="key">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </property>
          <property name="Sorted" id="P:MControl.Data.LookupView.KeysView.Sorted" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="Find" id="M:MControl.Data.LookupView.KeysView.Find(System.Object)" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="key">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="GetDataRow" id="M:MControl.Data.LookupView.KeysView.GetDataRow(System.Object)" access="Public" contract="Normal">
            <type name="DataRowView" id="T:System.Data.DataRowView" />
            <parameter name="key">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="GetValue" id="M:MControl.Data.LookupView.KeysView.GetValue(System.Object)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="key">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
        </class>
        <class name="LookupView.ValuesView" id="T:MControl.Data.LookupView.ValuesView" access="NestedPublic" namespace="MControl.Data" displayName="LookupView.ValuesView" declaringType="LookupView">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <constructor name=".ctor" id="M:MControl.Data.LookupView.ValuesView.#ctor(System.Data.DataTable,MControl.Data.LookupView,System.Boolean)" access="Public" contract="Normal">
            <parameter name="dt">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="lv">
              <type name="LookupView" id="T:MControl.Data.LookupView" />
            </parameter>
            <parameter name="sorted">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </constructor>
          <property name="Item" id="P:MControl.Data.LookupView.ValuesView.Item(System.Object)" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </property>
          <property name="Sorted" id="P:MControl.Data.LookupView.ValuesView.Sorted" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="Find" id="M:MControl.Data.LookupView.ValuesView.Find(System.Object)" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="GetDataRow" id="M:MControl.Data.LookupView.ValuesView.GetDataRow(System.Object)" access="Public" contract="Normal">
            <type name="DataRowView" id="T:System.Data.DataRowView" />
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="GetKey" id="M:MControl.Data.LookupView.ValuesView.GetKey(System.Object)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
        </class>
        <class name="MAPPING" id="T:MControl.Data.MAPPING" access="Public" namespace="MControl.Data" displayName="MAPPING">
          <constructor name=".ctor" id="M:MControl.Data.MAPPING.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.MAPPING" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="DestColumnName" id="F:MControl.Data.MAPPING.DestColumnName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="SourceColumnName" id="F:MControl.Data.MAPPING.SourceColumnName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
        </class>
        <class name="QueryBuilder" id="T:MControl.Data.QueryBuilder" access="Public" namespace="MControl.Data" displayName="QueryBuilder">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.QueryBuilder.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.QueryBuilder.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.QueryBuilder.#ctor(System.String,System.String)" access="Public" contract="Normal">
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="clause">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <method name="Add" id="M:MControl.Data.QueryBuilder.Add(System.String,System.Object)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="InsertCommand" id="M:MControl.Data.QueryBuilder.InsertCommand" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="UpdateCommand" id="M:MControl.Data.QueryBuilder.UpdateCommand" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
        </class>
        <class name="Relation" id="T:MControl.Data.Relation" access="Public" namespace="MControl.Data" displayName="Relation">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.Relation.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.Relation.#ctor(System.String,System.String)" access="Public" contract="Normal">
              <parameter name="parentColumnName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="childColumnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Relation.#ctor(System.String[],System.String[])" access="Public" contract="Normal">
              <parameter name="parentColumnsName">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="childColumnsName">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Relation.#ctor(System.String[],System.String[],System.String)" access="Public" contract="Normal">
              <parameter name="parentColumnsName">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="childColumnsName">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="foreignKey">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Relation.#ctor(System.String[],System.String[],System.String,System.Data.ITableMapping)" access="Public" contract="Normal">
              <parameter name="parentColumnsName">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="childColumnsName">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="foreignKey">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="tbleMapping">
                <type name="ITableMapping" id="T:System.Data.ITableMapping" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="ChildColumnsName" id="P:MControl.Data.Relation.ChildColumnsName" access="Public" contract="Normal">
            <type name="String" id="T:System.String">
              <array rank="1" />
            </type>
            <get access="Public" />
          </property>
          <property name="CommandSelect" id="P:MControl.Data.Relation.CommandSelect" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ForiegnKey" id="P:MControl.Data.Relation.ForiegnKey" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="ParentColumnsName" id="P:MControl.Data.Relation.ParentColumnsName" access="Public" contract="Normal">
            <type name="String" id="T:System.String">
              <array rank="1" />
            </type>
            <get access="Public" />
          </property>
          <property name="RelationName" id="P:MControl.Data.Relation.RelationName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="TableMapping" id="P:MControl.Data.Relation.TableMapping" access="Public" contract="Normal">
            <type name="ITableMapping" id="T:System.Data.ITableMapping" />
            <get access="Public" />
          </property>
          <method name="DataRelationConvert" id="M:MControl.Data.Relation.DataRelationConvert(System.Data.DataSet)" access="Public" contract="Static">
            <type name="Relation" id="T:MControl.Data.Relation">
              <array rank="1" />
            </type>
            <parameter name="ds">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
          </method>
        </class>
        <class name="RelationCollection" id="T:MControl.Data.RelationCollection" access="Public" namespace="MControl.Data" displayName="RelationCollection">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <base name="CollectionBase" id="T:System.Collections.CollectionBase" displayName="System.Collections.CollectionBase" />
          <implements name="IList" id="T:System.Collections.IList" inherited="true" />
          <implements name="ICollection" id="T:System.Collections.ICollection" inherited="true" />
          <implements name="IEnumerable" id="T:System.Collections.IEnumerable" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.RelationCollection.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.RelationCollection" /> class.</autoText></summary></documentation>
          </constructor>
          <propertyOverload name="Item" id="Overload:MControl.Data.RelationCollection.Item">
            <property name="Item" id="P:MControl.Data.RelationCollection.Item(System.Int32)" access="Public" contract="Normal">
              <type name="Relation" id="T:MControl.Data.Relation" />
              <get access="Public" />
              <parameter name="index">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.RelationCollection.Item(System.String)" access="Public" contract="Normal">
              <type name="Relation" id="T:MControl.Data.Relation" />
              <get access="Public" />
              <parameter name="relationName">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
          </propertyOverload>
          <method name="Add" id="M:MControl.Data.RelationCollection.Add(MControl.Data.Relation)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="rl">
              <type name="Relation" id="T:MControl.Data.Relation" />
            </parameter>
          </method>
          <method name="Remove" id="M:MControl.Data.RelationCollection.Remove(MControl.Data.Relation)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="rl">
              <type name="Relation" id="T:MControl.Data.Relation" />
            </parameter>
          </method>
        </class>
        <class name="RESULT" id="T:MControl.Data.RESULT" access="Public" namespace="MControl.Data" displayName="RESULT">
          <property name="Message" id="P:MControl.Data.RESULT.Message" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="Result" id="P:MControl.Data.RESULT.Result" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
          </property>
          <property name="ReturnType" id="P:MControl.Data.RESULT.ReturnType" access="Public" contract="Normal">
            <type name="DalReturnType" id="T:MControl.Data.DalReturnType" valueType="true" />
            <get access="Public" />
          </property>
        </class>
        <class name="SqlBuilder" id="T:MControl.Data.SqlBuilder" access="Public" namespace="MControl.Data" displayName="SqlBuilder">
          <constructor name=".ctor" id="M:MControl.Data.SqlBuilder.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.SqlBuilder" /> class.</autoText></summary></documentation>
          </constructor>
          <methodOverload name="GetSqlString" id="Overload:MControl.Data.SqlBuilder.GetSqlString" contract="Static">
            <method name="GetSqlString" id="M:MControl.Data.SqlBuilder.GetSqlString(System.String,System.String,System.String,System.Data.DataRow[],System.String)" access="Public" contract="Static">
              <type name="String" id="T:System.String" />
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.SqlBuilder.GetSqlString(System.String,System.String,System.String,System.Object[])" access="Public" contract="Static">
              <type name="String" id="T:System.String" />
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.SqlBuilder.GetSqlString(System.String,System.Object[])" access="Public" contract="Static">
              <type name="String" id="T:System.String" />
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="SyncDataSourceEventArgs" id="T:MControl.Data.SyncDataSourceEventArgs" access="Public" namespace="MControl.Data" displayName="SyncDataSourceEventArgs">
          <base name="EventArgs" id="T:System.EventArgs" displayName="System.EventArgs" />
          <constructor name=".ctor" id="M:MControl.Data.SyncDataSourceEventArgs.#ctor(System.String)" access="Public" contract="Normal">
            <parameter name="name">
              <type name="String" id="T:System.String" />
            </parameter>
          </constructor>
          <property name="SourceName" id="P:MControl.Data.SyncDataSourceEventArgs.SourceName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
        </class>
        <structure name="CONNECTION" id="T:MControl.Data.CONNECTION" access="Public" namespace="MControl.Data" displayName="CONNECTION">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <field name="ConnectionID" id="F:MControl.Data.CONNECTION.ConnectionID" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="ConnectionString" id="F:MControl.Data.CONNECTION.ConnectionString" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="Provider" id="F:MControl.Data.CONNECTION.Provider" access="Public" contract="Normal">
            <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
          </field>
          <property name="Empty" id="P:MControl.Data.CONNECTION.Empty" access="Public" contract="Normal">
            <type name="CONNECTION" id="T:MControl.Data.CONNECTION" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.CONNECTION.IsEmpty" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <method name="GetAsynchronousProcessing" id="M:MControl.Data.CONNECTION.GetAsynchronousProcessing" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
        </structure>
        <structure name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" access="Public" namespace="MControl.Data" displayName="CONSTRAINT">
          <constructor name=".ctor" id="M:MControl.Data.CONSTRAINT.#ctor(System.String,System.String[],System.Boolean)" access="Public" contract="Normal">
            <parameter name="name">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="columns">
              <type name="String" id="T:System.String">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="isPriery">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </constructor>
          <field name="ColumnsName" id="F:MControl.Data.CONSTRAINT.ColumnsName" access="Public" contract="Normal">
            <type name="String" id="T:System.String">
              <array rank="1" />
            </type>
          </field>
          <field name="Name" id="F:MControl.Data.CONSTRAINT.Name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="PrimeryKey" id="F:MControl.Data.CONSTRAINT.PrimeryKey" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <method name="SetConstraint" id="M:MControl.Data.CONSTRAINT.SetConstraint(System.Data.DataTable,MControl.Data.CONSTRAINT[])" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="dt">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="constraint">
              <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                <array rank="1" />
              </type>
            </parameter>
          </method>
        </structure>
        <structure name="DataKey" id="T:MControl.Data.DataKey" access="Public" namespace="MControl.Data" displayName="DataKey">
          <constructor name=".ctor" id="M:MControl.Data.DataKey.#ctor(System.Data.DataColumn[],System.Boolean)" access="Public" contract="Normal">
            <parameter name="columns">
              <type name="DataColumn" id="T:System.Data.DataColumn">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="copyColumns">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </constructor>
          <property name="ColumnsReference" id="P:MControl.Data.DataKey.ColumnsReference" access="Public" contract="Normal">
            <type name="DataColumn" id="T:System.Data.DataColumn">
              <array rank="1" />
            </type>
            <get access="Public" />
          </property>
          <property name="HasValue" id="P:MControl.Data.DataKey.HasValue" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Table" id="P:MControl.Data.DataKey.Table" access="Public" contract="Normal">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
          </property>
          <method name="CheckState" id="M:MControl.Data.DataKey.CheckState" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="ColumnOrder" id="M:MControl.Data.DataKey.ColumnOrder(System.Int32)" access="Public" contract="Static">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="indexDesc">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="ColumnsEqual" id="M:MControl.Data.DataKey.ColumnsEqual(MControl.Data.DataKey)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="key">
              <type name="DataKey" id="T:MControl.Data.DataKey" valueType="true" />
            </parameter>
          </method>
          <method name="ContainsColumn" id="M:MControl.Data.DataKey.ContainsColumn(System.Data.DataColumn)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="column">
              <type name="DataColumn" id="T:System.Data.DataColumn" />
            </parameter>
          </method>
          <methodOverload name="Equals" id="Overload:MControl.Data.DataKey.Equals">
            <documentation><summary><inheritSource>Overload:System.ValueType.Equals</inheritSource><inheritDoc>Indicates whether this instance and a specified object are equal.</inheritDoc></summary></documentation>
            <method name="Equals" id="M:MControl.Data.DataKey.Equals(System.Object)" access="Public" contract="Override">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Equals" id="M:MControl.Data.DataKey.Equals(MControl.Data.DataKey)" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="value">
                <type name="DataKey" id="T:MControl.Data.DataKey" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetColumnNames" id="M:MControl.Data.DataKey.GetColumnNames" access="Public" contract="Normal">
            <type name="String" id="T:System.String">
              <array rank="1" />
            </type>
          </method>
          <method name="GetHashCode" id="M:MControl.Data.DataKey.GetHashCode" access="Public" contract="Override">
            <type name="Int32" id="T:System.Int32" valueType="true" />
          </method>
          <method name="GetIndexDesc" id="M:MControl.Data.DataKey.GetIndexDesc" access="Public" contract="Normal">
            <type name="IndexField" id="T:MControl.Data.IndexField" valueType="true">
              <array rank="1" />
            </type>
          </method>
          <method name="SortDecending" id="M:MControl.Data.DataKey.SortDecending(System.Int32)" access="Public" contract="Static">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="indexDesc">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="ToArray" id="M:MControl.Data.DataKey.ToArray" access="Public" contract="Normal">
            <type name="DataColumn" id="T:System.Data.DataColumn">
              <array rank="1" />
            </type>
          </method>
          <operator name="op_Equality" id="M:MControl.Data.DataKey.op_Equality(MControl.Data.DataKey,MControl.Data.DataKey)" access="Public" contract="Static">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="x">
              <type name="DataKey" id="T:MControl.Data.DataKey" valueType="true" />
            </parameter>
            <parameter name="y">
              <type name="DataKey" id="T:MControl.Data.DataKey" valueType="true" />
            </parameter>
          </operator>
          <operator name="op_Inequality" id="M:MControl.Data.DataKey.op_Inequality(MControl.Data.DataKey,MControl.Data.DataKey)" access="Public" contract="Static">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="x">
              <type name="DataKey" id="T:MControl.Data.DataKey" valueType="true" />
            </parameter>
            <parameter name="y">
              <type name="DataKey" id="T:MControl.Data.DataKey" valueType="true" />
            </parameter>
          </operator>
        </structure>
        <structure name="DBCOMMAND" id="T:MControl.Data.DBCOMMAND" access="Public" namespace="MControl.Data" displayName="DBCOMMAND">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.DBCOMMAND.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.DBCOMMAND.#ctor(MControl.Data.DBProvider,System.String,System.String)" access="Public" contract="Normal">
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sqlCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.DBCOMMAND.#ctor(MControl.Data.DBProvider,System.String,System.String,System.String)" access="Public" contract="Normal">
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sqlCommand">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="Command" id="F:MControl.Data.DBCOMMAND.Command" access="Public" contract="Normal" initOnly="true">
            <type name="IDbCommand" id="T:System.Data.IDbCommand" />
          </field>
          <field name="CommandType" id="F:MControl.Data.DBCOMMAND.CommandType" access="Public" contract="Normal" initOnly="true">
            <type name="CommandType" id="T:System.Data.CommandType" valueType="true" />
          </field>
          <field name="Connection" id="F:MControl.Data.DBCOMMAND.Connection" access="Public" contract="Normal" initOnly="true">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
          </field>
          <field name="ConnectionString" id="F:MControl.Data.DBCOMMAND.ConnectionString" access="Public" contract="Normal" initOnly="true">
            <type name="String" id="T:System.String" />
          </field>
          <field name="Empty" id="F:MControl.Data.DBCOMMAND.Empty" access="Public" contract="Static">
            <type name="DBCOMMAND" id="T:MControl.Data.DBCOMMAND" valueType="true" />
          </field>
          <field name="MappingName" id="F:MControl.Data.DBCOMMAND.MappingName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="Provider" id="F:MControl.Data.DBCOMMAND.Provider" access="Public" contract="Normal" initOnly="true">
            <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
          </field>
          <property name="IsEmpty" id="P:MControl.Data.DBCOMMAND.IsEmpty" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <method name="CreateCommad" id="M:MControl.Data.DBCOMMAND.CreateCommad(System.String)" access="Public" contract="Normal">
            <type name="IDbCommand" id="T:System.Data.IDbCommand" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </structure>
        <structure name="Field" id="T:MControl.Data.Field" access="Public" namespace="MControl.Data" displayName="Field">
          <constructor name=".ctor" id="M:MControl.Data.Field.#ctor(System.String,System.Object)" access="Public" contract="Normal">
            <parameter name="column">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </constructor>
          <field name="Column" id="F:MControl.Data.Field.Column" access="Public" contract="Normal" initOnly="true">
            <type name="String" id="T:System.String" />
          </field>
          <field name="Value" id="F:MControl.Data.Field.Value" access="Public" contract="Normal" initOnly="true">
            <type name="Object" id="T:System.Object" />
          </field>
          <methodOverload name="Equals" id="Overload:MControl.Data.Field.Equals">
            <documentation><summary><inheritSource>Overload:System.ValueType.Equals</inheritSource><inheritDoc>Indicates whether this instance and a specified object are equal.</inheritDoc></summary></documentation>
            <method name="Equals" id="M:MControl.Data.Field.Equals(MControl.Data.Field)" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="field">
                <type name="Field" id="T:MControl.Data.Field" valueType="true" />
              </parameter>
            </method>
            <method name="Equals" id="M:MControl.Data.Field.Equals(System.String,System.Object)" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="column">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
          </methodOverload>
        </structure>
        <structure name="IndexField" id="T:MControl.Data.IndexField" access="Public" namespace="MControl.Data" displayName="IndexField">
          <field name="Column" id="F:MControl.Data.IndexField.Column" access="Public" contract="Normal" initOnly="true">
            <type name="DataColumn" id="T:System.Data.DataColumn" />
          </field>
          <field name="IsDescending" id="F:MControl.Data.IndexField.IsDescending" access="Public" contract="Normal" initOnly="true">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
        </structure>
        <structure name="Record" id="T:MControl.Data.Record" access="Public" namespace="MControl.Data" displayName="Record">
          <constructor name=".ctor" id="M:MControl.Data.Record.#ctor(System.Object,System.Object)" access="Public" contract="Normal">
            <parameter name="displayMember">
              <type name="Object" id="T:System.Object" />
            </parameter>
            <parameter name="valueMember">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </constructor>
          <field name="DisplayMember" id="F:MControl.Data.Record.DisplayMember" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
          </field>
          <field name="Empty" id="F:MControl.Data.Record.Empty" access="Public" contract="Static" initOnly="true">
            <type name="Record" id="T:MControl.Data.Record" valueType="true" />
          </field>
          <field name="ValueMember" id="F:MControl.Data.Record.ValueMember" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
          </field>
          <property name="IsEmpty" id="P:MControl.Data.Record.IsEmpty" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
        </structure>
        <structure name="STATUS" id="T:MControl.Data.STATUS" access="Public" namespace="MControl.Data" displayName="STATUS">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.STATUS.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.STATUS.#ctor(System.String,MControl.Data.StatusPriority)" access="Public" contract="Normal">
              <parameter name="status">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="priority">
                <type name="StatusPriority" id="T:MControl.Data.StatusPriority" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.STATUS.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="status">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Display" id="P:MControl.Data.STATUS.Display" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="Priority" id="P:MControl.Data.STATUS.Priority" access="Public" contract="Normal">
            <type name="StatusPriority" id="T:MControl.Data.StatusPriority" valueType="true" />
            <get access="Public" />
          </property>
        </structure>
        <interface name="IActiveRecord" id="T:MControl.Data.IActiveRecord" access="Public" namespace="MControl.Data" displayName="IActiveRecord">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <implementedBy id="T:MControl.Data.ActiveBase" displayName="MControl.Data.ActiveBase" />
          <property name="Count" id="P:MControl.Data.IActiveRecord.Count" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
          </property>
          <property name="CurrentIndex" id="P:MControl.Data.IActiveRecord.CurrentIndex" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="HasErrors" id="P:MControl.Data.IActiveRecord.HasErrors" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.IActiveRecord.Initilaized" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.IActiveRecord.IsEmpty" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <propertyOverload name="Item" id="Overload:MControl.Data.IActiveRecord.Item">
            <property name="Item" id="P:MControl.Data.IActiveRecord.Item(System.String)" access="Public" contract="Abstract">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.IActiveRecord.Item(System.Int32)" access="Public" contract="Abstract">
              <type name="Object" id="T:System.Object" />
              <get access="Public" />
              <set access="Public" />
              <parameter name="columnIndex">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </property>
          </propertyOverload>
          <property name="ItemArray" id="P:MControl.Data.IActiveRecord.ItemArray" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object">
              <array rank="1" />
            </type>
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="RowError" id="P:MControl.Data.IActiveRecord.RowError" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="RowState" id="P:MControl.Data.IActiveRecord.RowState" access="Public" contract="Abstract">
            <type name="DataRowState" id="T:System.Data.DataRowState" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Table" id="P:MControl.Data.IActiveRecord.Table" access="Public" contract="Abstract">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
          </property>
          <method name="AcceptChanges" id="M:MControl.Data.IActiveRecord.AcceptChanges" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="BeginEdit" id="M:MControl.Data.IActiveRecord.BeginEdit" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="CancelEdit" id="M:MControl.Data.IActiveRecord.CancelEdit" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="ClearErrors" id="M:MControl.Data.IActiveRecord.ClearErrors" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="Delete" id="M:MControl.Data.IActiveRecord.Delete" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="EndEdit" id="M:MControl.Data.IActiveRecord.EndEdit" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <methodOverload name="GetValue" id="Overload:MControl.Data.IActiveRecord.GetValue">
            <method name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.Int32)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.Decimal)" access="Public" contract="Abstract">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.Double)" access="Public" contract="Abstract">
              <type name="Double" id="T:System.Double" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.Boolean)" access="Public" contract="Abstract">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.String)" access="Public" contract="Abstract">
              <type name="String" id="T:System.String" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.IActiveRecord.GetValue(System.String,System.DateTime)" access="Public" contract="Abstract">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Refresh" id="M:MControl.Data.IActiveRecord.Refresh" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="RejectChanges" id="M:MControl.Data.IActiveRecord.RejectChanges" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.IActiveRecord.UpdateChanges">
            <method name="UpdateChanges" id="M:MControl.Data.IActiveRecord.UpdateChanges(System.Data.IDbConnection)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.IActiveRecord.UpdateChanges(System.String,MControl.Data.DBProvider)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
        </interface>
        <interface name="IConnection" id="T:MControl.Data.IConnection" access="Public" namespace="MControl.Data" displayName="IConnection">
          <property name="Connection" id="P:MControl.Data.IConnection.Connection" access="Public" contract="Abstract">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ConnectionString" id="P:MControl.Data.IConnection.ConnectionString" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DBProvider" id="P:MControl.Data.IConnection.DBProvider" access="Public" contract="Abstract">
            <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
        </interface>
        <interface name="IDalAsync" id="T:MControl.Data.IDalAsync" access="Public" namespace="MControl.Data" displayName="IDalAsync">
          <implementedBy id="T:MControl.Data.Common.DalAsync" displayName="MControl.Data.Common.DalAsync" />
          <property name="AsyncDisplayStatus" id="P:MControl.Data.IDalAsync.AsyncDisplayStatus" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="AsyncIsExecuting" id="P:MControl.Data.IDalAsync.AsyncIsExecuting" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataRows" id="P:MControl.Data.IDalAsync.AsyncResult_DataRows" access="Public" contract="Abstract">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataTable" id="P:MControl.Data.IDalAsync.AsyncResult_DataTable" access="Public" contract="Abstract">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
          </property>
          <property name="AsyncResult_SingleRow" id="P:MControl.Data.IDalAsync.AsyncResult_SingleRow" access="Public" contract="Abstract">
            <type name="DataRow" id="T:System.Data.DataRow" />
            <get access="Public" />
          </property>
          <property name="AsyncStatus" id="P:MControl.Data.IDalAsync.AsyncStatus" access="Public" contract="Abstract">
            <type name="STATUS" id="T:MControl.Data.STATUS" valueType="true" />
            <get access="Public" />
          </property>
          <method name="AsyncExecute" id="M:MControl.Data.IDalAsync.AsyncExecute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32,System.Int32)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteBegin" id="M:MControl.Data.IDalAsync.AsyncExecuteBegin(System.AsyncCallback,System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="callback">
              <type name="AsyncCallback" id="T:System.AsyncCallback" />
            </parameter>
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteEnd" id="M:MControl.Data.IDalAsync.AsyncExecuteEnd(System.IAsyncResult)" access="Public" contract="Abstract">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <parameter name="result">
              <type name="IAsyncResult" id="T:System.IAsyncResult" />
            </parameter>
          </method>
          <method name="AsyncFillDataSource" id="M:MControl.Data.IDalAsync.AsyncFillDataSource(System.Data.IDataReader)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
          </method>
          <method name="Execute" id="M:MControl.Data.IDalAsync.Execute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="GetParameters" id="M:MControl.Data.IDalAsync.GetParameters(System.String[],System.Object[])" access="Public" contract="Abstract">
            <type name="IDataParameter" id="T:System.Data.IDataParameter">
              <array rank="1" />
            </type>
            <parameter name="names">
              <type name="String" id="T:System.String">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="values">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="SetAsyncStatus" id="M:MControl.Data.IDalAsync.SetAsyncStatus(System.String,MControl.Data.StatusPriority)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="Text">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="priority">
              <type name="StatusPriority" id="T:MControl.Data.StatusPriority" valueType="true" />
            </parameter>
          </method>
          <event name="AsyncCompleted" id="E:MControl.Data.IDalAsync.AsyncCompleted" access="Public" contract="Abstract" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
          <event name="AsyncStatusChanged" id="E:MControl.Data.IDalAsync.AsyncStatusChanged" access="Public" contract="Abstract" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
        </interface>
        <interface name="IDalBase" id="T:MControl.Data.IDalBase" access="Public" namespace="MControl.Data" displayName="IDalBase">
          <implements name="IDisposable" id="T:System.IDisposable" />
          <implementedBy id="T:MControl.Data.Common.DalProvider" displayName="MControl.Data.Common.DalProvider" />
          <implementedBy id="T:MControl.Data.OleDb.DalBase" displayName="MControl.Data.OleDb.DalBase" />
          <implementedBy id="T:MControl.Data.SqlClient.DalBase" displayName="MControl.Data.SqlClient.DalBase" />
          <property name="AutoCloseConnection" id="P:MControl.Data.IDalBase.AutoCloseConnection" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="DBProvider" id="P:MControl.Data.IDalBase.DBProvider" access="Public" contract="Abstract">
            <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
            <get access="Public" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.IDalBase.DBSchema" access="Public" contract="Abstract">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
            <get access="Public" />
          </property>
          <property name="IConnection" id="P:MControl.Data.IDalBase.IConnection" access="Public" contract="Abstract">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
          </property>
          <property name="ITransaction" id="P:MControl.Data.IDalBase.ITransaction" access="Public" contract="Abstract">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <get access="Public" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.IDalBase.Initilaized" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="OwnsConnection" id="P:MControl.Data.IDalBase.OwnsConnection" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Permit" id="P:MControl.Data.IDalBase.Permit" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <method name="CommitTransaction" id="M:MControl.Data.IDalBase.CommitTransaction" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="IBeginTransaction" id="M:MControl.Data.IDalBase.IBeginTransaction(System.Data.IsolationLevel)" access="Public" contract="Abstract">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <parameter name="iso">
              <type name="IsolationLevel" id="T:System.Data.IsolationLevel" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="Init" id="Overload:MControl.Data.IDalBase.Init">
            <method name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean,System.String)" access="Public" contract="Abstract">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="pk">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean,MControl.Data.DalSchema,System.String)" access="Public" contract="Abstract">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="dsSchema">
                <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              </parameter>
              <parameter name="pk">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean)" access="Public" contract="Abstract">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="RollbackTransaction" id="M:MControl.Data.IDalBase.RollbackTransaction" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
        </interface>
        <interface name="IDalCommand" id="T:MControl.Data.IDalCommand" access="Public" namespace="MControl.Data" displayName="IDalCommand">
          <implementedBy id="T:MControl.Data.OleDb.DalCommand" displayName="MControl.Data.OleDb.DalCommand" />
          <implementedBy id="T:MControl.Data.SqlClient.DalCommand" displayName="MControl.Data.SqlClient.DalCommand" />
          <method name="DAvg" id="M:MControl.Data.IDalCommand.DAvg(System.String,System.String,System.String)" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DCount" id="M:MControl.Data.IDalCommand.DCount(System.String,System.String,System.String)" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DExists" id="M:MControl.Data.IDalCommand.DExists(System.String,System.String,System.String)" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DHashtable" id="M:MControl.Data.IDalCommand.DHashtable(System.String,System.String,System.String,System.String)" access="Public" contract="Abstract">
            <type name="Hashtable" id="T:System.Collections.Hashtable" />
            <parameter name="KeyMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="ValueMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMax" id="M:MControl.Data.IDalCommand.DMax(System.String,System.String,System.String)" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMin" id="M:MControl.Data.IDalCommand.DMin(System.String,System.String,System.String)" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DRow" id="Overload:MControl.Data.IDalCommand.DRow">
            <method name="DRow" id="M:MControl.Data.IDalCommand.DRow(System.String,System.String,System.String,System.Object[])" access="Public" contract="Abstract">
              <type name="DataRow" id="T:System.Data.DataRow" />
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRow" id="M:MControl.Data.IDalCommand.DRow(System.String,System.String,System.String)" access="Public" contract="Abstract">
              <type name="DataRow" id="T:System.Data.DataRow" />
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="DRows" id="Overload:MControl.Data.IDalCommand.DRows">
            <method name="DRows" id="M:MControl.Data.IDalCommand.DRows(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Abstract">
              <type name="DataRow" id="T:System.Data.DataRow">
                <array rank="1" />
              </type>
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRows" id="M:MControl.Data.IDalCommand.DRows(System.String,System.String,System.String,System.String)" access="Public" contract="Abstract">
              <type name="DataRow" id="T:System.Data.DataRow">
                <array rank="1" />
              </type>
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="DSum" id="M:MControl.Data.IDalCommand.DSum(System.String,System.String,System.String)" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DView" id="Overload:MControl.Data.IDalCommand.DView">
            <method name="DView" id="M:MControl.Data.IDalCommand.DView(System.String,System.String,System.String,System.String)" access="Public" contract="Abstract">
              <type name="DataView" id="T:System.Data.DataView" />
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="DView" id="M:MControl.Data.IDalCommand.DView(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Abstract">
              <type name="DataView" id="T:System.Data.DataView" />
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dlookup" id="Overload:MControl.Data.IDalCommand.Dlookup">
            <method name="Dlookup" id="M:MControl.Data.IDalCommand.Dlookup(System.String,System.String,System.String,System.Int32)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.IDalCommand.Dlookup(System.String,System.String,System.String,System.Double)" access="Public" contract="Abstract">
              <type name="Double" id="T:System.Double" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.IDalCommand.Dlookup(System.String,System.String,System.String,System.Decimal)" access="Public" contract="Abstract">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.IDalCommand.Dlookup(System.String,System.String,System.String,System.DateTime)" access="Public" contract="Abstract">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.IDalCommand.Dlookup(System.String,System.String,System.String,System.Boolean)" access="Public" contract="Abstract">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.IDalCommand.Dlookup(System.String,System.String,System.String,System.String)" access="Public" contract="Abstract">
              <type name="String" id="T:System.String" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.IDalCommand.Dlookup(System.String,System.String,System.String,System.Object)" access="Public" contract="Abstract">
              <type name="Object" id="T:System.Object" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.IDalCommand.Dlookup(System.String,System.String,System.String,System.Object[],System.Object)" access="Public" contract="Abstract">
              <type name="Object" id="T:System.Object" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteDataTable" id="M:MControl.Data.IDalCommand.ExecuteDataTable(System.String)" access="Public" contract="Abstract">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteNonQuery" id="M:MControl.Data.IDalCommand.ExecuteNonQuery(System.String)" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteScalar" id="M:MControl.Data.IDalCommand.ExecuteScalar(System.String)" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </interface>
        <interface name="IDalDB" id="T:MControl.Data.IDalDB" access="Public" namespace="MControl.Data" displayName="IDalDB">
          <implementedBy id="T:MControl.Data.OleDb.DalDB" displayName="MControl.Data.OleDb.DalDB" />
          <implementedBy id="T:MControl.Data.SqlClient.DalDB" displayName="MControl.Data.SqlClient.DalDB" />
          <property name="AutoCloseConnection" id="P:MControl.Data.IDalDB.AutoCloseConnection" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Connection" id="P:MControl.Data.IDalDB.Connection" access="Public" contract="Abstract">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.IDalDB.DBSchema" access="Public" contract="Abstract">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Transaction" id="P:MControl.Data.IDalDB.Transaction" access="Public" contract="Abstract">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <get access="Public" />
            <set access="Public" />
          </property>
        </interface>
        <interface name="IDataSource" id="T:MControl.Data.IDataSource" access="Public" namespace="MControl.Data" displayName="IDataSource">
          <property name="AllowAdd" id="P:MControl.Data.IDataSource.AllowAdd" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DataMember" id="P:MControl.Data.IDataSource.DataMember" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DataSource" id="P:MControl.Data.IDataSource.DataSource" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="InvokeRequired" id="P:MControl.Data.IDataSource.InvokeRequired" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <method name="Invoke" id="M:MControl.Data.IDataSource.Invoke(System.Delegate,System.Object[])" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object" />
            <parameter name="callBack">
              <type name="Delegate" id="T:System.Delegate" />
            </parameter>
            <parameter name="param" isParamArray="true">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
              <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
            </parameter>
          </method>
        </interface>
        <interface name="IDBCmd" id="T:MControl.Data.IDBCmd" access="Public" namespace="MControl.Data" displayName="IDBCmd">
          <implements name="IDisposable" id="T:System.IDisposable" />
          <implementedBy id="T:MControl.Data.OleDb.DBCmd" displayName="MControl.Data.OleDb.DBCmd" />
          <implementedBy id="T:MControl.Data.SqlClient.DBCmd" displayName="MControl.Data.SqlClient.DBCmd" />
          <property name="Connection" id="P:MControl.Data.IDBCmd.Connection" access="Public" contract="Abstract">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ConnectionString" id="P:MControl.Data.IDBCmd.ConnectionString" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DataAdapter" id="P:MControl.Data.IDBCmd.DataAdapter" access="Public" contract="Abstract">
            <type name="IDbDataAdapter" id="T:System.Data.IDbDataAdapter" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DataTableMapping" id="P:MControl.Data.IDBCmd.DataTableMapping" access="Public" contract="Abstract">
            <type name="DataTableMappingCollection" id="T:System.Data.Common.DataTableMappingCollection" />
            <get access="Public" />
          </property>
          <method name="CreateDataAdapter" id="M:MControl.Data.IDBCmd.CreateDataAdapter(System.String)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="strSQL">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteCmd" id="M:MControl.Data.IDBCmd.ExecuteCmd(System.String)" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteCmdScalar" id="M:MControl.Data.IDBCmd.ExecuteCmdScalar(System.String)" access="Public" contract="Abstract">
            <type name="Object" id="T:System.Object" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteReader" id="M:MControl.Data.IDBCmd.ExecuteReader(System.String,System.Data.CommandBehavior)" access="Public" contract="Abstract">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="behavior">
              <type name="CommandBehavior" id="T:System.Data.CommandBehavior" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="Execute_DataTable" id="Overload:MControl.Data.IDBCmd.Execute_DataTable">
            <method name="Execute_DataTable" id="M:MControl.Data.IDBCmd.Execute_DataTable(System.String,System.String)" access="Public" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="tabeName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Execute_DataTable" id="M:MControl.Data.IDBCmd.Execute_DataTable(System.String,System.String,System.Data.MissingSchemaAction)" access="Public" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="tabeName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="missingSchema">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="FillDB" id="M:MControl.Data.IDBCmd.FillDB(System.Data.DataSet,System.Data.DataTable,System.String)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="dataSet">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="tableSchema">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="prefix">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="FillSchema" id="Overload:MControl.Data.IDBCmd.FillSchema">
            <method name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataSet,System.Data.DataTable,System.String)" access="Public" contract="Abstract">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="tableSchema">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="prefix">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataTable,System.Data.SchemaType)" access="Public" contract="Abstract">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="tableSchema">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType)" access="Public" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable">
                <array rank="1" />
              </type>
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" access="Public" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable">
                <array rank="1" />
              </type>
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
              <parameter name="srcTable">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="GetChanges" id="Overload:MControl.Data.IDBCmd.GetChanges">
            <method name="GetChanges" id="M:MControl.Data.IDBCmd.GetChanges(System.Data.DataTable)" access="Public" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
            <method name="GetChanges" id="M:MControl.Data.IDBCmd.GetChanges(System.Data.DataSet)" access="Public" contract="Abstract">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetCommand" id="M:MControl.Data.IDBCmd.GetCommand(System.String)" access="Public" contract="Abstract">
            <type name="IDbCommand" id="T:System.Data.IDbCommand" />
            <parameter name="cmdText">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDB" id="M:MControl.Data.IDBCmd.GetDB" access="Public" contract="Abstract">
            <type name="DataSet" id="T:System.Data.DataSet" />
          </method>
          <method name="GetSchemaCatalog" id="M:MControl.Data.IDBCmd.GetSchemaCatalog" access="Public" contract="Abstract">
            <type name="DataSet" id="T:System.Data.DataSet" />
          </method>
          <method name="GetSchemaList" id="M:MControl.Data.IDBCmd.GetSchemaList" access="Public" contract="Abstract">
            <type name="DataSet" id="T:System.Data.DataSet" />
          </method>
          <methodOverload name="GetSchemaTable" id="Overload:MControl.Data.IDBCmd.GetSchemaTable">
            <method name="GetSchemaTable" id="M:MControl.Data.IDBCmd.GetSchemaTable(System.String,System.Data.SchemaType)" access="Public" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="GetSchemaTable" id="M:MControl.Data.IDBCmd.GetSchemaTable" access="Public" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </method>
          </methodOverload>
          <method name="GetSchemaView" id="M:MControl.Data.IDBCmd.GetSchemaView" access="Public" contract="Abstract">
            <type name="DataTable" id="T:System.Data.DataTable" />
          </method>
          <method name="Read_DataTable" id="M:MControl.Data.IDBCmd.Read_DataTable(System.String)" access="Public" contract="Abstract">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="table">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="SetConnection" id="M:MControl.Data.IDBCmd.SetConnection(System.String)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="connectionString">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.IDBCmd.UpdateChanges">
            <method name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String,System.Data.SchemaType)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataSet,System.String,System.String,System.String,System.Data.SchemaType)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataSet,System.String)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataTable,System.String)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataTable)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
          </methodOverload>
        </interface>
        <enumeration name="AcceptChanges" id="T:MControl.Data.AcceptChanges" displayName="AcceptChanges" namespace="MControl.Data" access="Public">
          <field name="yes" id="F:MControl.Data.AcceptChanges.yes" value="0" />
          <field name="No" id="F:MControl.Data.AcceptChanges.No" value="1" />
          <field name="Cancel" id="F:MControl.Data.AcceptChanges.Cancel" value="2" />
        </enumeration>
        <enumeration name="Aggregate" id="T:MControl.Data.Aggregate" displayName="Aggregate" namespace="MControl.Data" access="Public">
          <field name="None" id="F:MControl.Data.Aggregate.None" value="0" />
          <field name="Sum" id="F:MControl.Data.Aggregate.Sum" value="1" />
          <field name="Count" id="F:MControl.Data.Aggregate.Count" value="2" />
          <field name="Min" id="F:MControl.Data.Aggregate.Min" value="3" />
          <field name="Max" id="F:MControl.Data.Aggregate.Max" value="4" />
          <field name="First" id="F:MControl.Data.Aggregate.First" value="5" />
          <field name="Last" id="F:MControl.Data.Aggregate.Last" value="6" />
        </enumeration>
        <enumeration name="AggregationMode" id="T:MControl.Data.AggregationMode" displayName="AggregationMode" namespace="MControl.Data" access="Public">
          <field name="Count" id="F:MControl.Data.AggregationMode.Count" value="0" />
          <field name="Sum" id="F:MControl.Data.AggregationMode.Sum" value="1" />
          <field name="Min" id="F:MControl.Data.AggregationMode.Min" value="2" />
          <field name="Max" id="F:MControl.Data.AggregationMode.Max" value="3" />
          <field name="Avg" id="F:MControl.Data.AggregationMode.Avg" value="4" />
        </enumeration>
        <enumeration name="ChangesStatus" id="T:MControl.Data.ChangesStatus" displayName="ChangesStatus" namespace="MControl.Data" access="Public">
          <field name="Continue" id="F:MControl.Data.ChangesStatus.Continue" value="0" />
          <field name="Stop" id="F:MControl.Data.ChangesStatus.Stop" value="1" />
        </enumeration>
        <enumeration name="ConnectionMember" id="T:MControl.Data.ConnectionMember" displayName="ConnectionMember" namespace="MControl.Data" access="Public">
          <field name="ConnectionID" id="F:MControl.Data.ConnectionMember.ConnectionID" value="0" />
          <field name="ServerName" id="F:MControl.Data.ConnectionMember.ServerName" value="1" />
          <field name="DBName" id="F:MControl.Data.ConnectionMember.DBName" value="2" />
          <field name="Provider" id="F:MControl.Data.ConnectionMember.Provider" value="3" />
          <field name="DBPath" id="F:MControl.Data.ConnectionMember.DBPath" value="4" />
          <field name="IntegratedSecurity" id="F:MControl.Data.ConnectionMember.IntegratedSecurity" value="5" />
          <field name="PersistSecurityInfo" id="F:MControl.Data.ConnectionMember.PersistSecurityInfo" value="6" />
          <field name="InitialCatalog" id="F:MControl.Data.ConnectionMember.InitialCatalog" value="7" />
          <field name="UserId" id="F:MControl.Data.ConnectionMember.UserId" value="8" />
          <field name="Password" id="F:MControl.Data.ConnectionMember.Password" value="9" />
          <field name="TimeOut" id="F:MControl.Data.ConnectionMember.TimeOut" value="10" />
          <field name="IsConnected" id="F:MControl.Data.ConnectionMember.IsConnected" value="11" />
          <field name="AsynchronousProcessing" id="F:MControl.Data.ConnectionMember.AsynchronousProcessing" value="12" />
          <field name="IsEncrypted" id="F:MControl.Data.ConnectionMember.IsEncrypted" value="13" />
          <field name="WorkstationID" id="F:MControl.Data.ConnectionMember.WorkstationID" value="14" />
          <field name="ConnectionString" id="F:MControl.Data.ConnectionMember.ConnectionString" value="15" />
          <field name="PacketSize" id="F:MControl.Data.ConnectionMember.PacketSize" value="16" />
        </enumeration>
        <enumeration name="DalParamType" id="T:MControl.Data.DalParamType" displayName="DalParamType" namespace="MControl.Data" access="Public">
          <field name="Default" id="F:MControl.Data.DalParamType.Default" value="0" />
          <field name="SPReturnValue" id="F:MControl.Data.DalParamType.SPReturnValue" value="1" />
          <field name="Key" id="F:MControl.Data.DalParamType.Key" value="2" />
          <field name="Identity" id="F:MControl.Data.DalParamType.Identity" value="3" />
          <field name="Array" id="F:MControl.Data.DalParamType.Array" value="4" />
        </enumeration>
        <enumeration name="DalReturnType" id="T:MControl.Data.DalReturnType" displayName="DalReturnType" namespace="MControl.Data" access="Public">
          <field name="Int" id="F:MControl.Data.DalReturnType.Int" value="0" />
          <field name="DalSchema" id="F:MControl.Data.DalReturnType.DalSchema" value="1" />
          <field name="DataSet" id="F:MControl.Data.DalReturnType.DataSet" value="2" />
          <field name="DataTable" id="F:MControl.Data.DalReturnType.DataTable" value="3" />
          <field name="DataRows" id="F:MControl.Data.DalReturnType.DataRows" value="4" />
          <field name="DataRow" id="F:MControl.Data.DalReturnType.DataRow" value="5" />
          <field name="DataReader" id="F:MControl.Data.DalReturnType.DataReader" value="6" />
          <field name="DataAdapter" id="F:MControl.Data.DalReturnType.DataAdapter" value="7" />
          <field name="Command" id="F:MControl.Data.DalReturnType.Command" value="8" />
          <field name="Object" id="F:MControl.Data.DalReturnType.Object" value="9" />
          <field name="Default" id="F:MControl.Data.DalReturnType.Default" value="10" />
        </enumeration>
        <enumeration name="DBCommandType" id="T:MControl.Data.DBCommandType" displayName="DBCommandType" namespace="MControl.Data" access="Public">
          <field name="Text" id="F:MControl.Data.DBCommandType.Text" value="0" />
          <field name="StoredProcedure" id="F:MControl.Data.DBCommandType.StoredProcedure" value="1" />
          <field name="Insert" id="F:MControl.Data.DBCommandType.Insert" value="2" />
          <field name="Update" id="F:MControl.Data.DBCommandType.Update" value="3" />
          <field name="Delete" id="F:MControl.Data.DBCommandType.Delete" value="4" />
        </enumeration>
        <enumeration name="DBProvider" id="T:MControl.Data.DBProvider" displayName="DBProvider" namespace="MControl.Data" access="Public">
          <field name="OleDb" id="F:MControl.Data.DBProvider.OleDb" value="0" />
          <field name="SqlServer" id="F:MControl.Data.DBProvider.SqlServer" value="1" />
          <field name="Oracle" id="F:MControl.Data.DBProvider.Oracle" value="2" />
          <field name="MySQL" id="F:MControl.Data.DBProvider.MySQL" value="3" />
          <field name="SybaseASE" id="F:MControl.Data.DBProvider.SybaseASE" value="4" />
          <field name="Firebird" id="F:MControl.Data.DBProvider.Firebird" value="5" />
          <field name="DB2" id="F:MControl.Data.DBProvider.DB2" value="6" />
        </enumeration>
        <enumeration name="ParamDir" id="T:MControl.Data.ParamDir" displayName="ParamDir" namespace="MControl.Data" access="Public">
          <field name="ByValue" id="F:MControl.Data.ParamDir.ByValue" value="0" />
          <field name="ByRef" id="F:MControl.Data.ParamDir.ByRef" value="1" />
          <field name="ByOut" id="F:MControl.Data.ParamDir.ByOut" value="2" />
        </enumeration>
        <enumeration name="StatusPriority" id="T:MControl.Data.StatusPriority" displayName="StatusPriority" namespace="MControl.Data" access="Public">
          <field name="Normal" id="F:MControl.Data.StatusPriority.Normal" value="0" />
          <field name="Warnning" id="F:MControl.Data.StatusPriority.Warnning" value="1" />
          <field name="Error" id="F:MControl.Data.StatusPriority.Error" value="2" />
        </enumeration>
        <enumeration name="StreamDataSetFormat" id="T:MControl.Data.StreamDataSetFormat" displayName="StreamDataSetFormat" namespace="MControl.Data" access="Public">
          <field name="XML" id="F:MControl.Data.StreamDataSetFormat.XML" value="1" />
          <field name="Binary" id="F:MControl.Data.StreamDataSetFormat.Binary" value="2" />
        </enumeration>
        <delegate name="AsyncDataFill" displayName="AsyncDataFill" namespace="MControl.Data" id="T:MControl.Data.AsyncDataFill" access="Public">
          <type name="Void" id="T:System.Void" valueType="true" />
          <parameter name="reader">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
          </parameter>
        </delegate>
        <delegate name="AsyncDisplayStatus" displayName="AsyncDisplayStatus" namespace="MControl.Data" id="T:MControl.Data.AsyncDisplayStatus" access="Public">
          <type name="Void" id="T:System.Void" valueType="true" />
          <parameter name="Text">
            <type name="String" id="T:System.String" />
          </parameter>
          <parameter name="priority">
            <type name="StatusPriority" id="T:MControl.Data.StatusPriority" valueType="true" />
          </parameter>
        </delegate>
        <delegate name="SyncDataSourceEventHandler" displayName="SyncDataSourceEventHandler" namespace="MControl.Data" id="T:MControl.Data.SyncDataSourceEventHandler" access="Public">
          <type name="Void" id="T:System.Void" valueType="true" />
          <parameter name="sender">
            <type name="Object" id="T:System.Object" />
          </parameter>
          <parameter name="e">
            <type name="SyncDataSourceEventArgs" id="T:MControl.Data.SyncDataSourceEventArgs" />
          </parameter>
        </delegate>
      </namespace>
      <namespace name="MControl.Data.Caching" id="N:MControl.Data.Caching">
        <class name="GenericDataCache" id="T:MControl.Data.Caching.GenericDataCache" access="Public" namespace="MControl.Data.Caching" displayName="GenericDataCache">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <base name="GenericCache" id="T:MControl.Caching.GenericCache" displayName="MControl.Caching.GenericCache" />
          <implements name="IEnumerable" id="T:System.Collections.IEnumerable" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.Caching.GenericDataCache.#ctor(System.String)" access="Public" contract="Normal">
            <parameter name="cacheName">
              <type name="String" id="T:System.String" />
            </parameter>
          </constructor>
          <property name="CacheSyncState" id="P:MControl.Caching.GenericCache.CacheSyncState" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
          </property>
          <property name="Count" id="P:MControl.Caching.GenericCache.Count" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
          </property>
          <property name="Initilaized" id="P:MControl.Caching.GenericCache.Initilaized" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
          </property>
          <property name="Item" id="P:MControl.Caching.GenericCache.Item(System.String)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
            <set access="Public" />
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
          </property>
          <property name="LastSyncTime" id="P:MControl.Caching.GenericCache.LastSyncTime" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
          </property>
          <property name="NextSyncTime" id="P:MControl.Caching.GenericCache.NextSyncTime" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
          </property>
          <property name="SleepTime" id="P:MControl.Caching.GenericCache.SleepTime" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="SyncCacheItems" id="P:MControl.Caching.GenericCache.SyncCacheItems" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
          </property>
          <property name="SyncOption" id="P:MControl.Caching.GenericCache.SyncOption" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="SyncTime" id="P:MControl.Caching.GenericCache.SyncTime" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="AddItem" id="M:MControl.Caching.GenericCache.AddItem(MControl.Caching.CacheItem)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="item">
              <type name="CacheItem" id="T:MControl.Caching.CacheItem" valueType="true" />
            </parameter>
          </method>
          <method name="Clear" id="M:MControl.Caching.GenericCache.Clear" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <methodOverload name="Contains" id="Overload:MControl.Data.Caching.GenericDataCache.Contains" declaringType="T:MControl.Caching.GenericCache">
            <method name="Contains" id="M:MControl.Caching.GenericCache.Contains(MControl.Caching.CacheItem)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="item">
                <type name="CacheItem" id="T:MControl.Caching.CacheItem" valueType="true" />
              </parameter>
            </method>
            <method name="Contains" id="M:MControl.Caching.GenericCache.Contains(System.String)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="key">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Dispose" id="M:MControl.Caching.GenericCache.Dispose" access="Public" contract="Virtual" declaringType="T:MControl.Caching.GenericCache" />
          <method name="Finalize" id="M:MControl.Caching.GenericCache.Finalize" access="Family" contract="Override" declaringType="T:MControl.Caching.GenericCache" />
          <method name="GetActiveConfig" id="M:MControl.Data.Caching.GenericDataCache.GetActiveConfig(System.String)" access="Public" contract="Normal">
            <type name="ActiveConfig" id="T:MControl.Data.ActiveConfig" />
            <parameter name="cacheKey">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetActiveRecord" id="M:MControl.Data.Caching.GenericDataCache.GetActiveRecord(System.String)" access="Public" contract="Normal">
            <type name="IActiveRecord" id="T:MControl.Data.IActiveRecord" />
            <parameter name="cacheKey">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetAllItems" id="M:MControl.Caching.GenericCache.GetAllItems" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <method name="GetEnumerator" id="M:MControl.Caching.GenericCache.GetEnumerator" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <methodOverload name="GetItem" id="Overload:MControl.Data.Caching.GenericDataCache.GetItem" declaringType="T:MControl.Caching.GenericCache">
            <method name="GetItem" id="M:MControl.Caching.GenericCache.GetItem(System.String)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="cacheKey">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetItem" id="M:MControl.Caching.GenericCache.GetItem(System.String,System.Object)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="cacheKey">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="GetItem" id="M:MControl.Caching.GenericCache.GetItem(System.String,System.String)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="cacheKey">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetItem" id="M:MControl.Caching.GenericCache.GetItem(System.String,System.Int32)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="cacheKey">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetItem" id="M:MControl.Caching.GenericCache.GetItem(System.String,System.Double)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="cacheKey">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetItem" id="M:MControl.Caching.GenericCache.GetItem(System.String,System.Decimal)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="cacheKey">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetItem" id="M:MControl.Caching.GenericCache.GetItem(System.String,System.Boolean)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="cacheKey">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetItem" id="M:MControl.Caching.GenericCache.GetItem(System.String,System.DateTime)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
              <parameter name="cacheKey">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetItems" id="M:MControl.Caching.GenericCache.GetItems(MControl.Caching.CacheObjType)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="objectType">
              <type name="CacheObjType" id="T:MControl.Caching.CacheObjType" valueType="true" />
            </parameter>
          </method>
          <method name="OnCacheException" id="M:MControl.Caching.GenericCache.OnCacheException(MControl.Caching.CacheExceptionEventArgs)" access="Family" contract="Virtual" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="e">
              <type name="CacheExceptionEventArgs" id="T:MControl.Caching.CacheExceptionEventArgs" />
            </parameter>
          </method>
          <method name="OnCacheStateChanged" id="M:MControl.Caching.GenericCache.OnCacheStateChanged(System.EventArgs)" access="Family" contract="Virtual" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnLoadRemotingData" id="M:MControl.Data.Caching.GenericDataCache.OnLoadRemotingData(MControl.Caching.CacheItem@)" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="item" direction="ref">
              <type name="CacheItem" id="T:MControl.Caching.CacheItem" valueType="true" />
            </parameter>
          </method>
          <method name="OnSyncCacheSource" id="M:MControl.Caching.GenericCache.OnSyncCacheSource(MControl.Caching.SyncCacheEventArgs)" access="Family" contract="Virtual" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="e">
              <type name="SyncCacheEventArgs" id="T:MControl.Caching.SyncCacheEventArgs" />
            </parameter>
          </method>
          <method name="OnSyncTimeStart" id="M:MControl.Caching.GenericCache.OnSyncTimeStart(System.EventArgs)" access="Family" contract="Virtual" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="RemoveItem" id="M:MControl.Caching.GenericCache.RemoveItem(System.String)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="cacheKey">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="RestartThreadSetting" id="M:MControl.Caching.GenericCache.RestartThreadSetting" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <method name="Start" id="M:MControl.Caching.GenericCache.Start" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <method name="Stop" id="M:MControl.Caching.GenericCache.Stop" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <method name="SyncAllCacheItems" id="M:MControl.Caching.GenericCache.SyncAllCacheItems" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <method name="SyncAllItemSource" id="M:MControl.Caching.GenericCache.SyncAllItemSource" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <method name="SyncAllItems" id="M:MControl.Caching.GenericCache.SyncAllItems" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <method name="SyncContains" id="M:MControl.Caching.GenericCache.SyncContains(System.String)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="SyncItemSource" id="M:MControl.Caching.GenericCache.SyncItemSource(MControl.Caching.CacheItem)" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="itm">
              <type name="CacheItem" id="T:MControl.Caching.CacheItem" valueType="true" />
            </parameter>
          </method>
          <method name="ThreadSettingState" id="M:MControl.Caching.GenericCache.ThreadSettingState" access="Public" contract="Normal" declaringType="T:MControl.Caching.GenericCache" />
          <method name="TryGetValue" id="M:MControl.Caching.GenericCache.TryGetValue(System.String,MControl.Caching.CacheItem@)" access="Family" contract="Normal" declaringType="T:MControl.Caching.GenericCache">
            <parameter name="cacheKey">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="item" direction="out">
              <type name="CacheItem" id="T:MControl.Caching.CacheItem" valueType="true" />
              <attribute name="OutAttribute" id="T:System.Runtime.InteropServices.OutAttribute" />
            </parameter>
          </method>
          <event name="CacheException" id="E:MControl.Data.Caching.GenericDataCache.CacheException" access="Public" contract="Normal" multicast="true" declaringType="T:MControl.Caching.GenericCache">
            <type name="CacheExceptionEventHandler" id="T:MControl.Caching.CacheExceptionEventHandler" />
          </event>
          <event name="CacheStateChanged" id="E:MControl.Data.Caching.GenericDataCache.CacheStateChanged" access="Public" contract="Normal" multicast="true" declaringType="T:MControl.Caching.GenericCache">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
          <event name="SyncCacheSource" id="E:MControl.Data.Caching.GenericDataCache.SyncCacheSource" access="Public" contract="Normal" multicast="true" declaringType="T:MControl.Caching.GenericCache">
            <type name="SyncCacheEventHandler" id="T:MControl.Caching.SyncCacheEventHandler" />
          </event>
          <event name="SyncTimeStart" id="E:MControl.Data.Caching.GenericDataCache.SyncTimeStart" access="Public" contract="Normal" multicast="true" declaringType="T:MControl.Caching.GenericCache">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
        </class>
      </namespace>
      <namespace name="MControl.Data.Common" id="N:MControl.Data.Common">
        <class name="DalAsync" id="T:MControl.Data.Common.DalAsync" access="Public" namespace="MControl.Data.Common" displayName="DalAsync" abstract="true">
          <derivedBy id="T:MControl.Data.OleDb.DalAsync" displayName="MControl.Data.OleDb.DalAsync" />
          <derivedBy id="T:MControl.Data.SqlClient.DalAsync" displayName="MControl.Data.SqlClient.DalAsync" />
          <implements name="IDalAsync" id="T:MControl.Data.IDalAsync" />
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructor name=".ctor" id="M:MControl.Data.Common.DalAsync.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Common.DalAsync" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="m_connectionString" id="F:MControl.Data.Common.DalAsync.m_connectionString" access="Family" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.Common.DalAsync.m_disposed" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <property name="AsyncDisplayStatus" id="P:MControl.Data.Common.DalAsync.AsyncDisplayStatus" access="Public" contract="Final">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <implements name="AsyncDisplayStatus" id="P:MControl.Data.IDalAsync.AsyncDisplayStatus" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </property>
          <property name="AsyncIsExecuting" id="P:MControl.Data.Common.DalAsync.AsyncIsExecuting" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="AsyncIsExecuting" id="P:MControl.Data.IDalAsync.AsyncIsExecuting" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </property>
          <property name="AsyncResult_DataRows" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataRows" access="Public" contract="Final">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <get access="Public" />
            <implements name="AsyncResult_DataRows" id="P:MControl.Data.IDalAsync.AsyncResult_DataRows" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </property>
          <property name="AsyncResult_DataTable" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataTable" access="Public" contract="Final">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
            <implements name="AsyncResult_DataTable" id="P:MControl.Data.IDalAsync.AsyncResult_DataTable" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </property>
          <property name="AsyncResult_SingleRow" id="P:MControl.Data.Common.DalAsync.AsyncResult_SingleRow" access="Public" contract="Final">
            <type name="DataRow" id="T:System.Data.DataRow" />
            <get access="Public" />
            <implements name="AsyncResult_SingleRow" id="P:MControl.Data.IDalAsync.AsyncResult_SingleRow" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </property>
          <property name="AsyncStatus" id="P:MControl.Data.Common.DalAsync.AsyncStatus" access="Public" contract="Final">
            <type name="STATUS" id="T:MControl.Data.STATUS" valueType="true" />
            <get access="Public" />
            <implements name="AsyncStatus" id="P:MControl.Data.IDalAsync.AsyncStatus" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </property>
          <method name="AsyncExecute" id="M:MControl.Data.Common.DalAsync.AsyncExecute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32,System.Int32)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AsyncExecute" id="M:MControl.Data.IDalAsync.AsyncExecute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32,System.Int32)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteBegin" id="M:MControl.Data.Common.DalAsync.AsyncExecuteBegin(System.AsyncCallback,System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AsyncExecuteBegin" id="M:MControl.Data.IDalAsync.AsyncExecuteBegin(System.AsyncCallback,System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="callback">
              <type name="AsyncCallback" id="T:System.AsyncCallback" />
            </parameter>
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteEnd" id="M:MControl.Data.Common.DalAsync.AsyncExecuteEnd(System.IAsyncResult)" access="Public" contract="Abstract">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <implements name="AsyncExecuteEnd" id="M:MControl.Data.IDalAsync.AsyncExecuteEnd(System.IAsyncResult)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="result">
              <type name="IAsyncResult" id="T:System.IAsyncResult" />
            </parameter>
          </method>
          <method name="AsyncFillDataSource" id="M:MControl.Data.Common.DalAsync.AsyncFillDataSource(System.Data.IDataReader)" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AsyncFillDataSource" id="M:MControl.Data.IDalAsync.AsyncFillDataSource(System.Data.IDataReader)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
          </method>
          <methodOverload name="Dispose" id="Overload:MControl.Data.Common.DalAsync.Dispose">
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
            </method>
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose(System.Boolean)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="disposing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Execute" id="M:MControl.Data.Common.DalAsync.Execute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Abstract">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Execute" id="M:MControl.Data.IDalAsync.Execute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="FillDataSourceSchema" id="M:MControl.Data.Common.DalAsync.FillDataSourceSchema(System.Data.IDataReader,System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Finalize" id="M:MControl.Data.Common.DalAsync.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="GetParameters" id="M:MControl.Data.Common.DalAsync.GetParameters(System.String[],System.Object[])" access="Public" contract="Final">
            <type name="IDataParameter" id="T:System.Data.IDataParameter">
              <array rank="1" />
            </type>
            <implements name="GetParameters" id="M:MControl.Data.IDalAsync.GetParameters(System.String[],System.Object[])" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="names">
              <type name="String" id="T:System.String">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="values">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="InnerDispose" id="M:MControl.Data.Common.DalAsync.InnerDispose" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="OnAsyncCompleted" id="M:MControl.Data.Common.DalAsync.OnAsyncCompleted(System.EventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnAsyncStatusChanged" id="M:MControl.Data.Common.DalAsync.OnAsyncStatusChanged(System.EventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="SetAsyncStatus" id="M:MControl.Data.Common.DalAsync.SetAsyncStatus(System.String,MControl.Data.StatusPriority)" access="Public" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="SetAsyncStatus" id="M:MControl.Data.IDalAsync.SetAsyncStatus(System.String,MControl.Data.StatusPriority)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="Text">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="priority">
              <type name="StatusPriority" id="T:MControl.Data.StatusPriority" valueType="true" />
            </parameter>
          </method>
          <event name="AsyncCompleted" id="E:MControl.Data.Common.DalAsync.AsyncCompleted" access="Public" contract="Final" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncCompleted" id="E:MControl.Data.IDalAsync.AsyncCompleted" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
          <event name="AsyncStatusChanged" id="E:MControl.Data.Common.DalAsync.AsyncStatusChanged" access="Public" contract="Final" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncStatusChanged" id="E:MControl.Data.IDalAsync.AsyncStatusChanged" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
        </class>
        <class name="DalAsyncFactory" id="T:MControl.Data.Common.DalAsyncFactory" access="Public" namespace="MControl.Data.Common" displayName="DalAsyncFactory" abstract="true" sealed="true">
          <methodOverload name="Create" id="Overload:MControl.Data.Common.DalAsyncFactory.Create" contract="Static">
            <method name="Create" id="M:MControl.Data.Common.DalAsyncFactory.Create(System.String,System.String)" access="Public" contract="Static">
              <type name="IDalAsync" id="T:MControl.Data.IDalAsync" />
              <parameter name="provider">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Create" id="M:MControl.Data.Common.DalAsyncFactory.Create(MControl.Data.DBProvider,System.String)" access="Public" contract="Static">
              <type name="IDalAsync" id="T:MControl.Data.IDalAsync" />
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Create" id="M:MControl.Data.Common.DalAsyncFactory.Create(MControl.Data.IDalBase)" access="Public" contract="Static">
              <type name="IDalAsync" id="T:MControl.Data.IDalAsync" />
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="DalCommand" id="T:MControl.Data.Common.DalCommand" access="Public" namespace="MControl.Data.Common" displayName="DalCommand">
          <constructor name=".ctor" id="M:MControl.Data.Common.DalCommand.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Common.DalCommand" /> class.</autoText></summary></documentation>
          </constructor>
          <method name="Factory" id="M:MControl.Data.Common.DalCommand.Factory(MControl.Data.IDalBase)" access="Public" contract="Static">
            <type name="IDalCommand" id="T:MControl.Data.IDalCommand" />
            <parameter name="dalBase">
              <type name="IDalBase" id="T:MControl.Data.IDalBase" />
            </parameter>
          </method>
        </class>
        <class name="DalDB" id="T:MControl.Data.Common.DalDB" access="Public" namespace="MControl.Data.Common" displayName="DalDB" abstract="true">
          <derivedBy id="T:MControl.Data.OleDb.DalDB" displayName="MControl.Data.OleDb.DalDB" />
          <derivedBy id="T:MControl.Data.SqlClient.DalDB" displayName="MControl.Data.SqlClient.DalDB" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.Common.DalDB.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Common.DalDB" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.Common.DalDB.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Common.DalDB" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Common.DalDB.#ctor(MControl.Data.IDalBase)" access="Public" contract="Normal">
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Common.DalDB.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="m_DataSet" id="F:MControl.Data.Common.DalDB.m_DataSet" access="Family" contract="Normal">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.Common.DalDB.m_autoCloseConnection" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.Common.DalDB.m_connectionString" access="Family" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.Common.DalDB.AutoCloseConnection" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Connection" id="P:MControl.Data.Common.DalDB.Connection" access="Public" contract="Abstract">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.Common.DalDB.DBSchema" access="Public" contract="Final">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Transaction" id="P:MControl.Data.Common.DalDB.Transaction" access="Public" contract="Abstract">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="CancelExecuting" id="M:MControl.Data.Common.DalDB.CancelExecuting" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="DAvg" id="M:MControl.Data.Common.DalDB.DAvg(System.String,System.String,System.String)" access="Public" contract="Final">
            <type name="Object" id="T:System.Object" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DCount" id="M:MControl.Data.Common.DalDB.DCount(System.String,System.String,System.String)" access="Public" contract="Final">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DExists" id="M:MControl.Data.Common.DalDB.DExists(System.String,System.String,System.String)" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DHashtable" id="M:MControl.Data.Common.DalDB.DHashtable(System.String,System.String,System.String,System.String)" access="Public" contract="Final">
            <type name="Hashtable" id="T:System.Collections.Hashtable" />
            <parameter name="KeyMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="ValueMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMax" id="M:MControl.Data.Common.DalDB.DMax(System.String,System.String,System.String)" access="Public" contract="Final">
            <type name="Object" id="T:System.Object" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMin" id="M:MControl.Data.Common.DalDB.DMin(System.String,System.String,System.String)" access="Public" contract="Final">
            <type name="Object" id="T:System.Object" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DRow" id="Overload:MControl.Data.Common.DalDB.DRow">
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String,System.Object[])" access="Public" contract="Final">
              <type name="DataRow" id="T:System.Data.DataRow" />
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String)" access="Public" contract="Final">
              <type name="DataRow" id="T:System.Data.DataRow" />
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="DRows" id="Overload:MControl.Data.Common.DalDB.DRows">
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final">
              <type name="DataRow" id="T:System.Data.DataRow">
                <array rank="1" />
              </type>
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String)" access="Public" contract="Final">
              <type name="DataRow" id="T:System.Data.DataRow">
                <array rank="1" />
              </type>
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="DSum" id="M:MControl.Data.Common.DalDB.DSum(System.String,System.String,System.String)" access="Public" contract="Final">
            <type name="Object" id="T:System.Object" />
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DView" id="Overload:MControl.Data.Common.DalDB.DView">
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String)" access="Public" contract="Final">
              <type name="DataView" id="T:System.Data.DataView" />
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final">
              <type name="DataView" id="T:System.Data.DataView" />
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dlookup" id="Overload:MControl.Data.Common.DalDB.Dlookup">
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Int32)" access="Public" contract="Final">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Double)" access="Public" contract="Final">
              <type name="Double" id="T:System.Double" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Decimal)" access="Public" contract="Final">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.DateTime)" access="Public" contract="Final">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Boolean)" access="Public" contract="Final">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.String)" access="Public" contract="Final">
              <type name="String" id="T:System.String" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object)" access="Public" contract="Final">
              <type name="Object" id="T:System.Object" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object[],System.Object)" access="Public" contract="Final">
              <type name="Object" id="T:System.Object" />
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDalSchema" id="Overload:MControl.Data.Common.DalDB.ExecuteDalSchema">
            <method name="ExecuteDalSchema" id="M:MControl.Data.Common.DalDB.ExecuteDalSchema(System.String)" access="Family" contract="Abstract">
              <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDalSchema" id="M:MControl.Data.Common.DalDB.ExecuteDalSchema(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Abstract">
              <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteDataRow" id="M:MControl.Data.Common.DalDB.ExecuteDataRow(System.String)" access="Family" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteDataRowCollection" id="M:MControl.Data.Common.DalDB.ExecuteDataRowCollection(System.String)" access="Family" contract="Normal">
            <type name="DataRowCollection" id="T:System.Data.DataRowCollection" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="ExecuteDataSet" id="Overload:MControl.Data.Common.DalDB.ExecuteDataSet">
            <method name="ExecuteDataSet" id="M:MControl.Data.Common.DalDB.ExecuteDataSet(System.String)" access="Family" contract="Abstract">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataSet" id="M:MControl.Data.Common.DalDB.ExecuteDataSet(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Abstract">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDataTable" id="Overload:MControl.Data.Common.DalDB.ExecuteDataTable">
            <method name="ExecuteDataTable" id="M:MControl.Data.Common.DalDB.ExecuteDataTable(System.String)" access="Public" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.Common.DalDB.ExecuteDataTable(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.Common.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[])" access="Family" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.Common.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[],System.Int32)" access="Family" contract="Abstract">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteNonQuery" id="Overload:MControl.Data.Common.DalDB.ExecuteNonQuery">
            <method name="ExecuteNonQuery" id="M:MControl.Data.Common.DalDB.ExecuteNonQuery(System.String)" access="Public" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteNonQuery" id="M:MControl.Data.Common.DalDB.ExecuteNonQuery(System.String,System.Int32)" access="Family" contract="Abstract">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteScalar" id="Overload:MControl.Data.Common.DalDB.ExecuteScalar">
            <method name="ExecuteScalar" id="M:MControl.Data.Common.DalDB.ExecuteScalar(System.String)" access="Public" contract="Abstract">
              <type name="Object" id="T:System.Object" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteScalar" id="M:MControl.Data.Common.DalDB.ExecuteScalar(System.String,System.Int32)" access="Family" contract="Abstract">
              <type name="Object" id="T:System.Object" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteSingleRow" id="M:MControl.Data.Common.DalDB.ExecuteSingleRow(System.String)" access="Family" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetCmd" id="M:MControl.Data.Common.DalDB.GetCmd(System.String)" access="Family" contract="Abstract">
            <type name="IDbCommand" id="T:System.Data.IDbCommand" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetReader" id="M:MControl.Data.Common.DalDB.GetReader(System.String)" access="Family" contract="Normal">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetSqlString" id="Overload:MControl.Data.Common.DalDB.GetSqlString">
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Data.DataRow[],System.String)" access="Family" contract="Normal">
              <type name="String" id="T:System.String" />
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Object[])" access="Family" contract="Normal">
              <type name="String" id="T:System.String" />
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.Object[])" access="Family" contract="Normal">
              <type name="String" id="T:System.String" />
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="DalProvider" id="T:MControl.Data.Common.DalProvider" access="Public" namespace="MControl.Data.Common" displayName="DalProvider">
          <implements name="IDalBase" id="T:MControl.Data.IDalBase" />
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.Common.DalProvider.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.Common.DalProvider.#ctor(MControl.Data.DBProvider,System.String)" access="Public" contract="Normal">
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Common.DalProvider.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connectionID">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="m_DataSet" id="F:MControl.Data.Common.DalProvider.m_DataSet" access="Family" contract="Normal">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.Common.DalProvider.m_autoCloseConnection" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connection" id="F:MControl.Data.Common.DalProvider.m_connection" access="Family" contract="Normal">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.Common.DalProvider.m_disposed" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_ownsConnection" id="F:MControl.Data.Common.DalProvider.m_ownsConnection" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_transaction" id="F:MControl.Data.Common.DalProvider.m_transaction" access="Family" contract="Normal">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.Common.DalProvider.AutoCloseConnection" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="AutoCloseConnection" id="P:MControl.Data.IDalBase.AutoCloseConnection" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Connection" id="P:MControl.Data.Common.DalProvider.Connection" access="Public" contract="Normal">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
          </property>
          <property name="DBProvider" id="P:MControl.Data.Common.DalProvider.DBProvider" access="Public" contract="Final">
            <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
            <get access="Public" />
            <implements name="DBProvider" id="P:MControl.Data.IDalBase.DBProvider" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.Common.DalProvider.DBSchema" access="Public" contract="Final">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
            <get access="Public" />
            <implements name="DBSchema" id="P:MControl.Data.IDalBase.DBSchema" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="IConnection" id="P:MControl.Data.Common.DalProvider.IConnection" access="Public" contract="Final">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <implements name="IConnection" id="P:MControl.Data.IDalBase.IConnection" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="ITransaction" id="P:MControl.Data.Common.DalProvider.ITransaction" access="Public" contract="Final">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <get access="Public" />
            <implements name="ITransaction" id="P:MControl.Data.IDalBase.ITransaction" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.Common.DalProvider.Initilaized" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Initilaized" id="P:MControl.Data.IDalBase.Initilaized" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="OwnsConnection" id="P:MControl.Data.Common.DalProvider.OwnsConnection" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="OwnsConnection" id="P:MControl.Data.IDalBase.OwnsConnection" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Permit" id="P:MControl.Data.Common.DalProvider.Permit" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Permit" id="P:MControl.Data.IDalBase.Permit" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Transaction" id="P:MControl.Data.Common.DalProvider.Transaction" access="Public" contract="Normal">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <get access="Public" />
          </property>
          <methodOverload name="BeginTransaction" id="Overload:MControl.Data.Common.DalProvider.BeginTransaction">
            <method name="BeginTransaction" id="M:MControl.Data.Common.DalProvider.BeginTransaction" access="Public" contract="Normal">
              <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            </method>
            <method name="BeginTransaction" id="M:MControl.Data.Common.DalProvider.BeginTransaction(System.Data.IsolationLevel)" access="Public" contract="Normal">
              <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
              <parameter name="iso">
                <type name="IsolationLevel" id="T:System.Data.IsolationLevel" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="CommitTransaction" id="M:MControl.Data.Common.DalProvider.CommitTransaction" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="CommitTransaction" id="M:MControl.Data.IDalBase.CommitTransaction" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </method>
          <methodOverload name="Dispose" id="Overload:MControl.Data.Common.DalProvider.Dispose">
            <method name="Dispose" id="M:MControl.Data.Common.DalProvider.Dispose" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
            </method>
            <method name="Dispose" id="M:MControl.Data.Common.DalProvider.Dispose(System.Boolean)" access="Family" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="calledbyuser">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Finalize" id="M:MControl.Data.Common.DalProvider.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="IBeginTransaction" id="M:MControl.Data.Common.DalProvider.IBeginTransaction(System.Data.IsolationLevel)" access="Public" contract="Final">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <implements name="IBeginTransaction" id="M:MControl.Data.IDalBase.IBeginTransaction(System.Data.IsolationLevel)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
            <parameter name="iso">
              <type name="IsolationLevel" id="T:System.Data.IsolationLevel" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="Init" id="Overload:MControl.Data.Common.DalProvider.Init">
            <method name="Init" id="M:MControl.Data.Common.DalProvider.Init(System.String,System.Boolean)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.Common.DalProvider.Init(System.String,System.Boolean,System.String)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean,System.String)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="pk">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.Common.DalProvider.Init(System.String,System.Boolean,MControl.Data.DalSchema,System.String)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean,MControl.Data.DalSchema,System.String)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="dsSchema">
                <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              </parameter>
              <parameter name="pk">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="InitFromXML" id="M:MControl.Data.Common.DalProvider.InitFromXML(System.String,System.String,System.Boolean)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="connectionName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="path">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="autoCloseConnection">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
          <method name="InnerDispose" id="M:MControl.Data.Common.DalProvider.InnerDispose" access="Family" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="RollbackTransaction" id="M:MControl.Data.Common.DalProvider.RollbackTransaction" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="RollbackTransaction" id="M:MControl.Data.IDalBase.RollbackTransaction" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </method>
        </class>
      </namespace>
      <namespace name="MControl.Data.OleDb" id="N:MControl.Data.OleDb">
        <class name="CmdTran" id="T:MControl.Data.OleDb.CmdTran" access="Public" namespace="MControl.Data.OleDb" displayName="CmdTran">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.OleDb.CmdTran.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.OleDb.CmdTran.#ctor(System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)" access="Public" contract="Normal">
              <parameter name="connection">
                <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
              </parameter>
              <parameter name="transaction">
                <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.CmdTran.#ctor(System.Data.OleDb.OleDbConnection)" access="Public" contract="Normal">
              <parameter name="connection">
                <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
              </parameter>
            </constructor>
          </constructorOverload>
          <method name="Begin" id="M:MControl.Data.OleDb.CmdTran.Begin(System.Data.IsolationLevel)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="level">
              <type name="IsolationLevel" id="T:System.Data.IsolationLevel" valueType="true" />
            </parameter>
          </method>
          <method name="Commit" id="M:MControl.Data.OleDb.CmdTran.Commit" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <methodOverload name="Execute" id="Overload:MControl.Data.OleDb.CmdTran.Execute">
            <method name="Execute" id="M:MControl.Data.OleDb.CmdTran.Execute(System.String,MControl.Data.DalReturnType)" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="cmdText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="returnType">
                <type name="DalReturnType" id="T:MControl.Data.DalReturnType" valueType="true" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.CmdTran.Execute(MControl.Data.DBCommandType,System.String,MControl.Data.DalReturnType)" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="cmdType">
                <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
              </parameter>
              <parameter name="cmdText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="returnType">
                <type name="DalReturnType" id="T:MControl.Data.DalReturnType" valueType="true" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.CmdTran.Execute(MControl.Data.DBCommandType,System.String,MControl.Data.DalReturnType,System.Object[])" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="cmdType">
                <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
              </parameter>
              <parameter name="cmdText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="returnType">
                <type name="DalReturnType" id="T:MControl.Data.DalReturnType" valueType="true" />
              </parameter>
              <parameter name="values">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <method name="Rollback" id="M:MControl.Data.OleDb.CmdTran.Rollback" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
        </class>
        <class name="DalAsync" id="T:MControl.Data.OleDb.DalAsync" access="Public" namespace="MControl.Data.OleDb" displayName="DalAsync">
          <base name="DalAsync" id="T:MControl.Data.Common.DalAsync" displayName="MControl.Data.Common.DalAsync" />
          <derivedBy id="T:MControl.Data.OleDb.DalAsyncServer" displayName="MControl.Data.OleDb.DalAsyncServer" />
          <implements name="IDalAsync" id="T:MControl.Data.IDalAsync" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.OleDb.DalAsync.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalAsync.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connection">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalAsync.#ctor(MControl.Data.IDalBase)" access="Public" contract="Normal">
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="m_AsyncConnection" id="F:MControl.Data.OleDb.DalAsync.m_AsyncConnection" access="Family" contract="Normal">
            <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.OleDb.DalAsync.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.OleDb.DalAsync.m_disposed" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <property name="AsyncDisplayStatus" id="P:MControl.Data.Common.DalAsync.AsyncDisplayStatus" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncIsExecuting" id="P:MControl.Data.Common.DalAsync.AsyncIsExecuting" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataRows" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataRows" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataTable" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataTable" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_SingleRow" id="P:MControl.Data.Common.DalAsync.AsyncResult_SingleRow" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncStatus" id="P:MControl.Data.Common.DalAsync.AsyncStatus" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <method name="AsyncExecute" id="M:MControl.Data.OleDb.DalAsync.AsyncExecute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32,System.Int32)" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AsyncExecute" id="M:MControl.Data.IDalAsync.AsyncExecute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32,System.Int32)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteBegin" id="M:MControl.Data.OleDb.DalAsync.AsyncExecuteBegin(System.AsyncCallback,System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AsyncExecuteBegin" id="M:MControl.Data.IDalAsync.AsyncExecuteBegin(System.AsyncCallback,System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="callback">
              <type name="AsyncCallback" id="T:System.AsyncCallback" />
            </parameter>
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteEnd" id="M:MControl.Data.OleDb.DalAsync.AsyncExecuteEnd(System.IAsyncResult)" access="Public" contract="Override">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <implements name="AsyncExecuteEnd" id="M:MControl.Data.IDalAsync.AsyncExecuteEnd(System.IAsyncResult)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="result">
              <type name="IAsyncResult" id="T:System.IAsyncResult" />
            </parameter>
          </method>
          <method name="AsyncFillDataSource" id="M:MControl.Data.Common.DalAsync.AsyncFillDataSource(System.Data.IDataReader)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
          </method>
          <methodOverload name="Dispose" id="Overload:MControl.Data.OleDb.DalAsync.Dispose" declaringType="T:MControl.Data.Common.DalAsync">
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync" />
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose(System.Boolean)" access="Family" contract="Virtual" declaringType="T:MControl.Data.Common.DalAsync">
              <parameter name="disposing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Execute" id="M:MControl.Data.OleDb.DalAsync.Execute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Execute" id="M:MControl.Data.IDalAsync.Execute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="FillDataSourceSchema" id="M:MControl.Data.Common.DalAsync.FillDataSourceSchema(System.Data.IDataReader,System.String)" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Finalize" id="M:MControl.Data.Common.DalAsync.Finalize" access="Family" contract="Override" declaringType="T:MControl.Data.Common.DalAsync" />
          <method name="GetParameters" id="M:MControl.Data.Common.DalAsync.GetParameters(System.String[],System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="names">
              <type name="String" id="T:System.String">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="values">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="InnerDispose" id="M:MControl.Data.OleDb.DalAsync.InnerDispose" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="OnAsyncCompleted" id="M:MControl.Data.OleDb.DalAsync.OnAsyncCompleted(System.EventArgs)" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnAsyncStatusChanged" id="M:MControl.Data.OleDb.DalAsync.OnAsyncStatusChanged(System.EventArgs)" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="SetAsyncStatus" id="M:MControl.Data.Common.DalAsync.SetAsyncStatus(System.String,MControl.Data.StatusPriority)" access="Public" contract="Virtual" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="Text">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="priority">
              <type name="StatusPriority" id="T:MControl.Data.StatusPriority" valueType="true" />
            </parameter>
          </method>
          <event name="AsyncCompleted" id="E:MControl.Data.OleDb.DalAsync.AsyncCompleted" access="Public" contract="Final" multicast="true" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncCompleted" id="E:MControl.Data.IDalAsync.AsyncCompleted" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
          <event name="AsyncStatusChanged" id="E:MControl.Data.OleDb.DalAsync.AsyncStatusChanged" access="Public" contract="Final" multicast="true" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncStatusChanged" id="E:MControl.Data.IDalAsync.AsyncStatusChanged" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
        </class>
        <class name="DalAsyncServer" id="T:MControl.Data.OleDb.DalAsyncServer" access="Public" namespace="MControl.Data.OleDb" displayName="DalAsyncServer">
          <base name="DalAsync" id="T:MControl.Data.OleDb.DalAsync" displayName="MControl.Data.OleDb.DalAsync">
            <base name="DalAsync" id="T:MControl.Data.Common.DalAsync" displayName="MControl.Data.Common.DalAsync" />
          </base>
          <implements name="IDalAsync" id="T:MControl.Data.IDalAsync" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.OleDb.DalAsyncServer.#ctor(System.String)" access="Public" contract="Normal">
            <parameter name="connectionID">
              <type name="String" id="T:System.String" />
            </parameter>
          </constructor>
          <field name="m_AsyncConnection" id="F:MControl.Data.OleDb.DalAsyncServer.m_AsyncConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.OleDb.DalAsync">
            <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.OleDb.DalAsyncServer.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.OleDb.DalAsyncServer.m_disposed" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <property name="AsyncDisplayStatus" id="P:MControl.Data.Common.DalAsync.AsyncDisplayStatus" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncIsExecuting" id="P:MControl.Data.Common.DalAsync.AsyncIsExecuting" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataRows" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataRows" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataTable" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataTable" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_SingleRow" id="P:MControl.Data.Common.DalAsync.AsyncResult_SingleRow" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncStatus" id="P:MControl.Data.Common.DalAsync.AsyncStatus" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <method name="AsyncExecute" id="M:MControl.Data.OleDb.DalAsync.AsyncExecute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32,System.Int32)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalAsync">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteBegin" id="M:MControl.Data.OleDb.DalAsync.AsyncExecuteBegin(System.AsyncCallback,System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalAsync">
            <parameter name="callback">
              <type name="AsyncCallback" id="T:System.AsyncCallback" />
            </parameter>
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteEnd" id="M:MControl.Data.OleDb.DalAsync.AsyncExecuteEnd(System.IAsyncResult)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalAsync">
            <parameter name="result">
              <type name="IAsyncResult" id="T:System.IAsyncResult" />
            </parameter>
          </method>
          <method name="AsyncFillDataSource" id="M:MControl.Data.Common.DalAsync.AsyncFillDataSource(System.Data.IDataReader)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
          </method>
          <methodOverload name="Dispose" id="Overload:MControl.Data.OleDb.DalAsyncServer.Dispose" declaringType="T:MControl.Data.Common.DalAsync">
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync" />
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose(System.Boolean)" access="Family" contract="Virtual" declaringType="T:MControl.Data.Common.DalAsync">
              <parameter name="disposing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Execute" id="M:MControl.Data.OleDb.DalAsync.Execute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalAsync">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="FillDataSourceSchema" id="M:MControl.Data.Common.DalAsync.FillDataSourceSchema(System.Data.IDataReader,System.String)" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Finalize" id="M:MControl.Data.Common.DalAsync.Finalize" access="Family" contract="Override" declaringType="T:MControl.Data.Common.DalAsync" />
          <method name="GetParameters" id="M:MControl.Data.Common.DalAsync.GetParameters(System.String[],System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="names">
              <type name="String" id="T:System.String">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="values">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="InnerDispose" id="M:MControl.Data.OleDb.DalAsync.InnerDispose" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalAsync" />
          <method name="OnAsyncCompleted" id="M:MControl.Data.OleDb.DalAsync.OnAsyncCompleted(System.EventArgs)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalAsync">
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnAsyncStatusChanged" id="M:MControl.Data.OleDb.DalAsync.OnAsyncStatusChanged(System.EventArgs)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalAsync">
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="SetAsyncStatus" id="M:MControl.Data.Common.DalAsync.SetAsyncStatus(System.String,MControl.Data.StatusPriority)" access="Public" contract="Virtual" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="Text">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="priority">
              <type name="StatusPriority" id="T:MControl.Data.StatusPriority" valueType="true" />
            </parameter>
          </method>
          <event name="AsyncCompleted" id="E:MControl.Data.OleDb.DalAsyncServer.AsyncCompleted" access="Public" contract="Final" multicast="true" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncCompleted" id="E:MControl.Data.IDalAsync.AsyncCompleted" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
          <event name="AsyncStatusChanged" id="E:MControl.Data.OleDb.DalAsyncServer.AsyncStatusChanged" access="Public" contract="Final" multicast="true" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncStatusChanged" id="E:MControl.Data.IDalAsync.AsyncStatusChanged" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
        </class>
        <class name="DalBase" id="T:MControl.Data.OleDb.DalBase" access="Public" namespace="MControl.Data.OleDb" displayName="DalBase" abstract="true">
          <implements name="IDalBase" id="T:MControl.Data.IDalBase" />
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructor name=".ctor" id="M:MControl.Data.OleDb.DalBase.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.OleDb.DalBase" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="m_DataSet" id="F:MControl.Data.OleDb.DalBase.m_DataSet" access="Family" contract="Normal">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_ObjectTypes" id="F:MControl.Data.OleDb.DalBase.m_ObjectTypes" access="Family" contract="Normal">
            <type name="Hashtable" id="T:System.Collections.Hashtable" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.OleDb.DalBase.m_autoCloseConnection" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connection" id="F:MControl.Data.OleDb.DalBase.m_connection" access="Family" contract="Normal">
            <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.OleDb.DalBase.m_disposed" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_ownsConnection" id="F:MControl.Data.OleDb.DalBase.m_ownsConnection" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_transaction" id="F:MControl.Data.OleDb.DalBase.m_transaction" access="Family" contract="Normal">
            <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.OleDb.DalBase.AutoCloseConnection" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="AutoCloseConnection" id="P:MControl.Data.IDalBase.AutoCloseConnection" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Connection" id="P:MControl.Data.OleDb.DalBase.Connection" access="Public" contract="Normal">
            <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
            <get access="Public" />
          </property>
          <property name="DBProvider" id="P:MControl.Data.OleDb.DalBase.DBProvider" access="Public" contract="Final">
            <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
            <get access="Public" />
            <implements name="DBProvider" id="P:MControl.Data.IDalBase.DBProvider" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.OleDb.DalBase.DBSchema" access="Public" contract="Final">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
            <get access="Public" />
            <implements name="DBSchema" id="P:MControl.Data.IDalBase.DBSchema" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="IConnection" id="P:MControl.Data.OleDb.DalBase.IConnection" access="Public" contract="Final">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <implements name="IConnection" id="P:MControl.Data.IDalBase.IConnection" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="ITransaction" id="P:MControl.Data.OleDb.DalBase.ITransaction" access="Public" contract="Final">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <get access="Public" />
            <implements name="ITransaction" id="P:MControl.Data.IDalBase.ITransaction" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.OleDb.DalBase.Initilaized" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Initilaized" id="P:MControl.Data.IDalBase.Initilaized" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="OwnsConnection" id="P:MControl.Data.OleDb.DalBase.OwnsConnection" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="OwnsConnection" id="P:MControl.Data.IDalBase.OwnsConnection" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Permit" id="P:MControl.Data.OleDb.DalBase.Permit" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Permit" id="P:MControl.Data.IDalBase.Permit" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Transaction" id="P:MControl.Data.OleDb.DalBase.Transaction" access="Public" contract="Normal">
            <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
            <get access="Public" />
          </property>
          <methodOverload name="BeginTransaction" id="Overload:MControl.Data.OleDb.DalBase.BeginTransaction">
            <method name="BeginTransaction" id="M:MControl.Data.OleDb.DalBase.BeginTransaction" access="Public" contract="Normal">
              <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
            </method>
            <method name="BeginTransaction" id="M:MControl.Data.OleDb.DalBase.BeginTransaction(System.Data.IsolationLevel)" access="Public" contract="Normal">
              <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
              <parameter name="iso">
                <type name="IsolationLevel" id="T:System.Data.IsolationLevel" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="CommitTransaction" id="M:MControl.Data.OleDb.DalBase.CommitTransaction" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="CommitTransaction" id="M:MControl.Data.IDalBase.CommitTransaction" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </method>
          <methodOverload name="Dispose" id="Overload:MControl.Data.OleDb.DalBase.Dispose">
            <method name="Dispose" id="M:MControl.Data.OleDb.DalBase.Dispose" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
            </method>
            <method name="Dispose" id="M:MControl.Data.OleDb.DalBase.Dispose(System.Boolean)" access="Family" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="calledbyuser">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Finalize" id="M:MControl.Data.OleDb.DalBase.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="GetDalDB" id="M:MControl.Data.OleDb.DalBase.GetDalDB" access="Family" contract="Normal">
            <type name="IDalDB" id="T:MControl.Data.IDalDB" />
          </method>
          <method name="IBeginTransaction" id="M:MControl.Data.OleDb.DalBase.IBeginTransaction(System.Data.IsolationLevel)" access="Public" contract="Final">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <implements name="IBeginTransaction" id="M:MControl.Data.IDalBase.IBeginTransaction(System.Data.IsolationLevel)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
            <parameter name="iso">
              <type name="IsolationLevel" id="T:System.Data.IsolationLevel" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="Init" id="Overload:MControl.Data.OleDb.DalBase.Init">
            <method name="Init" id="M:MControl.Data.OleDb.DalBase.Init(System.String,System.Boolean,System.String)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean,System.String)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="pk">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.OleDb.DalBase.Init(System.String,System.Boolean,MControl.Data.DalSchema,System.String)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean,MControl.Data.DalSchema,System.String)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="dsSchema">
                <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              </parameter>
              <parameter name="pk">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.OleDb.DalBase.Init(System.Data.OleDb.OleDbConnection,System.Boolean,System.Boolean,MControl.Data.DalSchema)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="connection">
                <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="ownsConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="dsSchema">
                <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.OleDb.DalBase.Init(System.String,System.Boolean)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="InitFromXML" id="M:MControl.Data.OleDb.DalBase.InitFromXML(System.String,System.String,System.Boolean)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="connectionID">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="path">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="autoCloseConnection">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
          <method name="InnerDispose" id="M:MControl.Data.OleDb.DalBase.InnerDispose" access="Family" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="RollbackTransaction" id="M:MControl.Data.OleDb.DalBase.RollbackTransaction" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="RollbackTransaction" id="M:MControl.Data.IDalBase.RollbackTransaction" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </method>
          <method name="UpdateAllBaseObjects" id="M:MControl.Data.OleDb.DalBase.UpdateAllBaseObjects" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="UpdateBase" id="M:MControl.Data.OleDb.DalBase.UpdateBase(MControl.Data.IDalDB)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="dal">
              <type name="IDalDB" id="T:MControl.Data.IDalDB" />
            </parameter>
          </method>
        </class>
        <class name="DalCmd" id="T:MControl.Data.OleDb.DalCmd" access="Public" namespace="MControl.Data.OleDb" displayName="DalCmd" sealed="true">
          <method name="Execute" id="M:MControl.Data.OleDb.DalCmd.Execute(System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction,System.Reflection.MethodInfo,System.Object[],System.Boolean)" access="Public" contract="Static">
            <type name="Object" id="T:System.Object" />
            <parameter name="connection">
              <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
            </parameter>
            <parameter name="transaction">
              <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
            </parameter>
            <parameter name="method">
              <type name="MethodInfo" id="T:System.Reflection.MethodInfo" />
            </parameter>
            <parameter name="values">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="autoCloseConnection">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
        </class>
        <class name="DalCommand" id="T:MControl.Data.OleDb.DalCommand" access="Public" namespace="MControl.Data.OleDb" displayName="DalCommand">
          <base name="DalDB" id="T:MControl.Data.OleDb.DalDB" displayName="MControl.Data.OleDb.DalDB">
            <base name="DalDB" id="T:MControl.Data.Common.DalDB" displayName="MControl.Data.Common.DalDB" />
          </base>
          <derivedBy id="T:MControl.Data.OleDb.DalCommandServer" displayName="MControl.Data.OleDb.DalCommandServer" />
          <implements name="IDalDB" id="T:MControl.Data.IDalDB" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" />
          <implements name="IDalCommand" id="T:MControl.Data.IDalCommand" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.OleDb.DalCommand.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalCommand.#ctor(MControl.Data.IDalBase)" access="Public" contract="Normal">
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalCommand.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="m_DataSet" id="F:MControl.Data.OleDb.DalCommand.m_DataSet" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.OleDb.DalCommand.m_autoCloseConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connection" id="F:MControl.Data.OleDb.DalCommand.m_connection" access="Family" contract="Normal" declaringType="T:MControl.Data.OleDb.DalDB">
            <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.OleDb.DalCommand.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.OleDb.DalCommand.m_disposed" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_transaction" id="F:MControl.Data.OleDb.DalCommand.m_transaction" access="Family" contract="Normal" declaringType="T:MControl.Data.OleDb.DalDB">
            <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.Common.DalDB.AutoCloseConnection" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Connection" id="P:MControl.Data.OleDb.DalDB.Connection" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.Common.DalDB.DBSchema" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Transaction" id="P:MControl.Data.OleDb.DalDB.Transaction" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="CancelExecuting" id="M:MControl.Data.Common.DalDB.CancelExecuting" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalDB" />
          <method name="DAvg" id="M:MControl.Data.Common.DalDB.DAvg(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DCount" id="M:MControl.Data.Common.DalDB.DCount(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DExists" id="M:MControl.Data.Common.DalDB.DExists(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DHashtable" id="M:MControl.Data.Common.DalDB.DHashtable(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="KeyMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="ValueMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMax" id="M:MControl.Data.Common.DalDB.DMax(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMin" id="M:MControl.Data.Common.DalDB.DMin(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DRow" id="Overload:MControl.Data.OleDb.DalCommand.DRow" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="DRows" id="Overload:MControl.Data.OleDb.DalCommand.DRows" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="DSum" id="M:MControl.Data.Common.DalDB.DSum(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DView" id="Overload:MControl.Data.OleDb.DalCommand.DView" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dispose" id="Overload:MControl.Data.OleDb.DalCommand.Dispose">
            <method name="Dispose" id="M:MControl.Data.OleDb.DalCommand.Dispose" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
            </method>
            <method name="Dispose" id="M:MControl.Data.OleDb.DalCommand.Dispose(System.Boolean)" access="Family" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="disposing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dlookup" id="Overload:MControl.Data.OleDb.DalCommand.Dlookup" declaringType="T:MControl.Data.Common.DalDB">
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Int32)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Double)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Decimal)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.DateTime)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Boolean)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object[],System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Execute" id="Overload:MControl.Data.OleDb.DalCommand.Execute">
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Boolean)" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Boolean,System.Object[])" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Object[])" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Data.OleDb.OleDbTransaction,System.Boolean,System.Object[])" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="transaction">
                <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Data.OleDb.OleDbTransaction,System.Reflection.MethodInfo,System.Boolean,System.Object[])" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="transaction">
                <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
              </parameter>
              <parameter name="method">
                <type name="MethodInfo" id="T:System.Reflection.MethodInfo" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDalSchema" id="Overload:MControl.Data.OleDb.DalCommand.ExecuteDalSchema" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteDalSchema" id="M:MControl.Data.OleDb.DalDB.ExecuteDalSchema(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDalSchema" id="M:MControl.Data.OleDb.DalDB.ExecuteDalSchema(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteDataRow" id="M:MControl.Data.Common.DalDB.ExecuteDataRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteDataRowCollection" id="M:MControl.Data.Common.DalDB.ExecuteDataRowCollection(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="ExecuteDataSet" id="Overload:MControl.Data.OleDb.DalCommand.ExecuteDataSet" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteDataSet" id="M:MControl.Data.OleDb.DalDB.ExecuteDataSet(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataSet" id="M:MControl.Data.OleDb.DalDB.ExecuteDataSet(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDataTable" id="Overload:MControl.Data.OleDb.DalCommand.ExecuteDataTable" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[])" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[],System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteNonQuery" id="Overload:MControl.Data.OleDb.DalCommand.ExecuteNonQuery" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteNonQuery" id="M:MControl.Data.OleDb.DalDB.ExecuteNonQuery(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteNonQuery" id="M:MControl.Data.OleDb.DalDB.ExecuteNonQuery(System.String,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteScalar" id="Overload:MControl.Data.OleDb.DalCommand.ExecuteScalar" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteScalar" id="M:MControl.Data.OleDb.DalDB.ExecuteScalar(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteScalar" id="M:MControl.Data.OleDb.DalDB.ExecuteScalar(System.String,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteSingleRow" id="M:MControl.Data.Common.DalDB.ExecuteSingleRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Finalize" id="M:MControl.Data.OleDb.DalCommand.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="GetCmd" id="M:MControl.Data.OleDb.DalDB.GetCmd(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetReader" id="M:MControl.Data.Common.DalDB.GetReader(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetSqlString" id="Overload:MControl.Data.OleDb.DalCommand.GetSqlString" declaringType="T:MControl.Data.Common.DalDB">
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Data.DataRow[],System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <method name="InnerDispose" id="M:MControl.Data.OleDb.DalCommand.InnerDispose" access="Family" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
        </class>
        <class name="DalCommandServer" id="T:MControl.Data.OleDb.DalCommandServer" access="Public" namespace="MControl.Data.OleDb" displayName="DalCommandServer">
          <base name="DalCommand" id="T:MControl.Data.OleDb.DalCommand" displayName="MControl.Data.OleDb.DalCommand">
            <base name="DalDB" id="T:MControl.Data.OleDb.DalDB" displayName="MControl.Data.OleDb.DalDB">
              <base name="DalDB" id="T:MControl.Data.Common.DalDB" displayName="MControl.Data.Common.DalDB" />
            </base>
          </base>
          <implements name="IDalDB" id="T:MControl.Data.IDalDB" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <implements name="IDalCommand" id="T:MControl.Data.IDalCommand" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.OleDb.DalCommandServer.#ctor(System.String)" access="Public" contract="Normal">
            <parameter name="connectionID">
              <type name="String" id="T:System.String" />
            </parameter>
          </constructor>
          <field name="m_DataSet" id="F:MControl.Data.OleDb.DalCommandServer.m_DataSet" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.OleDb.DalCommandServer.m_autoCloseConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connection" id="F:MControl.Data.OleDb.DalCommandServer.m_connection" access="Family" contract="Normal" declaringType="T:MControl.Data.OleDb.DalDB">
            <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.OleDb.DalCommandServer.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.OleDb.DalCommandServer.m_disposed" access="Family" contract="Normal" declaringType="T:MControl.Data.OleDb.DalCommand">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_transaction" id="F:MControl.Data.OleDb.DalCommandServer.m_transaction" access="Family" contract="Normal" declaringType="T:MControl.Data.OleDb.DalDB">
            <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.Common.DalDB.AutoCloseConnection" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Connection" id="P:MControl.Data.OleDb.DalDB.Connection" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.Common.DalDB.DBSchema" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Transaction" id="P:MControl.Data.OleDb.DalDB.Transaction" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="CancelExecuting" id="M:MControl.Data.Common.DalDB.CancelExecuting" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalDB" />
          <method name="DAvg" id="M:MControl.Data.Common.DalDB.DAvg(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DCount" id="M:MControl.Data.Common.DalDB.DCount(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DExists" id="M:MControl.Data.Common.DalDB.DExists(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DHashtable" id="M:MControl.Data.Common.DalDB.DHashtable(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="KeyMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="ValueMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMax" id="M:MControl.Data.Common.DalDB.DMax(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMin" id="M:MControl.Data.Common.DalDB.DMin(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DRow" id="Overload:MControl.Data.OleDb.DalCommandServer.DRow" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="DRows" id="Overload:MControl.Data.OleDb.DalCommandServer.DRows" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="DSum" id="M:MControl.Data.Common.DalDB.DSum(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DView" id="Overload:MControl.Data.OleDb.DalCommandServer.DView" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dispose" id="Overload:MControl.Data.OleDb.DalCommandServer.Dispose" declaringType="T:MControl.Data.OleDb.DalCommand">
            <method name="Dispose" id="M:MControl.Data.OleDb.DalCommand.Dispose" access="Public" contract="Final" declaringType="T:MControl.Data.OleDb.DalCommand" />
            <method name="Dispose" id="M:MControl.Data.OleDb.DalCommand.Dispose(System.Boolean)" access="Family" contract="Normal" declaringType="T:MControl.Data.OleDb.DalCommand">
              <parameter name="disposing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dlookup" id="Overload:MControl.Data.OleDb.DalCommandServer.Dlookup" declaringType="T:MControl.Data.Common.DalDB">
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Int32)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Double)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Decimal)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.DateTime)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Boolean)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object[],System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Execute" id="Overload:MControl.Data.OleDb.DalCommandServer.Execute" declaringType="T:MControl.Data.OleDb.DalCommand">
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute" access="Family" contract="Virtual" declaringType="T:MControl.Data.OleDb.DalCommand" />
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Boolean)" access="Family" contract="Virtual" declaringType="T:MControl.Data.OleDb.DalCommand">
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Boolean,System.Object[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.OleDb.DalCommand">
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Object[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.OleDb.DalCommand">
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Data.OleDb.OleDbTransaction,System.Boolean,System.Object[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.OleDb.DalCommand">
              <parameter name="transaction">
                <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.OleDb.DalCommand.Execute(System.Data.OleDb.OleDbTransaction,System.Reflection.MethodInfo,System.Boolean,System.Object[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.OleDb.DalCommand">
              <parameter name="transaction">
                <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
              </parameter>
              <parameter name="method">
                <type name="MethodInfo" id="T:System.Reflection.MethodInfo" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDalSchema" id="Overload:MControl.Data.OleDb.DalCommandServer.ExecuteDalSchema" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteDalSchema" id="M:MControl.Data.OleDb.DalDB.ExecuteDalSchema(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDalSchema" id="M:MControl.Data.OleDb.DalDB.ExecuteDalSchema(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteDataRow" id="M:MControl.Data.Common.DalDB.ExecuteDataRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteDataRowCollection" id="M:MControl.Data.Common.DalDB.ExecuteDataRowCollection(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="ExecuteDataSet" id="Overload:MControl.Data.OleDb.DalCommandServer.ExecuteDataSet" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteDataSet" id="M:MControl.Data.OleDb.DalDB.ExecuteDataSet(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataSet" id="M:MControl.Data.OleDb.DalDB.ExecuteDataSet(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDataTable" id="Overload:MControl.Data.OleDb.DalCommandServer.ExecuteDataTable" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[])" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[],System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteNonQuery" id="Overload:MControl.Data.OleDb.DalCommandServer.ExecuteNonQuery" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteNonQuery" id="M:MControl.Data.OleDb.DalDB.ExecuteNonQuery(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteNonQuery" id="M:MControl.Data.OleDb.DalDB.ExecuteNonQuery(System.String,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteScalar" id="Overload:MControl.Data.OleDb.DalCommandServer.ExecuteScalar" declaringType="T:MControl.Data.OleDb.DalDB">
            <method name="ExecuteScalar" id="M:MControl.Data.OleDb.DalDB.ExecuteScalar(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteScalar" id="M:MControl.Data.OleDb.DalDB.ExecuteScalar(System.String,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteSingleRow" id="M:MControl.Data.Common.DalDB.ExecuteSingleRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Finalize" id="M:MControl.Data.OleDb.DalCommand.Finalize" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalCommand" />
          <method name="GetCmd" id="M:MControl.Data.OleDb.DalDB.GetCmd(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.OleDb.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetReader" id="M:MControl.Data.Common.DalDB.GetReader(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetSqlString" id="Overload:MControl.Data.OleDb.DalCommandServer.GetSqlString" declaringType="T:MControl.Data.Common.DalDB">
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Data.DataRow[],System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <method name="InnerDispose" id="M:MControl.Data.OleDb.DalCommand.InnerDispose" access="Family" contract="Normal" declaringType="T:MControl.Data.OleDb.DalCommand" />
        </class>
        <class name="DalDB" id="T:MControl.Data.OleDb.DalDB" access="Public" namespace="MControl.Data.OleDb" displayName="DalDB">
          <base name="DalDB" id="T:MControl.Data.Common.DalDB" displayName="MControl.Data.Common.DalDB" />
          <derivedBy id="T:MControl.Data.OleDb.DalCommand" displayName="MControl.Data.OleDb.DalCommand" />
          <implements name="IDalDB" id="T:MControl.Data.IDalDB" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.OleDb.DalDB.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.OleDb.DalDB" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalDB.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.OleDb.DalDB" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalDB.#ctor(MControl.Data.IDalBase)" access="Public" contract="Normal">
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalDB.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="m_DataSet" id="F:MControl.Data.OleDb.DalDB.m_DataSet" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.OleDb.DalDB.m_autoCloseConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connection" id="F:MControl.Data.OleDb.DalDB.m_connection" access="Family" contract="Normal">
            <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.OleDb.DalDB.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_transaction" id="F:MControl.Data.OleDb.DalDB.m_transaction" access="Family" contract="Normal">
            <type name="OleDbTransaction" id="T:System.Data.OleDb.OleDbTransaction" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.Common.DalDB.AutoCloseConnection" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Connection" id="P:MControl.Data.OleDb.DalDB.Connection" access="Public" contract="Override">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <set access="Public" />
            <implements name="Connection" id="P:MControl.Data.IDalDB.Connection" interface="IDalDB" interfaceId="T:MControl.Data.IDalDB" declaringType="MControl.Data.IDalDB" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.Common.DalDB.DBSchema" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Transaction" id="P:MControl.Data.OleDb.DalDB.Transaction" access="Public" contract="Override">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <get access="Public" />
            <set access="Public" />
            <implements name="Transaction" id="P:MControl.Data.IDalDB.Transaction" interface="IDalDB" interfaceId="T:MControl.Data.IDalDB" declaringType="MControl.Data.IDalDB" />
          </property>
          <method name="CancelExecuting" id="M:MControl.Data.Common.DalDB.CancelExecuting" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalDB" />
          <method name="DAvg" id="M:MControl.Data.Common.DalDB.DAvg(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DCount" id="M:MControl.Data.Common.DalDB.DCount(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DExists" id="M:MControl.Data.Common.DalDB.DExists(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DHashtable" id="M:MControl.Data.Common.DalDB.DHashtable(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="KeyMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="ValueMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMax" id="M:MControl.Data.Common.DalDB.DMax(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMin" id="M:MControl.Data.Common.DalDB.DMin(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DRow" id="Overload:MControl.Data.OleDb.DalDB.DRow" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="DRows" id="Overload:MControl.Data.OleDb.DalDB.DRows" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="DSum" id="M:MControl.Data.Common.DalDB.DSum(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DView" id="Overload:MControl.Data.OleDb.DalDB.DView" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dlookup" id="Overload:MControl.Data.OleDb.DalDB.Dlookup" declaringType="T:MControl.Data.Common.DalDB">
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Int32)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Double)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Decimal)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.DateTime)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Boolean)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object[],System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDalSchema" id="Overload:MControl.Data.OleDb.DalDB.ExecuteDalSchema">
            <method name="ExecuteDalSchema" id="M:MControl.Data.OleDb.DalDB.ExecuteDalSchema(System.String)" access="Family" contract="Override">
              <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDalSchema" id="M:MControl.Data.OleDb.DalDB.ExecuteDalSchema(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override">
              <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteDataRow" id="M:MControl.Data.Common.DalDB.ExecuteDataRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteDataRowCollection" id="M:MControl.Data.Common.DalDB.ExecuteDataRowCollection(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="ExecuteDataSet" id="Overload:MControl.Data.OleDb.DalDB.ExecuteDataSet">
            <method name="ExecuteDataSet" id="M:MControl.Data.OleDb.DalDB.ExecuteDataSet(System.String)" access="Family" contract="Override">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataSet" id="M:MControl.Data.OleDb.DalDB.ExecuteDataSet(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDataTable" id="Overload:MControl.Data.OleDb.DalDB.ExecuteDataTable">
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String)" access="Public" contract="Override">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[])" access="Family" contract="Override">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.OleDb.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[],System.Int32)" access="Family" contract="Override">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteNonQuery" id="Overload:MControl.Data.OleDb.DalDB.ExecuteNonQuery">
            <method name="ExecuteNonQuery" id="M:MControl.Data.OleDb.DalDB.ExecuteNonQuery(System.String)" access="Public" contract="Override">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteNonQuery" id="M:MControl.Data.OleDb.DalDB.ExecuteNonQuery(System.String,System.Int32)" access="Family" contract="Override">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteScalar" id="Overload:MControl.Data.OleDb.DalDB.ExecuteScalar">
            <method name="ExecuteScalar" id="M:MControl.Data.OleDb.DalDB.ExecuteScalar(System.String)" access="Public" contract="Override">
              <type name="Object" id="T:System.Object" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteScalar" id="M:MControl.Data.OleDb.DalDB.ExecuteScalar(System.String,System.Int32)" access="Family" contract="Override">
              <type name="Object" id="T:System.Object" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteSingleRow" id="M:MControl.Data.Common.DalDB.ExecuteSingleRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetCmd" id="M:MControl.Data.OleDb.DalDB.GetCmd(System.String)" access="Family" contract="Override">
            <type name="IDbCommand" id="T:System.Data.IDbCommand" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetReader" id="M:MControl.Data.Common.DalDB.GetReader(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetSqlString" id="Overload:MControl.Data.OleDb.DalDB.GetSqlString" declaringType="T:MControl.Data.Common.DalDB">
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Data.DataRow[],System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="DalFactory" id="T:MControl.Data.OleDb.DalFactory" access="Public" namespace="MControl.Data.OleDb" displayName="DalFactory" sealed="true">
          <method name="CreateDB" id="M:MControl.Data.OleDb.DalFactory.CreateDB(System.Type)" access="Public" contract="Static">
            <type name="DalDB" id="T:MControl.Data.OleDb.DalDB" />
            <parameter name="encapType">
              <type name="Type" id="T:System.Type" />
            </parameter>
          </method>
          <method name="SaveAssemply" id="M:MControl.Data.OleDb.DalFactory.SaveAssemply(System.String)" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="fileName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="DalParamAttribute" id="T:MControl.Data.OleDb.DalParamAttribute" access="Public" namespace="MControl.Data.OleDb" displayName="DalParamAttribute">
          <attribute name="AttributeUsageAttribute" id="T:System.AttributeUsageAttribute">
            <argument id="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" type="System.AttributeTargets" value="AttributeTargets.Parameter" />
          </attribute>
          <base name="Attribute" id="T:System.Attribute" displayName="System.Attribute" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.OleDb.DalParamAttribute.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.OleDb.DalParamAttribute" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalParamAttribute.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.OleDb.DalParamAttribute" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalParamAttribute.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalParamAttribute.#ctor(System.Int32)" access="Public" contract="Normal">
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalParamAttribute.#ctor(MControl.Data.DalParamType)" access="Public" contract="Normal">
              <parameter name="parameterType">
                <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalParamAttribute.#ctor(MControl.Data.DalParamType,System.Int32)" access="Public" contract="Normal">
              <parameter name="parameterType">
                <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalParamAttribute.#ctor(MControl.Data.DalParamType,System.String)" access="Public" contract="Normal">
              <parameter name="parameterType">
                <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
              </parameter>
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalParamAttribute.#ctor(System.String,System.Int32)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DalParamAttribute.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Byte,System.Byte,System.Object,MControl.Data.DalParamType)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sqlDbType">
                <type name="OleDbType" id="T:System.Data.OleDb.OleDbType" valueType="true" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="precision">
                <type name="Byte" id="T:System.Byte" valueType="true" />
              </parameter>
              <parameter name="scale">
                <type name="Byte" id="T:System.Byte" valueType="true" />
              </parameter>
              <parameter name="AsNull">
                <type name="Object" id="T:System.Object" />
              </parameter>
              <parameter name="parameterType">
                <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="AsNull" id="P:MControl.Data.OleDb.DalParamAttribute.AsNull" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Name" id="P:MControl.Data.OleDb.DalParamAttribute.Name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ParameterType" id="P:MControl.Data.OleDb.DalParamAttribute.ParameterType" access="Public" contract="Normal">
            <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Precision" id="P:MControl.Data.OleDb.DalParamAttribute.Precision" access="Public" contract="Normal">
            <type name="Byte" id="T:System.Byte" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Scale" id="P:MControl.Data.OleDb.DalParamAttribute.Scale" access="Public" contract="Normal">
            <type name="Byte" id="T:System.Byte" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Size" id="P:MControl.Data.OleDb.DalParamAttribute.Size" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="SqlDbType" id="P:MControl.Data.OleDb.DalParamAttribute.SqlDbType" access="Public" contract="Normal">
            <type name="OleDbType" id="T:System.Data.OleDb.OleDbType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="GetAttributeBuilder" id="M:MControl.Data.OleDb.DalParamAttribute.GetAttributeBuilder(MControl.Data.OleDb.DalParamAttribute)" access="Public" contract="Static">
            <type name="CustomAttributeBuilder" id="T:System.Reflection.Emit.CustomAttributeBuilder" />
            <parameter name="attr">
              <type name="DalParamAttribute" id="T:MControl.Data.OleDb.DalParamAttribute" />
            </parameter>
          </method>
        </class>
        <class name="DBCmd" id="T:MControl.Data.OleDb.DBCmd" access="Public" namespace="MControl.Data.OleDb" displayName="DBCmd">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <base name="DBFactory" id="T:MControl.Data.DBFactory" displayName="MControl.Data.DBFactory" />
          <implements name="IDBCmd" id="T:MControl.Data.IDBCmd" />
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.OleDb.DBCmd.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DBCmd.#ctor(System.Data.OleDb.OleDbConnection)" access="Public" contract="Normal">
              <parameter name="cnn">
                <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.OleDb.DBCmd.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Connection" id="P:MControl.Data.OleDb.DBCmd.Connection" access="Public" contract="Final">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <set access="Public" />
            <implements name="Connection" id="P:MControl.Data.IDBCmd.Connection" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </property>
          <property name="ConnectionString" id="P:MControl.Data.OleDb.DBCmd.ConnectionString" access="Public" contract="Final">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
            <implements name="ConnectionString" id="P:MControl.Data.IDBCmd.ConnectionString" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </property>
          <property name="DataAdapter" id="P:MControl.Data.OleDb.DBCmd.DataAdapter" access="Public" contract="Final">
            <type name="IDbDataAdapter" id="T:System.Data.IDbDataAdapter" />
            <get access="Public" />
            <set access="Public" />
            <implements name="DataAdapter" id="P:MControl.Data.IDBCmd.DataAdapter" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </property>
          <property name="DataTableMapping" id="P:MControl.Data.OleDb.DBCmd.DataTableMapping" access="Public" contract="Final">
            <type name="DataTableMappingCollection" id="T:System.Data.Common.DataTableMappingCollection" />
            <get access="Public" />
            <implements name="DataTableMapping" id="P:MControl.Data.IDBCmd.DataTableMapping" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </property>
          <method name="CreateDataAdapter" id="M:MControl.Data.OleDb.DBCmd.CreateDataAdapter(System.String)" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="CreateDataAdapter" id="M:MControl.Data.IDBCmd.CreateDataAdapter(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="strSQL">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Dispose" id="M:MControl.Data.OleDb.DBCmd.Dispose" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
          </method>
          <method name="ExecuteCmd" id="M:MControl.Data.OleDb.DBCmd.ExecuteCmd(System.String)" access="Public" contract="Final">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <implements name="ExecuteCmd" id="M:MControl.Data.IDBCmd.ExecuteCmd(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteCmdScalar" id="M:MControl.Data.OleDb.DBCmd.ExecuteCmdScalar(System.String)" access="Public" contract="Final">
            <type name="Object" id="T:System.Object" />
            <implements name="ExecuteCmdScalar" id="M:MControl.Data.IDBCmd.ExecuteCmdScalar(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteOleDB" id="M:MControl.Data.OleDb.DBCmd.ExecuteOleDB(System.String,System.String,System.String)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="ConnectionString">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="tabeName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteOleDbCmd" id="M:MControl.Data.OleDb.DBCmd.ExecuteOleDbCmd(System.String,System.String)" access="Public" contract="Static">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="connectionString">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteOleDbCmdScalar" id="M:MControl.Data.OleDb.DBCmd.ExecuteOleDbCmdScalar(System.String,System.String)" access="Public" contract="Static">
            <type name="Object" id="T:System.Object" />
            <parameter name="connectionString">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteReader" id="M:MControl.Data.OleDb.DBCmd.ExecuteReader(System.String,System.Data.CommandBehavior)" access="Public" contract="Final">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <implements name="ExecuteReader" id="M:MControl.Data.IDBCmd.ExecuteReader(System.String,System.Data.CommandBehavior)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="behavior">
              <type name="CommandBehavior" id="T:System.Data.CommandBehavior" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="Execute_DataTable" id="Overload:MControl.Data.OleDb.DBCmd.Execute_DataTable">
            <method name="Execute_DataTable" id="M:MControl.Data.OleDb.DBCmd.Execute_DataTable(System.String,System.String)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <implements name="Execute_DataTable" id="M:MControl.Data.IDBCmd.Execute_DataTable(System.String,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="tabeName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Execute_DataTable" id="M:MControl.Data.OleDb.DBCmd.Execute_DataTable(System.String,System.String,System.Data.MissingSchemaAction)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <implements name="Execute_DataTable" id="M:MControl.Data.IDBCmd.Execute_DataTable(System.String,System.String,System.Data.MissingSchemaAction)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="tabeName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="missingSchema">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="FillDB" id="M:MControl.Data.OleDb.DBCmd.FillDB(System.Data.DataSet,System.Data.DataTable,System.String)" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="FillDB" id="M:MControl.Data.IDBCmd.FillDB(System.Data.DataSet,System.Data.DataTable,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="dataSet">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="tableSchema">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="prefix">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="FillSchema" id="Overload:MControl.Data.OleDb.DBCmd.FillSchema">
            <method name="FillSchema" id="M:MControl.Data.OleDb.DBCmd.FillSchema(System.Data.DataTable,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataTable,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="tableSchema">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="FillSchema" id="M:MControl.Data.OleDb.DBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable">
                <array rank="1" />
              </type>
              <implements name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="FillSchema" id="M:MControl.Data.OleDb.DBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable">
                <array rank="1" />
              </type>
              <implements name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
              <parameter name="srcTable">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="FillSchema" id="M:MControl.Data.OleDb.DBCmd.FillSchema(System.Data.DataSet,System.Data.DataTable,System.String)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataSet,System.Data.DataTable,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="tableSchema">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="prefix">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Finalize" id="M:MControl.Data.OleDb.DBCmd.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="GetAccessSchemaList" id="M:MControl.Data.OleDb.DBCmd.GetAccessSchemaList(System.String)" access="Public" contract="Static">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <parameter name="path">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetChanges" id="Overload:MControl.Data.OleDb.DBCmd.GetChanges" declaringType="T:MControl.Data.DBFactory">
            <method name="GetChanges" id="M:MControl.Data.DBFactory.GetChanges(System.Data.DataTable)" access="Public" contract="Virtual" declaringType="T:MControl.Data.DBFactory">
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
            <method name="GetChanges" id="M:MControl.Data.DBFactory.GetChanges(System.Data.DataSet)" access="Public" contract="Virtual" declaringType="T:MControl.Data.DBFactory">
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetCommand" id="M:MControl.Data.OleDb.DBCmd.GetCommand(System.String)" access="Public" contract="Final">
            <type name="IDbCommand" id="T:System.Data.IDbCommand" />
            <implements name="GetCommand" id="M:MControl.Data.IDBCmd.GetCommand(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="cmdText">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDB" id="M:MControl.Data.OleDb.DBCmd.GetDB" access="Public" contract="Final">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <implements name="GetDB" id="M:MControl.Data.IDBCmd.GetDB" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </method>
          <method name="GetOleSchemaList" id="M:MControl.Data.OleDb.DBCmd.GetOleSchemaList(System.String)" access="Public" contract="Static">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <parameter name="path">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetOleSchemaTable" id="M:MControl.Data.OleDb.DBCmd.GetOleSchemaTable(System.Data.OleDb.OleDbConnection)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="conn">
              <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
            </parameter>
          </method>
          <method name="GetOleSchemaView" id="M:MControl.Data.OleDb.DBCmd.GetOleSchemaView(System.Data.OleDb.OleDbConnection)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="conn">
              <type name="OleDbConnection" id="T:System.Data.OleDb.OleDbConnection" />
            </parameter>
          </method>
          <method name="GetProvider" id="M:MControl.Data.OleDb.DBCmd.GetProvider(System.String,System.String)" access="Public" contract="Static">
            <type name="String" id="T:System.String" />
            <parameter name="FilePath">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="FileType">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetSchemaCatalog" id="M:MControl.Data.OleDb.DBCmd.GetSchemaCatalog" access="Public" contract="Final">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <implements name="GetSchemaCatalog" id="M:MControl.Data.IDBCmd.GetSchemaCatalog" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </method>
          <method name="GetSchemaList" id="M:MControl.Data.OleDb.DBCmd.GetSchemaList" access="Public" contract="Final">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <implements name="GetSchemaList" id="M:MControl.Data.IDBCmd.GetSchemaList" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </method>
          <methodOverload name="GetSchemaTable" id="Overload:MControl.Data.OleDb.DBCmd.GetSchemaTable">
            <method name="GetSchemaTable" id="M:MControl.Data.OleDb.DBCmd.GetSchemaTable(System.String,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <implements name="GetSchemaTable" id="M:MControl.Data.IDBCmd.GetSchemaTable(System.String,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="GetSchemaTable" id="M:MControl.Data.OleDb.DBCmd.GetSchemaTable" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <implements name="GetSchemaTable" id="M:MControl.Data.IDBCmd.GetSchemaTable" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            </method>
          </methodOverload>
          <method name="GetSchemaView" id="M:MControl.Data.OleDb.DBCmd.GetSchemaView" access="Public" contract="Final">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <implements name="GetSchemaView" id="M:MControl.Data.IDBCmd.GetSchemaView" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </method>
          <method name="ReadOleDB" id="M:MControl.Data.OleDb.DBCmd.ReadOleDB(System.String,System.String)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="ConnectionString">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="table">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Read_DataTable" id="M:MControl.Data.OleDb.DBCmd.Read_DataTable(System.String)" access="Public" contract="Final">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <implements name="Read_DataTable" id="M:MControl.Data.IDBCmd.Read_DataTable(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="table">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="SetConnection" id="Overload:MControl.Data.OleDb.DBCmd.SetConnection">
            <method name="SetConnection" id="M:MControl.Data.OleDb.DBCmd.SetConnection(System.String)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="SetConnection" id="M:MControl.Data.IDBCmd.SetConnection(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="SetConnection" id="M:MControl.Data.OleDb.DBCmd.SetConnection(System.String,System.String)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="FilePath">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="FileType">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.OleDb.DBCmd.UpdateChanges">
            <method name="UpdateChanges" id="M:MControl.Data.OleDb.DBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String)" access="Public" contract="Override">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.OleDb.DBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.OleDb.DBCmd.UpdateChanges(System.Data.DataSet,System.String,System.String,System.String,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataSet,System.String,System.String,System.String,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.OleDb.DBCmd.UpdateChanges(System.Data.DataSet,System.String)" access="Public" contract="Final">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataSet,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.DBFactory.UpdateChanges(System.Data.DataTable,System.String)" access="Public" contract="Virtual" declaringType="T:MControl.Data.DBFactory">
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.DBFactory.UpdateChanges(System.Data.DataTable)" access="Public" contract="Virtual" declaringType="T:MControl.Data.DBFactory">
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
          </methodOverload>
        </class>
      </namespace>
      <namespace name="MControl.Data.Server" id="N:MControl.Data.Server">
        <class name="DalCommandServer" id="T:MControl.Data.Server.DalCommandServer" access="Public" namespace="MControl.Data.Server" displayName="DalCommandServer">
          <base name="DalCommand" id="T:MControl.Data.SqlClient.DalCommand" displayName="MControl.Data.SqlClient.DalCommand">
            <base name="DalDB" id="T:MControl.Data.SqlClient.DalDB" displayName="MControl.Data.SqlClient.DalDB">
              <base name="DalDB" id="T:MControl.Data.Common.DalDB" displayName="MControl.Data.Common.DalDB" />
            </base>
          </base>
          <implements name="IDalDB" id="T:MControl.Data.IDalDB" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <implements name="IDalCommand" id="T:MControl.Data.IDalCommand" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.Server.DalCommandServer.#ctor(System.String)" access="Public" contract="Normal">
            <parameter name="connectionId">
              <type name="String" id="T:System.String" />
            </parameter>
          </constructor>
          <field name="m_AsyncConnection" id="F:MControl.Data.Server.DalCommandServer.m_AsyncConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalDB">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
          </field>
          <field name="m_DataSet" id="F:MControl.Data.Server.DalCommandServer.m_DataSet" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.Server.DalCommandServer.m_autoCloseConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connection" id="F:MControl.Data.Server.DalCommandServer.m_connection" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalDB">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.Server.DalCommandServer.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.Server.DalCommandServer.m_disposed" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalCommand">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_transaction" id="F:MControl.Data.Server.DalCommandServer.m_transaction" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalDB">
            <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.Common.DalDB.AutoCloseConnection" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Connection" id="P:MControl.Data.SqlClient.DalDB.Connection" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.Common.DalDB.DBSchema" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Transaction" id="P:MControl.Data.SqlClient.DalDB.Transaction" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="CancelExecuting" id="M:MControl.Data.Common.DalDB.CancelExecuting" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalDB" />
          <method name="CreateDataAdapter" id="M:MControl.Data.Server.DalCommandServer.CreateDataAdapter(System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="selectCommand">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DAvg" id="M:MControl.Data.Common.DalDB.DAvg(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DCount" id="M:MControl.Data.Common.DalDB.DCount(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DExists" id="M:MControl.Data.Common.DalDB.DExists(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DHashtable" id="M:MControl.Data.Common.DalDB.DHashtable(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="KeyMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="ValueMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMax" id="M:MControl.Data.Common.DalDB.DMax(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMin" id="M:MControl.Data.Common.DalDB.DMin(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DRow" id="Overload:MControl.Data.Server.DalCommandServer.DRow" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="DRows" id="Overload:MControl.Data.Server.DalCommandServer.DRows" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="DSum" id="M:MControl.Data.Common.DalDB.DSum(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DView" id="Overload:MControl.Data.Server.DalCommandServer.DView" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dispose" id="Overload:MControl.Data.Server.DalCommandServer.Dispose" declaringType="T:MControl.Data.SqlClient.DalCommand">
            <method name="Dispose" id="M:MControl.Data.SqlClient.DalCommand.Dispose" access="Public" contract="Final" declaringType="T:MControl.Data.SqlClient.DalCommand" />
            <method name="Dispose" id="M:MControl.Data.SqlClient.DalCommand.Dispose(System.Boolean)" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalCommand">
              <parameter name="disposing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dlookup" id="Overload:MControl.Data.Server.DalCommandServer.Dlookup" declaringType="T:MControl.Data.Common.DalDB">
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Int32)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Double)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Decimal)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.DateTime)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Boolean)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object[],System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Execute" id="Overload:MControl.Data.Server.DalCommandServer.Execute" declaringType="T:MControl.Data.SqlClient.DalCommand">
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalCommand" />
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Boolean)" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalCommand">
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Boolean,System.Object[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalCommand">
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Object[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalCommand">
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Data.SqlClient.SqlTransaction,System.Boolean,System.Object[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalCommand">
              <parameter name="transaction">
                <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Data.SqlClient.SqlTransaction,System.Reflection.MethodInfo,System.Boolean,System.Object[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalCommand">
              <parameter name="transaction">
                <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
              </parameter>
              <parameter name="method">
                <type name="MethodInfo" id="T:System.Reflection.MethodInfo" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteAsyncCommand" id="M:MControl.Data.Server.DalCommandServer.ExecuteAsyncCommand(System.String,System.Int32,System.Int32,System.Int32)" access="Public" contract="Normal" hiding="true">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="commandTimeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="ExecuteAsyncReader" id="M:MControl.Data.Server.DalCommandServer.ExecuteAsyncReader(System.String,System.Int32,System.Int32,System.Int32)" access="Public" contract="Normal" hiding="true">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="commandTimeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="ExecuteBulkCopy" id="Overload:MControl.Data.Server.DalCommandServer.ExecuteBulkCopy">
            <method name="ExecuteBulkCopy" id="M:MControl.Data.Server.DalCommandServer.ExecuteBulkCopy(System.String,System.String,MControl.Data.MAPPING[])" access="Public" contract="Normal" hiding="true">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.Server.DalCommandServer.ExecuteBulkCopy(System.String,System.String,MControl.Data.MAPPING[],System.Int32,System.Int32)" access="Public" contract="Normal" hiding="true">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="batchSize">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="timeout">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.Server.DalCommandServer.ExecuteBulkCopy(System.Data.DataTable,System.String,MControl.Data.MAPPING[])" access="Public" contract="Normal" hiding="true">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.Server.DalCommandServer.ExecuteBulkCopy(System.Data.DataTable,System.Data.DataRowState,System.String,MControl.Data.MAPPING[])" access="Public" contract="Normal" hiding="true">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="state">
                <type name="DataRowState" id="T:System.Data.DataRowState" valueType="true" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.Server.DalCommandServer.ExecuteBulkCopy(System.Data.DataRow[],System.String,MControl.Data.MAPPING[])" access="Public" contract="Normal" hiding="true">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="rows">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteCommand" id="Overload:MControl.Data.Server.DalCommandServer.ExecuteCommand">
            <method name="ExecuteCommand" id="M:MControl.Data.Server.DalCommandServer.ExecuteCommand(System.Data.SqlClient.SqlCommand,System.Type)" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="cmd">
                <type name="SqlCommand" id="T:System.Data.SqlClient.SqlCommand" />
              </parameter>
              <parameter name="retType">
                <type name="Type" id="T:System.Type" />
              </parameter>
            </method>
            <method name="ExecuteCommand" id="M:MControl.Data.Server.DalCommandServer.ExecuteCommand(MControl.Data.Server.WsCommand)" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="wscmd">
                <type name="WsCommand" id="T:MControl.Data.Server.WsCommand" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDalSchema" id="Overload:MControl.Data.Server.DalCommandServer.ExecuteDalSchema">
            <method name="ExecuteDalSchema" id="M:MControl.Data.Server.DalCommandServer.ExecuteDalSchema(System.String)" access="Public" contract="Normal" hiding="true">
              <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDalSchema" id="M:MControl.Data.Server.DalCommandServer.ExecuteDalSchema(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Public" contract="Normal" hiding="true">
              <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteDataRow" id="M:MControl.Data.Common.DalDB.ExecuteDataRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteDataRowCollection" id="M:MControl.Data.Common.DalDB.ExecuteDataRowCollection(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="ExecuteDataSet" id="Overload:MControl.Data.Server.DalCommandServer.ExecuteDataSet">
            <method name="ExecuteDataSet" id="M:MControl.Data.Server.DalCommandServer.ExecuteDataSet(System.String)" access="Public" contract="Normal" hiding="true">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataSet" id="M:MControl.Data.Server.DalCommandServer.ExecuteDataSet(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Public" contract="Normal" hiding="true">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDataTable" id="Overload:MControl.Data.Server.DalCommandServer.ExecuteDataTable">
            <method name="ExecuteDataTable" id="M:MControl.Data.Server.DalCommandServer.ExecuteDataTable(System.String)" access="Public" contract="Normal" hiding="true">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.Server.DalCommandServer.ExecuteDataTable(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Public" contract="Normal" hiding="true">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.Server.DalCommandServer.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[])" access="Public" contract="Normal" hiding="true">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.Server.DalCommandServer.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[],System.Int32)" access="Public" contract="Normal" hiding="true">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteNonQuery" id="Overload:MControl.Data.Server.DalCommandServer.ExecuteNonQuery">
            <method name="ExecuteNonQuery" id="M:MControl.Data.Server.DalCommandServer.ExecuteNonQuery(System.String,System.Int32)" access="Public" contract="Normal" hiding="true">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteNonQuery" id="M:MControl.Data.SqlClient.DalDB.ExecuteNonQuery(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteScalar" id="Overload:MControl.Data.Server.DalCommandServer.ExecuteScalar">
            <method name="ExecuteScalar" id="M:MControl.Data.Server.DalCommandServer.ExecuteScalar(System.String,System.Int32)" access="Public" contract="Normal" hiding="true">
              <type name="Object" id="T:System.Object" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteScalar" id="M:MControl.Data.SqlClient.DalDB.ExecuteScalar(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteSingleRow" id="M:MControl.Data.Common.DalDB.ExecuteSingleRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Finalize" id="M:MControl.Data.SqlClient.DalCommand.Finalize" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalCommand" />
          <method name="GetCmd" id="M:MControl.Data.SqlClient.DalDB.GetCmd(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetReader" id="M:MControl.Data.Common.DalDB.GetReader(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetSqlString" id="Overload:MControl.Data.Server.DalCommandServer.GetSqlString" declaringType="T:MControl.Data.Common.DalDB">
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Data.DataRow[],System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <method name="InnerDispose" id="M:MControl.Data.SqlClient.DalCommand.InnerDispose" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalCommand" />
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.Server.DalCommandServer.UpdateChanges">
            <method name="UpdateChanges" id="M:MControl.Data.Server.DalCommandServer.UpdateChanges(MControl.Data.Server.WsAdapter)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="adapter">
                <type name="WsAdapter" id="T:MControl.Data.Server.WsAdapter" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.Server.DalCommandServer.UpdateChanges(System.Data.DataTable,System.String,System.String)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dtChanges">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="srcTable">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.Server.DalCommandServer.UpdateChanges(System.Data.DataSet,System.String,System.String)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dsChanges">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="srcTable">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.Server.DalCommandServer.UpdateChanges(System.Data.DataSet,System.String)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="dsChanges">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="DalWs" id="T:MControl.Data.Server.DalWs" access="Public" namespace="MControl.Data.Server" displayName="DalWs">
          <constructor name=".ctor" id="M:MControl.Data.Server.DalWs.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Server.DalWs" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="WsResult" id="F:MControl.Data.Server.DalWs.WsResult" access="Public" contract="Static" literal="true" value="WsResult">
            <type name="String" id="T:System.String" />
          </field>
          <method name="CreateWsAdapter" id="M:MControl.Data.Server.DalWs.CreateWsAdapter(System.String,System.Data.DataSet,System.String,System.String,System.Boolean)" access="Public" contract="Static">
            <type name="String" id="T:System.String" />
            <parameter name="connectionId">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DsChanges">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="srcTable">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="selectCommand">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="encrypted">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="CreateWsXml" id="Overload:MControl.Data.Server.DalWs.CreateWsXml" contract="Static">
            <method name="CreateWsXml" id="M:MControl.Data.Server.DalWs.CreateWsXml(System.String,MControl.Data.DBCommandType,System.String,System.String,System.Boolean,System.String)" access="Public" contract="Static">
              <type name="String" id="T:System.String" />
              <parameter name="connectionId">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
              </parameter>
              <parameter name="commandText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="encrypted">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="returnType">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="CreateWsXml" id="M:MControl.Data.Server.DalWs.CreateWsXml(MControl.Data.Server.WsCommand,System.Boolean)" access="Public" contract="Static">
              <type name="String" id="T:System.String" />
              <parameter name="command">
                <type name="WsCommand" id="T:MControl.Data.Server.WsCommand" />
              </parameter>
              <parameter name="encrypted">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="CreateWsXml" id="M:MControl.Data.Server.DalWs.CreateWsXml(System.String,MControl.Data.DBCommandType,System.String,System.Object,System.Boolean,System.String,System.Data.MissingSchemaAction,System.String,System.Collections.Generic.List{MControl.Data.Server.WsParameter})" access="Public" contract="Static">
              <type name="String" id="T:System.String" />
              <parameter name="connectionId">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
              </parameter>
              <parameter name="commandText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
              <parameter name="encrypted">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="returnType">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="schemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="values">
                <type name="List`1" id="T:System.Collections.Generic.List`1">
                  <typeparam name="WsParameter" id="T:MControl.Data.Server.WsParameter" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <method name="GetResult" id="M:MControl.Data.Server.DalWs.GetResult(System.String,System.String)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="status">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="result">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetResultSet" id="M:MControl.Data.Server.DalWs.GetResultSet(System.String,System.String)" access="Public" contract="Static">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <parameter name="status">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="result">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="WsAdapter" id="T:MControl.Data.Server.WsAdapter" access="Public" namespace="MControl.Data.Server" displayName="WsAdapter" sealed="true">
          <constructor name=".ctor" id="M:MControl.Data.Server.WsAdapter.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Server.WsAdapter" /> class.</autoText></summary></documentation>
          </constructor>
          <property name="ConnectionId" id="P:MControl.Data.Server.WsAdapter.ConnectionId" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DsChanges" id="P:MControl.Data.Server.WsAdapter.DsChanges" access="Public" contract="Normal">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Encrypted" id="P:MControl.Data.Server.WsAdapter.Encrypted" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="SelectCmd" id="P:MControl.Data.Server.WsAdapter.SelectCmd" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="SrcTable" id="P:MControl.Data.Server.WsAdapter.SrcTable" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="ParseWsXml" id="M:MControl.Data.Server.WsAdapter.ParseWsXml(System.String,System.Boolean)" access="Public" contract="Static">
            <type name="WsAdapter" id="T:MControl.Data.Server.WsAdapter" />
            <parameter name="xml">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="encrypted">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
        </class>
        <class name="WsCommand" id="T:MControl.Data.Server.WsCommand" access="Public" namespace="MControl.Data.Server" displayName="WsCommand" sealed="true">
          <constructor name=".ctor" id="M:MControl.Data.Server.WsCommand.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Server.WsCommand" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="DefaultTableName" id="F:MControl.Data.Server.WsCommand.DefaultTableName" access="Public" contract="Static" literal="true" value="DalTable">
            <type name="String" id="T:System.String" />
          </field>
          <property name="CommandId" id="P:MControl.Data.Server.WsCommand.CommandId" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="CommandText" id="P:MControl.Data.Server.WsCommand.CommandText" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="CommandType" id="P:MControl.Data.Server.WsCommand.CommandType" access="Public" contract="Normal">
            <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ConnectionId" id="P:MControl.Data.Server.WsCommand.ConnectionId" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DefaultValue" id="P:MControl.Data.Server.WsCommand.DefaultValue" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Encrypted" id="P:MControl.Data.Server.WsCommand.Encrypted" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="MissingSchemaAction" id="P:MControl.Data.Server.WsCommand.MissingSchemaAction" access="Public" contract="Normal">
            <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Parameters" id="P:MControl.Data.Server.WsCommand.Parameters" access="Public" contract="Normal">
            <type name="List`1" id="T:System.Collections.Generic.List`1">
              <typeparam name="WsParameter" id="T:MControl.Data.Server.WsParameter" />
            </type>
            <get access="Public" />
          </property>
          <property name="ReturnType" id="P:MControl.Data.Server.WsCommand.ReturnType" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="TableName" id="P:MControl.Data.Server.WsCommand.TableName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="CreateCommand" id="M:MControl.Data.Server.WsCommand.CreateCommand" access="Public" contract="Normal">
            <type name="SqlCommand" id="T:System.Data.SqlClient.SqlCommand" />
          </method>
          <methodOverload name="GetCommand" id="Overload:MControl.Data.Server.WsCommand.GetCommand" contract="Static">
            <method name="GetCommand" id="M:MControl.Data.Server.WsCommand.GetCommand(MControl.Data.Server.WsCommand)" access="Public" contract="Static">
              <type name="SqlCommand" id="T:System.Data.SqlClient.SqlCommand" />
              <parameter name="wcmd">
                <type name="WsCommand" id="T:MControl.Data.Server.WsCommand" />
              </parameter>
            </method>
            <method name="GetCommand" id="M:MControl.Data.Server.WsCommand.GetCommand(System.String,System.Boolean)" access="Public" contract="Static">
              <type name="SqlCommand" id="T:System.Data.SqlClient.SqlCommand" />
              <parameter name="xml">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="encrypted">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ParseWsXml" id="M:MControl.Data.Server.WsCommand.ParseWsXml(System.String,System.Boolean)" access="Public" contract="Static">
            <type name="WsCommand" id="T:MControl.Data.Server.WsCommand" />
            <parameter name="xml">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="encrypted">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
        </class>
        <class name="WsParameter" id="T:MControl.Data.Server.WsParameter" access="Public" namespace="MControl.Data.Server" displayName="WsParameter" sealed="true">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.Server.WsParameter.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Server.WsParameter" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.Server.WsParameter.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Server.WsParameter" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Server.WsParameter.#ctor(System.String,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Server.WsParameter.#ctor(System.String,System.Data.SqlDbType,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SqlDbType" id="T:System.Data.SqlDbType" valueType="true" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Server.WsParameter.#ctor(System.String,System.Data.SqlDbType,System.Data.ParameterDirection,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SqlDbType" id="T:System.Data.SqlDbType" valueType="true" />
              </parameter>
              <parameter name="direction">
                <type name="ParameterDirection" id="T:System.Data.ParameterDirection" valueType="true" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Server.WsParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SqlDbType" id="T:System.Data.SqlDbType" valueType="true" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Server.WsParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Object)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SqlDbType" id="T:System.Data.SqlDbType" valueType="true" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="direction">
                <type name="ParameterDirection" id="T:System.Data.ParameterDirection" valueType="true" />
              </parameter>
              <parameter name="value">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Direction" id="P:MControl.Data.Server.WsParameter.Direction" access="Public" contract="Normal">
            <type name="ParameterDirection" id="T:System.Data.ParameterDirection" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Name" id="P:MControl.Data.Server.WsParameter.Name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ParamType" id="P:MControl.Data.Server.WsParameter.ParamType" access="Public" contract="Normal">
            <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Size" id="P:MControl.Data.Server.WsParameter.Size" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Type" id="P:MControl.Data.Server.WsParameter.Type" access="Public" contract="Normal">
            <type name="SqlDbType" id="T:System.Data.SqlDbType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Value" id="P:MControl.Data.Server.WsParameter.Value" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
          </property>
        </class>
      </namespace>
      <namespace name="MControl.Data.SqlClient" id="N:MControl.Data.SqlClient">
        <class name="CmdTran" id="T:MControl.Data.SqlClient.CmdTran" access="Public" namespace="MControl.Data.SqlClient" displayName="CmdTran">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.SqlClient.CmdTran.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.CmdTran.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" access="Public" contract="Normal">
              <parameter name="connection">
                <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
              </parameter>
              <parameter name="transaction">
                <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.CmdTran.#ctor(System.Data.SqlClient.SqlConnection)" access="Public" contract="Normal">
              <parameter name="connection">
                <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
              </parameter>
            </constructor>
          </constructorOverload>
          <method name="Begin" id="M:MControl.Data.SqlClient.CmdTran.Begin(System.Data.IsolationLevel)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="level">
              <type name="IsolationLevel" id="T:System.Data.IsolationLevel" valueType="true" />
            </parameter>
          </method>
          <method name="Commit" id="M:MControl.Data.SqlClient.CmdTran.Commit" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <methodOverload name="Execute" id="Overload:MControl.Data.SqlClient.CmdTran.Execute">
            <method name="Execute" id="M:MControl.Data.SqlClient.CmdTran.Execute(System.String,MControl.Data.DalReturnType)" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="cmdText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="returnType">
                <type name="DalReturnType" id="T:MControl.Data.DalReturnType" valueType="true" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.CmdTran.Execute(MControl.Data.DBCommandType,System.String,MControl.Data.DalReturnType)" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="cmdType">
                <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
              </parameter>
              <parameter name="cmdText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="returnType">
                <type name="DalReturnType" id="T:MControl.Data.DalReturnType" valueType="true" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.CmdTran.Execute(MControl.Data.DBCommandType,System.String,MControl.Data.DalReturnType,System.Object[])" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="cmdType">
                <type name="DBCommandType" id="T:MControl.Data.DBCommandType" valueType="true" />
              </parameter>
              <parameter name="cmdText">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="returnType">
                <type name="DalReturnType" id="T:MControl.Data.DalReturnType" valueType="true" />
              </parameter>
              <parameter name="values">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <method name="Rollback" id="M:MControl.Data.SqlClient.CmdTran.Rollback" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
        </class>
        <class name="CommandBuilder" id="T:MControl.Data.SqlClient.CommandBuilder" access="Public" namespace="MControl.Data.SqlClient" displayName="CommandBuilder">
          <constructor name=".ctor" id="M:MControl.Data.SqlClient.CommandBuilder.#ctor(System.Data.DataTable)" access="Public" contract="Normal">
            <parameter name="dataTable">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
          </constructor>
          <property name="DataTable" id="P:MControl.Data.SqlClient.CommandBuilder.DataTable" access="Public" contract="Normal">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="IdentityColumns" id="P:MControl.Data.SqlClient.CommandBuilder.IdentityColumns" access="Public" contract="Normal">
            <type name="DataColumn" id="T:System.Data.DataColumn">
              <array rank="1" />
            </type>
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="NormalColumns" id="P:MControl.Data.SqlClient.CommandBuilder.NormalColumns" access="Public" contract="Normal">
            <type name="DataColumn" id="T:System.Data.DataColumn">
              <array rank="1" />
            </type>
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="PrimaryKeyColumns" id="P:MControl.Data.SqlClient.CommandBuilder.PrimaryKeyColumns" access="Public" contract="Normal">
            <type name="DataColumn" id="T:System.Data.DataColumn">
              <array rank="1" />
            </type>
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="CreateSqlColumnName" id="M:MControl.Data.SqlClient.CommandBuilder.CreateSqlColumnName(System.Data.DataColumn)" access="Family" contract="Virtual">
            <type name="String" id="T:System.String" />
            <parameter name="column">
              <type name="DataColumn" id="T:System.Data.DataColumn" />
            </parameter>
          </method>
          <method name="CreateSqlInsertColumnName" id="M:MControl.Data.SqlClient.CommandBuilder.CreateSqlInsertColumnName" access="Family" contract="Virtual">
            <type name="String" id="T:System.String" />
          </method>
          <method name="CreateSqlInsertParameters" id="M:MControl.Data.SqlClient.CommandBuilder.CreateSqlInsertParameters(System.Data.SqlClient.SqlParameterCollection)" access="Family" contract="Virtual">
            <type name="String" id="T:System.String" />
            <parameter name="parameters">
              <type name="SqlParameterCollection" id="T:System.Data.SqlClient.SqlParameterCollection" />
            </parameter>
          </method>
          <method name="CreateSqlPKWhereColumn" id="M:MControl.Data.SqlClient.CommandBuilder.CreateSqlPKWhereColumn" access="Family" contract="Virtual">
            <type name="String" id="T:System.String" />
          </method>
          <method name="CreateSqlTableName" id="M:MControl.Data.SqlClient.CommandBuilder.CreateSqlTableName" access="Family" contract="Virtual">
            <type name="String" id="T:System.String" />
          </method>
          <method name="CreateSqlUpdateColumn" id="M:MControl.Data.SqlClient.CommandBuilder.CreateSqlUpdateColumn" access="Family" contract="Virtual">
            <type name="String" id="T:System.String" />
          </method>
          <method name="GetDeleteCommand" id="M:MControl.Data.SqlClient.CommandBuilder.GetDeleteCommand" access="Public" contract="Virtual">
            <type name="SqlCommand" id="T:System.Data.SqlClient.SqlCommand" />
          </method>
          <method name="GetInsertCommand" id="M:MControl.Data.SqlClient.CommandBuilder.GetInsertCommand" access="Public" contract="Virtual">
            <type name="SqlCommand" id="T:System.Data.SqlClient.SqlCommand" />
          </method>
          <method name="GetUpdateCommand" id="M:MControl.Data.SqlClient.CommandBuilder.GetUpdateCommand" access="Public" contract="Virtual">
            <type name="SqlCommand" id="T:System.Data.SqlClient.SqlCommand" />
          </method>
          <method name="PopulateAllParameters" id="M:MControl.Data.SqlClient.CommandBuilder.PopulateAllParameters(System.Data.SqlClient.SqlParameterCollection)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="parameters">
              <type name="SqlParameterCollection" id="T:System.Data.SqlClient.SqlParameterCollection" />
            </parameter>
          </method>
          <method name="SqlDbTypeFromDataType" id="M:MControl.Data.SqlClient.CommandBuilder.SqlDbTypeFromDataType(System.Type)" access="Family" contract="Virtual">
            <type name="SqlDbType" id="T:System.Data.SqlDbType" valueType="true" />
            <parameter name="type">
              <type name="Type" id="T:System.Type" />
            </parameter>
          </method>
        </class>
        <class name="DalAsync" id="T:MControl.Data.SqlClient.DalAsync" access="Public" namespace="MControl.Data.SqlClient" displayName="DalAsync">
          <base name="DalAsync" id="T:MControl.Data.Common.DalAsync" displayName="MControl.Data.Common.DalAsync" />
          <derivedBy id="T:MControl.Data.SqlClient.DalAsyncServer" displayName="MControl.Data.SqlClient.DalAsyncServer" />
          <implements name="IDalAsync" id="T:MControl.Data.IDalAsync" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.SqlClient.DalAsync.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalAsync.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connection">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalAsync.#ctor(MControl.Data.IDalBase)" access="Public" contract="Normal">
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="m_AsyncConnection" id="F:MControl.Data.SqlClient.DalAsync.m_AsyncConnection" access="Family" contract="Normal">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.SqlClient.DalAsync.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.SqlClient.DalAsync.m_disposed" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <property name="AsyncDisplayStatus" id="P:MControl.Data.Common.DalAsync.AsyncDisplayStatus" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncIsExecuting" id="P:MControl.Data.Common.DalAsync.AsyncIsExecuting" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataRows" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataRows" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataTable" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataTable" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_SingleRow" id="P:MControl.Data.Common.DalAsync.AsyncResult_SingleRow" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncStatus" id="P:MControl.Data.Common.DalAsync.AsyncStatus" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <method name="AsyncExecute" id="M:MControl.Data.SqlClient.DalAsync.AsyncExecute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32,System.Int32)" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AsyncExecute" id="M:MControl.Data.IDalAsync.AsyncExecute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32,System.Int32)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteBegin" id="M:MControl.Data.SqlClient.DalAsync.AsyncExecuteBegin(System.AsyncCallback,System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="AsyncExecuteBegin" id="M:MControl.Data.IDalAsync.AsyncExecuteBegin(System.AsyncCallback,System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="callback">
              <type name="AsyncCallback" id="T:System.AsyncCallback" />
            </parameter>
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteEnd" id="M:MControl.Data.SqlClient.DalAsync.AsyncExecuteEnd(System.IAsyncResult)" access="Public" contract="Override">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <implements name="AsyncExecuteEnd" id="M:MControl.Data.IDalAsync.AsyncExecuteEnd(System.IAsyncResult)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="result">
              <type name="IAsyncResult" id="T:System.IAsyncResult" />
            </parameter>
          </method>
          <method name="AsyncFillDataSource" id="M:MControl.Data.Common.DalAsync.AsyncFillDataSource(System.Data.IDataReader)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
          </method>
          <methodOverload name="Dispose" id="Overload:MControl.Data.SqlClient.DalAsync.Dispose" declaringType="T:MControl.Data.Common.DalAsync">
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync" />
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose(System.Boolean)" access="Family" contract="Virtual" declaringType="T:MControl.Data.Common.DalAsync">
              <parameter name="disposing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Execute" id="M:MControl.Data.SqlClient.DalAsync.Execute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Execute" id="M:MControl.Data.IDalAsync.Execute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="FillDataSourceSchema" id="M:MControl.Data.Common.DalAsync.FillDataSourceSchema(System.Data.IDataReader,System.String)" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Finalize" id="M:MControl.Data.Common.DalAsync.Finalize" access="Family" contract="Override" declaringType="T:MControl.Data.Common.DalAsync" />
          <method name="GetParameters" id="M:MControl.Data.Common.DalAsync.GetParameters(System.String[],System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="names">
              <type name="String" id="T:System.String">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="values">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="InnerDispose" id="M:MControl.Data.SqlClient.DalAsync.InnerDispose" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="OnAsyncCompleted" id="M:MControl.Data.SqlClient.DalAsync.OnAsyncCompleted(System.EventArgs)" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnAsyncStatusChanged" id="M:MControl.Data.SqlClient.DalAsync.OnAsyncStatusChanged(System.EventArgs)" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="SetAsyncStatus" id="M:MControl.Data.Common.DalAsync.SetAsyncStatus(System.String,MControl.Data.StatusPriority)" access="Public" contract="Virtual" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="Text">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="priority">
              <type name="StatusPriority" id="T:MControl.Data.StatusPriority" valueType="true" />
            </parameter>
          </method>
          <event name="AsyncCompleted" id="E:MControl.Data.SqlClient.DalAsync.AsyncCompleted" access="Public" contract="Final" multicast="true" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncCompleted" id="E:MControl.Data.IDalAsync.AsyncCompleted" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
          <event name="AsyncStatusChanged" id="E:MControl.Data.SqlClient.DalAsync.AsyncStatusChanged" access="Public" contract="Final" multicast="true" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncStatusChanged" id="E:MControl.Data.IDalAsync.AsyncStatusChanged" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
        </class>
        <class name="DalAsyncServer" id="T:MControl.Data.SqlClient.DalAsyncServer" access="Public" namespace="MControl.Data.SqlClient" displayName="DalAsyncServer">
          <base name="DalAsync" id="T:MControl.Data.SqlClient.DalAsync" displayName="MControl.Data.SqlClient.DalAsync">
            <base name="DalAsync" id="T:MControl.Data.Common.DalAsync" displayName="MControl.Data.Common.DalAsync" />
          </base>
          <implements name="IDalAsync" id="T:MControl.Data.IDalAsync" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalAsyncServer.#ctor(System.String)" access="Public" contract="Normal">
            <parameter name="connectionID">
              <type name="String" id="T:System.String" />
            </parameter>
          </constructor>
          <field name="m_AsyncConnection" id="F:MControl.Data.SqlClient.DalAsyncServer.m_AsyncConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalAsync">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.SqlClient.DalAsyncServer.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.SqlClient.DalAsyncServer.m_disposed" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <property name="AsyncDisplayStatus" id="P:MControl.Data.Common.DalAsync.AsyncDisplayStatus" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncIsExecuting" id="P:MControl.Data.Common.DalAsync.AsyncIsExecuting" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataRows" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataRows" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_DataTable" id="P:MControl.Data.Common.DalAsync.AsyncResult_DataTable" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncResult_SingleRow" id="P:MControl.Data.Common.DalAsync.AsyncResult_SingleRow" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <property name="AsyncStatus" id="P:MControl.Data.Common.DalAsync.AsyncStatus" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <get access="Public" />
          </property>
          <method name="AsyncExecute" id="M:MControl.Data.SqlClient.DalAsync.AsyncExecute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32,System.Int32)" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalAsync">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteBegin" id="M:MControl.Data.SqlClient.DalAsync.AsyncExecuteBegin(System.AsyncCallback,System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalAsync">
            <parameter name="callback">
              <type name="AsyncCallback" id="T:System.AsyncCallback" />
            </parameter>
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="AsyncExecuteEnd" id="M:MControl.Data.SqlClient.DalAsync.AsyncExecuteEnd(System.IAsyncResult)" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalAsync">
            <parameter name="result">
              <type name="IAsyncResult" id="T:System.IAsyncResult" />
            </parameter>
          </method>
          <method name="AsyncFillDataSource" id="M:MControl.Data.Common.DalAsync.AsyncFillDataSource(System.Data.IDataReader)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
          </method>
          <methodOverload name="Dispose" id="Overload:MControl.Data.SqlClient.DalAsyncServer.Dispose" declaringType="T:MControl.Data.Common.DalAsync">
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync" />
            <method name="Dispose" id="M:MControl.Data.Common.DalAsync.Dispose(System.Boolean)" access="Family" contract="Virtual" declaringType="T:MControl.Data.Common.DalAsync">
              <parameter name="disposing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Execute" id="M:MControl.Data.SqlClient.DalAsync.Execute(System.String,System.Data.IDataParameter[],System.Int32,System.Int32)" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalAsync">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="parameters">
              <type name="IDataParameter" id="T:System.Data.IDataParameter">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="timeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="FillDataSourceSchema" id="M:MControl.Data.Common.DalAsync.FillDataSourceSchema(System.Data.IDataReader,System.String)" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="reader">
              <type name="IDataReader" id="T:System.Data.IDataReader" />
            </parameter>
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Finalize" id="M:MControl.Data.Common.DalAsync.Finalize" access="Family" contract="Override" declaringType="T:MControl.Data.Common.DalAsync" />
          <method name="GetParameters" id="M:MControl.Data.Common.DalAsync.GetParameters(System.String[],System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="names">
              <type name="String" id="T:System.String">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="values">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
          </method>
          <method name="InnerDispose" id="M:MControl.Data.SqlClient.DalAsync.InnerDispose" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalAsync" />
          <method name="OnAsyncCompleted" id="M:MControl.Data.SqlClient.DalAsync.OnAsyncCompleted(System.EventArgs)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalAsync">
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnAsyncStatusChanged" id="M:MControl.Data.SqlClient.DalAsync.OnAsyncStatusChanged(System.EventArgs)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalAsync">
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="SetAsyncStatus" id="M:MControl.Data.Common.DalAsync.SetAsyncStatus(System.String,MControl.Data.StatusPriority)" access="Public" contract="Virtual" declaringType="T:MControl.Data.Common.DalAsync">
            <parameter name="Text">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="priority">
              <type name="StatusPriority" id="T:MControl.Data.StatusPriority" valueType="true" />
            </parameter>
          </method>
          <event name="AsyncCompleted" id="E:MControl.Data.SqlClient.DalAsyncServer.AsyncCompleted" access="Public" contract="Final" multicast="true" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncCompleted" id="E:MControl.Data.IDalAsync.AsyncCompleted" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
          <event name="AsyncStatusChanged" id="E:MControl.Data.SqlClient.DalAsyncServer.AsyncStatusChanged" access="Public" contract="Final" multicast="true" declaringType="T:MControl.Data.Common.DalAsync">
            <type name="EventHandler" id="T:System.EventHandler" />
            <implements name="AsyncStatusChanged" id="E:MControl.Data.IDalAsync.AsyncStatusChanged" interface="IDalAsync" interfaceId="T:MControl.Data.IDalAsync" declaringType="MControl.Data.IDalAsync" />
          </event>
        </class>
        <class name="DalBase" id="T:MControl.Data.SqlClient.DalBase" access="Public" namespace="MControl.Data.SqlClient" displayName="DalBase" abstract="true">
          <implements name="IDalBase" id="T:MControl.Data.IDalBase" />
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalBase.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.SqlClient.DalBase" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="m_DataSet" id="F:MControl.Data.SqlClient.DalBase.m_DataSet" access="Family" contract="Normal">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_ObjectTypes" id="F:MControl.Data.SqlClient.DalBase.m_ObjectTypes" access="Family" contract="Normal">
            <type name="Hashtable" id="T:System.Collections.Hashtable" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.SqlClient.DalBase.m_autoCloseConnection" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connection" id="F:MControl.Data.SqlClient.DalBase.m_connection" access="Family" contract="Normal">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.SqlClient.DalBase.m_disposed" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_ownsConnection" id="F:MControl.Data.SqlClient.DalBase.m_ownsConnection" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_transaction" id="F:MControl.Data.SqlClient.DalBase.m_transaction" access="Family" contract="Normal">
            <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.SqlClient.DalBase.AutoCloseConnection" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="AutoCloseConnection" id="P:MControl.Data.IDalBase.AutoCloseConnection" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Connection" id="P:MControl.Data.SqlClient.DalBase.Connection" access="Public" contract="Normal">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
            <get access="Public" />
          </property>
          <property name="DBProvider" id="P:MControl.Data.SqlClient.DalBase.DBProvider" access="Public" contract="Final">
            <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
            <get access="Public" />
            <implements name="DBProvider" id="P:MControl.Data.IDalBase.DBProvider" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.SqlClient.DalBase.DBSchema" access="Public" contract="Final">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
            <get access="Public" />
            <implements name="DBSchema" id="P:MControl.Data.IDalBase.DBSchema" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="IConnection" id="P:MControl.Data.SqlClient.DalBase.IConnection" access="Public" contract="Final">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <implements name="IConnection" id="P:MControl.Data.IDalBase.IConnection" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="ITransaction" id="P:MControl.Data.SqlClient.DalBase.ITransaction" access="Public" contract="Final">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <get access="Public" />
            <implements name="ITransaction" id="P:MControl.Data.IDalBase.ITransaction" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.SqlClient.DalBase.Initilaized" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Initilaized" id="P:MControl.Data.IDalBase.Initilaized" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="OwnsConnection" id="P:MControl.Data.SqlClient.DalBase.OwnsConnection" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="OwnsConnection" id="P:MControl.Data.IDalBase.OwnsConnection" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Permit" id="P:MControl.Data.SqlClient.DalBase.Permit" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="Permit" id="P:MControl.Data.IDalBase.Permit" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </property>
          <property name="Transaction" id="P:MControl.Data.SqlClient.DalBase.Transaction" access="Public" contract="Normal">
            <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
            <get access="Public" />
          </property>
          <methodOverload name="BeginTransaction" id="Overload:MControl.Data.SqlClient.DalBase.BeginTransaction">
            <method name="BeginTransaction" id="M:MControl.Data.SqlClient.DalBase.BeginTransaction" access="Public" contract="Normal">
              <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
            </method>
            <method name="BeginTransaction" id="M:MControl.Data.SqlClient.DalBase.BeginTransaction(System.Data.IsolationLevel)" access="Public" contract="Normal">
              <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
              <parameter name="iso">
                <type name="IsolationLevel" id="T:System.Data.IsolationLevel" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="CommitTransaction" id="M:MControl.Data.SqlClient.DalBase.CommitTransaction" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="CommitTransaction" id="M:MControl.Data.IDalBase.CommitTransaction" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </method>
          <methodOverload name="Dispose" id="Overload:MControl.Data.SqlClient.DalBase.Dispose">
            <method name="Dispose" id="M:MControl.Data.SqlClient.DalBase.Dispose" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
            </method>
            <method name="Dispose" id="M:MControl.Data.SqlClient.DalBase.Dispose(System.Boolean)" access="Family" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="calledbyuser">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Finalize" id="M:MControl.Data.SqlClient.DalBase.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="GetDalDB" id="M:MControl.Data.SqlClient.DalBase.GetDalDB" access="Family" contract="Normal">
            <type name="IDalDB" id="T:MControl.Data.IDalDB" />
          </method>
          <method name="IBeginTransaction" id="M:MControl.Data.SqlClient.DalBase.IBeginTransaction(System.Data.IsolationLevel)" access="Public" contract="Final">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <implements name="IBeginTransaction" id="M:MControl.Data.IDalBase.IBeginTransaction(System.Data.IsolationLevel)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
            <parameter name="iso">
              <type name="IsolationLevel" id="T:System.Data.IsolationLevel" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="Init" id="Overload:MControl.Data.SqlClient.DalBase.Init">
            <method name="Init" id="M:MControl.Data.SqlClient.DalBase.Init(System.String,System.Boolean,System.String)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean,System.String)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="pk">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.SqlClient.DalBase.Init(System.String,System.Boolean,MControl.Data.DalSchema,System.String)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean,MControl.Data.DalSchema,System.String)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="dsSchema">
                <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              </parameter>
              <parameter name="pk">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.SqlClient.DalBase.Init(System.Data.SqlClient.SqlConnection,System.Boolean,System.Boolean,MControl.Data.DalSchema)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="connection">
                <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="ownsConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="dsSchema">
                <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.SqlClient.DalBase.Init(System.String,System.Boolean)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Init" id="M:MControl.Data.IDalBase.Init(System.String,System.Boolean)" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="InitFromXML" id="M:MControl.Data.SqlClient.DalBase.InitFromXML(System.String,System.String,System.Boolean)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="connectionID">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="path">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="autoCloseConnection">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
          <method name="InnerDispose" id="M:MControl.Data.SqlClient.DalBase.InnerDispose" access="Family" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="RollbackTransaction" id="M:MControl.Data.SqlClient.DalBase.RollbackTransaction" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="RollbackTransaction" id="M:MControl.Data.IDalBase.RollbackTransaction" interface="IDalBase" interfaceId="T:MControl.Data.IDalBase" declaringType="MControl.Data.IDalBase" />
          </method>
          <method name="UpdateAllBaseObjects" id="M:MControl.Data.SqlClient.DalBase.UpdateAllBaseObjects" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="UpdateBase" id="M:MControl.Data.SqlClient.DalBase.UpdateBase(MControl.Data.IDalDB)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="dal">
              <type name="IDalDB" id="T:MControl.Data.IDalDB" />
            </parameter>
          </method>
        </class>
        <class name="DalCmd" id="T:MControl.Data.SqlClient.DalCmd" access="Public" namespace="MControl.Data.SqlClient" displayName="DalCmd" sealed="true">
          <method name="Execute" id="M:MControl.Data.SqlClient.DalCmd.Execute(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Reflection.MethodInfo,System.Object[],System.Boolean)" access="Public" contract="Static">
            <type name="Object" id="T:System.Object" />
            <parameter name="connection">
              <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
            </parameter>
            <parameter name="transaction">
              <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
            </parameter>
            <parameter name="method">
              <type name="MethodInfo" id="T:System.Reflection.MethodInfo" />
            </parameter>
            <parameter name="values">
              <type name="Object" id="T:System.Object">
                <array rank="1" />
              </type>
            </parameter>
            <parameter name="autoCloseConnection">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
          <method name="RunAsyncReader" id="M:MControl.Data.SqlClient.DalCmd.RunAsyncReader(System.Data.SqlClient.SqlCommand,System.Int32)" access="Public" contract="Static">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <parameter name="cmd">
              <type name="SqlCommand" id="T:System.Data.SqlClient.SqlCommand" />
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
        </class>
        <class name="DalCommand" id="T:MControl.Data.SqlClient.DalCommand" access="Public" namespace="MControl.Data.SqlClient" displayName="DalCommand">
          <base name="DalDB" id="T:MControl.Data.SqlClient.DalDB" displayName="MControl.Data.SqlClient.DalDB">
            <base name="DalDB" id="T:MControl.Data.Common.DalDB" displayName="MControl.Data.Common.DalDB" />
          </base>
          <derivedBy id="T:MControl.Data.Server.DalCommandServer" displayName="MControl.Data.Server.DalCommandServer" />
          <implements name="IDalDB" id="T:MControl.Data.IDalDB" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" />
          <implements name="IDalCommand" id="T:MControl.Data.IDalCommand" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.SqlClient.DalCommand.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalCommand.#ctor(MControl.Data.IDalBase)" access="Public" contract="Normal">
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalCommand.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="m_AsyncConnection" id="F:MControl.Data.SqlClient.DalCommand.m_AsyncConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalDB">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
          </field>
          <field name="m_DataSet" id="F:MControl.Data.SqlClient.DalCommand.m_DataSet" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.SqlClient.DalCommand.m_autoCloseConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connection" id="F:MControl.Data.SqlClient.DalCommand.m_connection" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalDB">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.SqlClient.DalCommand.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_disposed" id="F:MControl.Data.SqlClient.DalCommand.m_disposed" access="Family" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_transaction" id="F:MControl.Data.SqlClient.DalCommand.m_transaction" access="Family" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalDB">
            <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.Common.DalDB.AutoCloseConnection" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Connection" id="P:MControl.Data.SqlClient.DalDB.Connection" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.Common.DalDB.DBSchema" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Transaction" id="P:MControl.Data.SqlClient.DalDB.Transaction" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="CancelExecuting" id="M:MControl.Data.Common.DalDB.CancelExecuting" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalDB" />
          <method name="DAvg" id="M:MControl.Data.Common.DalDB.DAvg(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DCount" id="M:MControl.Data.Common.DalDB.DCount(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DExists" id="M:MControl.Data.Common.DalDB.DExists(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DHashtable" id="M:MControl.Data.Common.DalDB.DHashtable(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="KeyMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="ValueMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMax" id="M:MControl.Data.Common.DalDB.DMax(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMin" id="M:MControl.Data.Common.DalDB.DMin(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DRow" id="Overload:MControl.Data.SqlClient.DalCommand.DRow" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="DRows" id="Overload:MControl.Data.SqlClient.DalCommand.DRows" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="DSum" id="M:MControl.Data.Common.DalDB.DSum(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DView" id="Overload:MControl.Data.SqlClient.DalCommand.DView" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dispose" id="Overload:MControl.Data.SqlClient.DalCommand.Dispose">
            <method name="Dispose" id="M:MControl.Data.SqlClient.DalCommand.Dispose" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
            </method>
            <method name="Dispose" id="M:MControl.Data.SqlClient.DalCommand.Dispose(System.Boolean)" access="Family" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="disposing">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dlookup" id="Overload:MControl.Data.SqlClient.DalCommand.Dlookup" declaringType="T:MControl.Data.Common.DalDB">
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Int32)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Double)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Decimal)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.DateTime)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Boolean)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object[],System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Execute" id="Overload:MControl.Data.SqlClient.DalCommand.Execute">
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Boolean)" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Boolean,System.Object[])" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Object[])" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Data.SqlClient.SqlTransaction,System.Boolean,System.Object[])" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="transaction">
                <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
            <method name="Execute" id="M:MControl.Data.SqlClient.DalCommand.Execute(System.Data.SqlClient.SqlTransaction,System.Reflection.MethodInfo,System.Boolean,System.Object[])" access="Family" contract="Virtual">
              <type name="Object" id="T:System.Object" />
              <parameter name="transaction">
                <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
              </parameter>
              <parameter name="method">
                <type name="MethodInfo" id="T:System.Reflection.MethodInfo" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="values" isParamArray="true">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
                <attribute name="ParamArrayAttribute" id="T:System.ParamArrayAttribute" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteAsyncCommand" id="M:MControl.Data.SqlClient.DalDB.ExecuteAsyncCommand(System.String,System.Int32,System.Int32,System.Int32)" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="commandTimeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="ExecuteAsyncReader" id="M:MControl.Data.SqlClient.DalDB.ExecuteAsyncReader(System.String,System.Int32,System.Int32,System.Int32)" access="Public" contract="Normal" declaringType="T:MControl.Data.SqlClient.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="commandTimeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="ExecuteBulkCopy" id="Overload:MControl.Data.SqlClient.DalCommand.ExecuteBulkCopy" declaringType="T:MControl.Data.SqlClient.DalDB">
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.String,System.String,MControl.Data.MAPPING[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.String,System.String,MControl.Data.MAPPING[],System.Int32,System.Int32)" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="batchSize">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="timeout">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.Data.DataTable,System.String,MControl.Data.MAPPING[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.Data.DataTable,System.Data.DataRowState,System.String,MControl.Data.MAPPING[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="state">
                <type name="DataRowState" id="T:System.Data.DataRowState" valueType="true" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.Data.DataRow[],System.String,MControl.Data.MAPPING[])" access="Family" contract="Virtual" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="rows">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDalSchema" id="Overload:MControl.Data.SqlClient.DalCommand.ExecuteDalSchema" declaringType="T:MControl.Data.SqlClient.DalDB">
            <method name="ExecuteDalSchema" id="M:MControl.Data.SqlClient.DalDB.ExecuteDalSchema(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDalSchema" id="M:MControl.Data.SqlClient.DalDB.ExecuteDalSchema(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteDataRow" id="M:MControl.Data.Common.DalDB.ExecuteDataRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteDataRowCollection" id="M:MControl.Data.Common.DalDB.ExecuteDataRowCollection(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="ExecuteDataSet" id="Overload:MControl.Data.SqlClient.DalCommand.ExecuteDataSet" declaringType="T:MControl.Data.SqlClient.DalDB">
            <method name="ExecuteDataSet" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataSet(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataSet" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataSet(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDataTable" id="Overload:MControl.Data.SqlClient.DalCommand.ExecuteDataTable" declaringType="T:MControl.Data.SqlClient.DalDB">
            <method name="ExecuteDataTable" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataTable(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataTable(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[])" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[],System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteNonQuery" id="Overload:MControl.Data.SqlClient.DalCommand.ExecuteNonQuery" declaringType="T:MControl.Data.SqlClient.DalDB">
            <method name="ExecuteNonQuery" id="M:MControl.Data.SqlClient.DalDB.ExecuteNonQuery(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteNonQuery" id="M:MControl.Data.SqlClient.DalDB.ExecuteNonQuery(System.String,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteScalar" id="Overload:MControl.Data.SqlClient.DalCommand.ExecuteScalar" declaringType="T:MControl.Data.SqlClient.DalDB">
            <method name="ExecuteScalar" id="M:MControl.Data.SqlClient.DalDB.ExecuteScalar(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteScalar" id="M:MControl.Data.SqlClient.DalDB.ExecuteScalar(System.String,System.Int32)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteSingleRow" id="M:MControl.Data.Common.DalDB.ExecuteSingleRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Finalize" id="M:MControl.Data.SqlClient.DalCommand.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="GetCmd" id="M:MControl.Data.SqlClient.DalDB.GetCmd(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.SqlClient.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetReader" id="M:MControl.Data.Common.DalDB.GetReader(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetSqlString" id="Overload:MControl.Data.SqlClient.DalCommand.GetSqlString" declaringType="T:MControl.Data.Common.DalDB">
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Data.DataRow[],System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <method name="InnerDispose" id="M:MControl.Data.SqlClient.DalCommand.InnerDispose" access="Family" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
        </class>
        <class name="DalDB" id="T:MControl.Data.SqlClient.DalDB" access="Public" namespace="MControl.Data.SqlClient" displayName="DalDB">
          <base name="DalDB" id="T:MControl.Data.Common.DalDB" displayName="MControl.Data.Common.DalDB" />
          <derivedBy id="T:MControl.Data.SqlClient.DalCommand" displayName="MControl.Data.SqlClient.DalCommand" />
          <implements name="IDalDB" id="T:MControl.Data.IDalDB" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.SqlClient.DalDB.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.SqlClient.DalDB" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalDB.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.SqlClient.DalDB" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalDB.#ctor(MControl.Data.IDalBase)" access="Public" contract="Normal">
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalDB.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalDB.#ctor(System.String,System.String)" access="Public" contract="Normal">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="mode">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="m_AsyncConnection" id="F:MControl.Data.SqlClient.DalDB.m_AsyncConnection" access="Family" contract="Normal">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
          </field>
          <field name="m_DataSet" id="F:MControl.Data.SqlClient.DalDB.m_DataSet" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="DalSchema" id="T:MControl.Data.DalSchema" />
          </field>
          <field name="m_autoCloseConnection" id="F:MControl.Data.SqlClient.DalDB.m_autoCloseConnection" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="m_connection" id="F:MControl.Data.SqlClient.DalDB.m_connection" access="Family" contract="Normal">
            <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
          </field>
          <field name="m_connectionString" id="F:MControl.Data.SqlClient.DalDB.m_connectionString" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <type name="String" id="T:System.String" />
          </field>
          <field name="m_transaction" id="F:MControl.Data.SqlClient.DalDB.m_transaction" access="Family" contract="Normal">
            <type name="SqlTransaction" id="T:System.Data.SqlClient.SqlTransaction" />
          </field>
          <property name="AutoCloseConnection" id="P:MControl.Data.Common.DalDB.AutoCloseConnection" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Connection" id="P:MControl.Data.SqlClient.DalDB.Connection" access="Public" contract="Override">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <set access="Public" />
            <implements name="Connection" id="P:MControl.Data.IDalDB.Connection" interface="IDalDB" interfaceId="T:MControl.Data.IDalDB" declaringType="MControl.Data.IDalDB" />
          </property>
          <property name="DBSchema" id="P:MControl.Data.Common.DalDB.DBSchema" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Transaction" id="P:MControl.Data.SqlClient.DalDB.Transaction" access="Public" contract="Override">
            <type name="IDbTransaction" id="T:System.Data.IDbTransaction" />
            <get access="Public" />
            <set access="Public" />
            <implements name="Transaction" id="P:MControl.Data.IDalDB.Transaction" interface="IDalDB" interfaceId="T:MControl.Data.IDalDB" declaringType="MControl.Data.IDalDB" />
          </property>
          <method name="CancelExecuting" id="M:MControl.Data.Common.DalDB.CancelExecuting" access="Public" contract="Normal" declaringType="T:MControl.Data.Common.DalDB" />
          <method name="DAvg" id="M:MControl.Data.Common.DalDB.DAvg(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DCount" id="M:MControl.Data.Common.DalDB.DCount(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DExists" id="M:MControl.Data.Common.DalDB.DExists(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DHashtable" id="M:MControl.Data.Common.DalDB.DHashtable(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="KeyMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="ValueMember">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMax" id="M:MControl.Data.Common.DalDB.DMax(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DMin" id="M:MControl.Data.Common.DalDB.DMin(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DRow" id="Overload:MControl.Data.SqlClient.DalDB.DRow" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRow" id="M:MControl.Data.Common.DalDB.DRow(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="fields">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="DRows" id="Overload:MControl.Data.SqlClient.DalDB.DRows" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="DRows" id="M:MControl.Data.Common.DalDB.DRows(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="DSum" id="M:MControl.Data.Common.DalDB.DSum(System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="Field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Table">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Where">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="DView" id="Overload:MControl.Data.SqlClient.DalDB.DView" declaringType="T:MControl.Data.Common.DalDB">
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="DView" id="M:MControl.Data.Common.DalDB.DView(System.String,System.String,System.String,System.String,System.Object[])" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="ValueMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="DisplayMember">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Dlookup" id="Overload:MControl.Data.SqlClient.DalDB.Dlookup" declaringType="T:MControl.Data.Common.DalDB">
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Int32)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Double)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Decimal)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.DateTime)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Boolean)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.String)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
            <method name="Dlookup" id="M:MControl.Data.Common.DalDB.Dlookup(System.String,System.String,System.String,System.Object[],System.Object)" access="Public" contract="Final" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Table">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="defaultValue">
                <type name="Object" id="T:System.Object" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteAsyncCommand" id="M:MControl.Data.SqlClient.DalDB.ExecuteAsyncCommand(System.String,System.Int32,System.Int32,System.Int32)" access="Family" contract="Virtual">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="commandTimeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <method name="ExecuteAsyncReader" id="M:MControl.Data.SqlClient.DalDB.ExecuteAsyncReader(System.String,System.Int32,System.Int32,System.Int32)" access="Public" contract="Normal">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="interval">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="commandTimeOut">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="WaitForDelay">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="ExecuteBulkCopy" id="Overload:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy">
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.String,System.String,MControl.Data.MAPPING[])" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.String,System.String,MControl.Data.MAPPING[],System.Int32,System.Int32)" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="batchSize">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="timeout">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.Data.DataTable,System.String,MControl.Data.MAPPING[])" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.Data.DataTable,System.Data.DataRowState,System.String,MControl.Data.MAPPING[])" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="table">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="state">
                <type name="DataRowState" id="T:System.Data.DataRowState" valueType="true" />
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteBulkCopy" id="M:MControl.Data.SqlClient.DalDB.ExecuteBulkCopy(System.Data.DataRow[],System.String,MControl.Data.MAPPING[])" access="Family" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="rows">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="destinationTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="columnMapping">
                <type name="MAPPING" id="T:MControl.Data.MAPPING">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDalSchema" id="Overload:MControl.Data.SqlClient.DalDB.ExecuteDalSchema">
            <method name="ExecuteDalSchema" id="M:MControl.Data.SqlClient.DalDB.ExecuteDalSchema(System.String)" access="Family" contract="Override">
              <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDalSchema" id="M:MControl.Data.SqlClient.DalDB.ExecuteDalSchema(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override">
              <type name="DalSchema" id="T:MControl.Data.DalSchema" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteDataRow" id="M:MControl.Data.Common.DalDB.ExecuteDataRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteDataRowCollection" id="M:MControl.Data.Common.DalDB.ExecuteDataRowCollection(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="ExecuteDataSet" id="Overload:MControl.Data.SqlClient.DalDB.ExecuteDataSet">
            <method name="ExecuteDataSet" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataSet(System.String)" access="Family" contract="Override">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataSet" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataSet(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteDataTable" id="Overload:MControl.Data.SqlClient.DalDB.ExecuteDataTable">
            <method name="ExecuteDataTable" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataTable(System.String)" access="Public" contract="Override">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataTable(System.String,System.Boolean,System.Data.MissingSchemaAction,System.Int32)" access="Family" contract="Override">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="autoCloseConnection">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[])" access="Family" contract="Override">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="ExecuteDataTable" id="M:MControl.Data.SqlClient.DalDB.ExecuteDataTable(System.String,MControl.Data.CONSTRAINT[],System.Int32)" access="Family" contract="Override">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="constraint">
                <type name="CONSTRAINT" id="T:MControl.Data.CONSTRAINT" valueType="true">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteNonQuery" id="Overload:MControl.Data.SqlClient.DalDB.ExecuteNonQuery">
            <method name="ExecuteNonQuery" id="M:MControl.Data.SqlClient.DalDB.ExecuteNonQuery(System.String)" access="Public" contract="Override">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteNonQuery" id="M:MControl.Data.SqlClient.DalDB.ExecuteNonQuery(System.String,System.Int32)" access="Family" contract="Override">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteScalar" id="Overload:MControl.Data.SqlClient.DalDB.ExecuteScalar">
            <method name="ExecuteScalar" id="M:MControl.Data.SqlClient.DalDB.ExecuteScalar(System.String)" access="Public" contract="Override">
              <type name="Object" id="T:System.Object" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteScalar" id="M:MControl.Data.SqlClient.DalDB.ExecuteScalar(System.String,System.Int32)" access="Family" contract="Override">
              <type name="Object" id="T:System.Object" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="commandTimeOut">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="ExecuteSingleRow" id="M:MControl.Data.Common.DalDB.ExecuteSingleRow(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetCmd" id="M:MControl.Data.SqlClient.DalDB.GetCmd(System.String)" access="Family" contract="Override">
            <type name="IDbCommand" id="T:System.Data.IDbCommand" />
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetReader" id="M:MControl.Data.Common.DalDB.GetReader(System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetSqlString" id="Overload:MControl.Data.SqlClient.DalDB.GetSqlString" declaringType="T:MControl.Data.Common.DalDB">
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Data.DataRow[],System.String)" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.String,System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Select">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="From">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="GetSqlString" id="M:MControl.Data.Common.DalDB.GetSqlString(System.String,System.Object[])" access="Family" contract="Normal" declaringType="T:MControl.Data.Common.DalDB">
              <parameter name="Where">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InValues">
                <type name="Object" id="T:System.Object">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="DalFactory" id="T:MControl.Data.SqlClient.DalFactory" access="Public" namespace="MControl.Data.SqlClient" displayName="DalFactory" sealed="true">
          <method name="CreateDB" id="M:MControl.Data.SqlClient.DalFactory.CreateDB(System.Type)" access="Public" contract="Static">
            <type name="IDalDB" id="T:MControl.Data.IDalDB" />
            <parameter name="encapType">
              <type name="Type" id="T:System.Type" />
            </parameter>
          </method>
          <method name="SaveAssemply" id="M:MControl.Data.SqlClient.DalFactory.SaveAssemply(System.String)" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="fileName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="DalParamAttribute" id="T:MControl.Data.SqlClient.DalParamAttribute" access="Public" namespace="MControl.Data.SqlClient" displayName="DalParamAttribute">
          <attribute name="AttributeUsageAttribute" id="T:System.AttributeUsageAttribute">
            <argument id="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" type="System.AttributeTargets" value="AttributeTargets.Parameter" />
          </attribute>
          <base name="Attribute" id="T:System.Attribute" displayName="System.Attribute" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.SqlClient.DalParamAttribute.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.SqlClient.DalParamAttribute" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalParamAttribute.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.SqlClient.DalParamAttribute" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalParamAttribute.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalParamAttribute.#ctor(System.Int32)" access="Public" contract="Normal">
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalParamAttribute.#ctor(MControl.Data.DalParamType)" access="Public" contract="Normal">
              <parameter name="parameterType">
                <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalParamAttribute.#ctor(MControl.Data.DalParamType,System.Int32)" access="Public" contract="Normal">
              <parameter name="parameterType">
                <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalParamAttribute.#ctor(MControl.Data.DalParamType,System.String)" access="Public" contract="Normal">
              <parameter name="parameterType">
                <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
              </parameter>
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalParamAttribute.#ctor(System.String,System.Int32)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DalParamAttribute.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Byte,System.Byte,System.Object,MControl.Data.DalParamType)" access="Public" contract="Normal">
              <parameter name="name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sqlDbType">
                <type name="SqlDbType" id="T:System.Data.SqlDbType" valueType="true" />
              </parameter>
              <parameter name="size">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="precision">
                <type name="Byte" id="T:System.Byte" valueType="true" />
              </parameter>
              <parameter name="scale">
                <type name="Byte" id="T:System.Byte" valueType="true" />
              </parameter>
              <parameter name="AsNull">
                <type name="Object" id="T:System.Object" />
              </parameter>
              <parameter name="parameterType">
                <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="NullValueToken" id="F:MControl.Data.SqlClient.DalParamAttribute.NullValueToken" access="Public" contract="Static" literal="true" value="NullValue">
            <type name="String" id="T:System.String" />
          </field>
          <property name="AsNull" id="P:MControl.Data.SqlClient.DalParamAttribute.AsNull" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="IsNameDefined" id="P:MControl.Data.SqlClient.DalParamAttribute.IsNameDefined" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsSizeDefined" id="P:MControl.Data.SqlClient.DalParamAttribute.IsSizeDefined" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsTypeDefined" id="P:MControl.Data.SqlClient.DalParamAttribute.IsTypeDefined" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Name" id="P:MControl.Data.SqlClient.DalParamAttribute.Name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ParameterType" id="P:MControl.Data.SqlClient.DalParamAttribute.ParameterType" access="Public" contract="Normal">
            <type name="DalParamType" id="T:MControl.Data.DalParamType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Precision" id="P:MControl.Data.SqlClient.DalParamAttribute.Precision" access="Public" contract="Normal">
            <type name="Byte" id="T:System.Byte" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Scale" id="P:MControl.Data.SqlClient.DalParamAttribute.Scale" access="Public" contract="Normal">
            <type name="Byte" id="T:System.Byte" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Size" id="P:MControl.Data.SqlClient.DalParamAttribute.Size" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="SqlDbType" id="P:MControl.Data.SqlClient.DalParamAttribute.SqlDbType" access="Public" contract="Normal">
            <type name="SqlDbType" id="T:System.Data.SqlDbType" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <method name="GetAttributeBuilder" id="M:MControl.Data.SqlClient.DalParamAttribute.GetAttributeBuilder(MControl.Data.SqlClient.DalParamAttribute)" access="Public" contract="Static">
            <type name="CustomAttributeBuilder" id="T:System.Reflection.Emit.CustomAttributeBuilder" />
            <parameter name="attr">
              <type name="DalParamAttribute" id="T:MControl.Data.SqlClient.DalParamAttribute" />
            </parameter>
          </method>
        </class>
        <class name="DBCmd" id="T:MControl.Data.SqlClient.DBCmd" access="Public" namespace="MControl.Data.SqlClient" displayName="DBCmd">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <base name="DBFactory" id="T:MControl.Data.DBFactory" displayName="MControl.Data.DBFactory" />
          <implements name="IDBCmd" id="T:MControl.Data.IDBCmd" />
          <implements name="IDisposable" id="T:System.IDisposable" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.SqlClient.DBCmd.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DBCmd.#ctor(System.Data.SqlClient.SqlConnection)" access="Public" contract="Normal">
              <parameter name="cnn">
                <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.SqlClient.DBCmd.#ctor(System.String)" access="Public" contract="Normal">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="Connection" id="P:MControl.Data.SqlClient.DBCmd.Connection" access="Public" contract="Final">
            <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            <get access="Public" />
            <set access="Public" />
            <implements name="Connection" id="P:MControl.Data.IDBCmd.Connection" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </property>
          <property name="ConnectionString" id="P:MControl.Data.SqlClient.DBCmd.ConnectionString" access="Public" contract="Final">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
            <implements name="ConnectionString" id="P:MControl.Data.IDBCmd.ConnectionString" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </property>
          <property name="DataAdapter" id="P:MControl.Data.SqlClient.DBCmd.DataAdapter" access="Public" contract="Final">
            <type name="IDbDataAdapter" id="T:System.Data.IDbDataAdapter" />
            <get access="Public" />
            <set access="Public" />
            <implements name="DataAdapter" id="P:MControl.Data.IDBCmd.DataAdapter" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </property>
          <property name="DataTableMapping" id="P:MControl.Data.SqlClient.DBCmd.DataTableMapping" access="Public" contract="Final">
            <type name="DataTableMappingCollection" id="T:System.Data.Common.DataTableMappingCollection" />
            <get access="Public" />
            <implements name="DataTableMapping" id="P:MControl.Data.IDBCmd.DataTableMapping" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </property>
          <method name="CreateDataAdapter" id="M:MControl.Data.SqlClient.DBCmd.CreateDataAdapter(System.String)" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="CreateDataAdapter" id="M:MControl.Data.IDBCmd.CreateDataAdapter(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="strSQL">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Dispose" id="M:MControl.Data.SqlClient.DBCmd.Dispose" access="Public" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="Dispose" id="M:System.IDisposable.Dispose" interface="IDisposable" interfaceId="T:System.IDisposable" declaringType="System.IDisposable" />
          </method>
          <method name="ExecuteCmd" id="M:MControl.Data.SqlClient.DBCmd.ExecuteCmd(System.String)" access="Public" contract="Final">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <implements name="ExecuteCmd" id="M:MControl.Data.IDBCmd.ExecuteCmd(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteCmdScalar" id="M:MControl.Data.SqlClient.DBCmd.ExecuteCmdScalar(System.String)" access="Public" contract="Final">
            <type name="Object" id="T:System.Object" />
            <implements name="ExecuteCmdScalar" id="M:MControl.Data.IDBCmd.ExecuteCmdScalar(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteReader" id="M:MControl.Data.SqlClient.DBCmd.ExecuteReader(System.String,System.Data.CommandBehavior)" access="Public" contract="Final">
            <type name="IDataReader" id="T:System.Data.IDataReader" />
            <implements name="ExecuteReader" id="M:MControl.Data.IDBCmd.ExecuteReader(System.String,System.Data.CommandBehavior)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="behavior">
              <type name="CommandBehavior" id="T:System.Data.CommandBehavior" valueType="true" />
            </parameter>
          </method>
          <method name="ExecuteSqlCmdScalar" id="M:MControl.Data.SqlClient.DBCmd.ExecuteSqlCmdScalar(System.String,System.String)" access="Public" contract="Static">
            <type name="Object" id="T:System.Object" />
            <parameter name="connectionString">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteSqlDB" id="M:MControl.Data.SqlClient.DBCmd.ExecuteSqlDB(System.String,System.String,System.String)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="ConnectionString">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="tabeName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="sql">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="ExecuteSqlDbCmd" id="M:MControl.Data.SqlClient.DBCmd.ExecuteSqlDbCmd(System.String,System.String)" access="Public" contract="Static">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="connectionString">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="Execute_DataTable" id="Overload:MControl.Data.SqlClient.DBCmd.Execute_DataTable">
            <method name="Execute_DataTable" id="M:MControl.Data.SqlClient.DBCmd.Execute_DataTable(System.String,System.String)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <implements name="Execute_DataTable" id="M:MControl.Data.IDBCmd.Execute_DataTable(System.String,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="tabeName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="Execute_DataTable" id="M:MControl.Data.SqlClient.DBCmd.Execute_DataTable(System.String,System.String,System.Data.MissingSchemaAction)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <implements name="Execute_DataTable" id="M:MControl.Data.IDBCmd.Execute_DataTable(System.String,System.String,System.Data.MissingSchemaAction)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="tabeName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="missingSchema">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="FillDB" id="M:MControl.Data.SqlClient.DBCmd.FillDB(System.Data.DataSet,System.Data.DataTable,System.String)" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="FillDB" id="M:MControl.Data.IDBCmd.FillDB(System.Data.DataSet,System.Data.DataTable,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="dataSet">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="tableSchema">
              <type name="DataTable" id="T:System.Data.DataTable" />
            </parameter>
            <parameter name="prefix">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="FillSchema" id="Overload:MControl.Data.SqlClient.DBCmd.FillSchema">
            <method name="FillSchema" id="M:MControl.Data.SqlClient.DBCmd.FillSchema(System.Data.DataTable,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataTable,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="tableSchema">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="FillSchema" id="M:MControl.Data.SqlClient.DBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable">
                <array rank="1" />
              </type>
              <implements name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="FillSchema" id="M:MControl.Data.SqlClient.DBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable">
                <array rank="1" />
              </type>
              <implements name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
              <parameter name="srcTable">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="FillSchema" id="M:MControl.Data.SqlClient.DBCmd.FillSchema(System.Data.DataSet,System.Data.DataTable,System.String)" access="Public" contract="Final">
              <type name="Void" id="T:System.Void" valueType="true" />
              <implements name="FillSchema" id="M:MControl.Data.IDBCmd.FillSchema(System.Data.DataSet,System.Data.DataTable,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="tableSchema">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="prefix">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Finalize" id="M:MControl.Data.SqlClient.DBCmd.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <methodOverload name="GetChanges" id="Overload:MControl.Data.SqlClient.DBCmd.GetChanges" declaringType="T:MControl.Data.DBFactory">
            <method name="GetChanges" id="M:MControl.Data.DBFactory.GetChanges(System.Data.DataTable)" access="Public" contract="Virtual" declaringType="T:MControl.Data.DBFactory">
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
            <method name="GetChanges" id="M:MControl.Data.DBFactory.GetChanges(System.Data.DataSet)" access="Public" contract="Virtual" declaringType="T:MControl.Data.DBFactory">
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetCommand" id="M:MControl.Data.SqlClient.DBCmd.GetCommand(System.String)" access="Public" contract="Final">
            <type name="IDbCommand" id="T:System.Data.IDbCommand" />
            <implements name="GetCommand" id="M:MControl.Data.IDBCmd.GetCommand(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="cmdText">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDB" id="M:MControl.Data.SqlClient.DBCmd.GetDB" access="Public" contract="Final">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <implements name="GetDB" id="M:MControl.Data.IDBCmd.GetDB" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </method>
          <method name="GetSchemaCatalog" id="M:MControl.Data.SqlClient.DBCmd.GetSchemaCatalog" access="Public" contract="Final">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <implements name="GetSchemaCatalog" id="M:MControl.Data.IDBCmd.GetSchemaCatalog" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </method>
          <method name="GetSchemaList" id="M:MControl.Data.SqlClient.DBCmd.GetSchemaList" access="Public" contract="Final">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <implements name="GetSchemaList" id="M:MControl.Data.IDBCmd.GetSchemaList" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </method>
          <methodOverload name="GetSchemaTable" id="Overload:MControl.Data.SqlClient.DBCmd.GetSchemaTable">
            <method name="GetSchemaTable" id="M:MControl.Data.SqlClient.DBCmd.GetSchemaTable(System.String,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <implements name="GetSchemaTable" id="M:MControl.Data.IDBCmd.GetSchemaTable(System.String,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="GetSchemaTable" id="M:MControl.Data.SqlClient.DBCmd.GetSchemaTable" access="Public" contract="Final">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <implements name="GetSchemaTable" id="M:MControl.Data.IDBCmd.GetSchemaTable" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            </method>
          </methodOverload>
          <method name="GetSchemaView" id="M:MControl.Data.SqlClient.DBCmd.GetSchemaView" access="Public" contract="Final">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <implements name="GetSchemaView" id="M:MControl.Data.IDBCmd.GetSchemaView" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
          </method>
          <method name="GetSqlConnection" id="M:MControl.Data.SqlClient.DBCmd.GetSqlConnection(System.String,System.String)" access="Public" contract="Static">
            <type name="String" id="T:System.String" />
            <parameter name="serverName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="database">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetSqlSchemaList" id="M:MControl.Data.SqlClient.DBCmd.GetSqlSchemaList(System.String)" access="Public" contract="Static">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <parameter name="connectionString">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetSqlSchemaTable" id="M:MControl.Data.SqlClient.DBCmd.GetSqlSchemaTable(System.Data.SqlClient.SqlConnection)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="conn">
              <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
            </parameter>
          </method>
          <method name="GetSqlSchemaView" id="M:MControl.Data.SqlClient.DBCmd.GetSqlSchemaView(System.Data.SqlClient.SqlConnection)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="conn">
              <type name="SqlConnection" id="T:System.Data.SqlClient.SqlConnection" />
            </parameter>
          </method>
          <method name="ReadSqlDB" id="M:MControl.Data.SqlClient.DBCmd.ReadSqlDB(System.String,System.String)" access="Public" contract="Static">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <parameter name="ConnectionString">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="table">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Read_DataTable" id="M:MControl.Data.SqlClient.DBCmd.Read_DataTable(System.String)" access="Public" contract="Final">
            <type name="DataTable" id="T:System.Data.DataTable" />
            <implements name="Read_DataTable" id="M:MControl.Data.IDBCmd.Read_DataTable(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="table">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="SetConnection" id="M:MControl.Data.SqlClient.DBCmd.SetConnection(System.String)" access="Public" contract="Final">
            <type name="Void" id="T:System.Void" valueType="true" />
            <implements name="SetConnection" id="M:MControl.Data.IDBCmd.SetConnection(System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
            <parameter name="connectionString">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="TestConncteion" id="M:MControl.Data.SqlClient.DBCmd.TestConncteion(System.String,System.String)" access="Public" contract="Static">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="strConn">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataBase">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.SqlClient.DBCmd.UpdateChanges">
            <method name="UpdateChanges" id="M:MControl.Data.SqlClient.DBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String)" access="Public" contract="Override">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.SqlClient.DBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataTable,System.String,System.String,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.SqlClient.DBCmd.UpdateChanges(System.Data.DataSet,System.String,System.String,System.String,System.Data.SchemaType)" access="Public" contract="Final">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataSet,System.String,System.String,System.String,System.Data.SchemaType)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="type">
                <type name="SchemaType" id="T:System.Data.SchemaType" valueType="true" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.SqlClient.DBCmd.UpdateChanges(System.Data.DataSet,System.String)" access="Public" contract="Final">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <implements name="UpdateChanges" id="M:MControl.Data.IDBCmd.UpdateChanges(System.Data.DataSet,System.String)" interface="IDBCmd" interfaceId="T:MControl.Data.IDBCmd" declaringType="MControl.Data.IDBCmd" />
              <parameter name="dataSet">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="selectCommand">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.DBFactory.UpdateChanges(System.Data.DataTable,System.String)" access="Public" contract="Virtual" declaringType="T:MControl.Data.DBFactory">
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="dbTableName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.DBFactory.UpdateChanges(System.Data.DataTable)" access="Public" contract="Virtual" declaringType="T:MControl.Data.DBFactory">
              <parameter name="dataTable">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
          </methodOverload>
        </class>
      </namespace>
      <namespace name="MControl.Data.Util" id="N:MControl.Data.Util">
        <class name="ActivePerms" id="T:MControl.Data.Util.ActivePerms" access="Public" namespace="MControl.Data.Util" displayName="ActivePerms">
          <implements name="IPerms" id="T:MControl.Util.IPerms" />
          <property name="GroupID" id="P:MControl.Data.Util.ActivePerms.GroupID" access="Public" contract="Final">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <implements name="GroupID" id="P:MControl.Util.IPerms.GroupID" interface="IPerms" interfaceId="T:MControl.Util.IPerms" declaringType="MControl.Util.IPerms" />
          </property>
          <property name="Instance" id="P:MControl.Data.Util.ActivePerms.Instance" access="Public" contract="Static">
            <type name="ActivePerms" id="T:MControl.Data.Util.ActivePerms" />
            <get access="Public" />
          </property>
          <property name="IsOwner" id="P:MControl.Data.Util.ActivePerms.IsOwner" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <implements name="IsOwner" id="P:MControl.Util.IPerms.IsOwner" interface="IPerms" interfaceId="T:MControl.Util.IPerms" declaringType="MControl.Util.IPerms" />
          </property>
          <methodOverload name="GetPermsLevel" id="Overload:MControl.Data.Util.ActivePerms.GetPermsLevel">
            <method name="GetPermsLevel" id="M:MControl.Data.Util.ActivePerms.GetPermsLevel(System.String,MControl.PermsLevel)" access="Public" contract="Final">
              <type name="PermsLevel" id="T:MControl.PermsLevel" valueType="true" />
              <implements name="GetPermsLevel" id="M:MControl.Util.IPerms.GetPermsLevel(System.String,MControl.PermsLevel)" interface="IPerms" interfaceId="T:MControl.Util.IPerms" declaringType="MControl.Util.IPerms" />
              <parameter name="ObjectName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="PermsLevel" id="T:MControl.PermsLevel" valueType="true" />
              </parameter>
            </method>
            <method name="GetPermsLevel" id="M:MControl.Data.Util.ActivePerms.GetPermsLevel(System.Int32,MControl.PermsLevel)" access="Public" contract="Final">
              <type name="PermsLevel" id="T:MControl.PermsLevel" valueType="true" />
              <implements name="GetPermsLevel" id="M:MControl.Util.IPerms.GetPermsLevel(System.Int32,MControl.PermsLevel)" interface="IPerms" interfaceId="T:MControl.Util.IPerms" declaringType="MControl.Util.IPerms" />
              <parameter name="ObjectId">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="defaultValue">
                <type name="PermsLevel" id="T:MControl.PermsLevel" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetPermsLevelToInt" id="M:MControl.Data.Util.ActivePerms.GetPermsLevelToInt(System.Int32,MControl.PermsLevel)" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="ObjectId">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
            <parameter name="defaultValue">
              <type name="PermsLevel" id="T:MControl.PermsLevel" valueType="true" />
            </parameter>
          </method>
          <methodOverload name="Init" id="Overload:MControl.Data.Util.ActivePerms.Init">
            <method name="Init" id="M:MControl.Data.Util.ActivePerms.Init(MControl.Data.Util.ActiveUser)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="au">
                <type name="ActiveUser" id="T:MControl.Data.Util.ActiveUser" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.Util.ActivePerms.Init(MControl.Data.Util.ActiveUser,System.Data.DataTable,System.Data.DataTable)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="au">
                <type name="ActiveUser" id="T:MControl.Data.Util.ActiveUser" />
              </parameter>
              <parameter name="permObjectList">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="permObjectListNames">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.Util.ActivePerms.Init(MControl.Data.Util.ActiveUser,System.Collections.Hashtable,System.Collections.Hashtable)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="au">
                <type name="ActiveUser" id="T:MControl.Data.Util.ActiveUser" />
              </parameter>
              <parameter name="permObjectList">
                <type name="Hashtable" id="T:System.Collections.Hashtable" />
              </parameter>
              <parameter name="permObjectListNames">
                <type name="Hashtable" id="T:System.Collections.Hashtable" />
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="ActiveUser" id="T:MControl.Data.Util.ActiveUser" access="Public" namespace="MControl.Data.Util" displayName="ActiveUser">
          <base name="ActiveRecord" id="T:MControl.Data.ActiveRecord" displayName="MControl.Data.ActiveRecord">
            <base name="ActiveBase" id="T:MControl.Data.ActiveBase" displayName="MControl.Data.ActiveBase" />
          </base>
          <implements name="IActiveRecord" id="T:MControl.Data.IActiveRecord" inherited="true" />
          <implements name="IDisposable" id="T:System.IDisposable" inherited="true" />
          <implements name="IPermsUser" id="T:MControl.Util.IPermsUser" />
          <constructorOverload name=".ctor" id="Overload:MControl.Data.Util.ActiveUser.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.Util.ActiveUser.#ctor(MControl.Data.IDalBase,System.String,System.String)" access="Public" contract="Normal">
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
              <parameter name="userName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="password">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Util.ActiveUser.#ctor(System.Data.DataRow,System.String,System.String)" access="Public" contract="Normal">
              <parameter name="row">
                <type name="DataRow" id="T:System.Data.DataRow" />
              </parameter>
              <parameter name="userName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="password">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="AccountId" id="P:MControl.Data.Util.ActiveUser.AccountId" access="Public" contract="Final">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <implements name="AccountId" id="P:MControl.Util.IPermsUser.AccountId" interface="IPermsUser" interfaceId="T:MControl.Util.IPermsUser" declaringType="MControl.Util.IPermsUser" />
          </property>
          <property name="Count" id="P:MControl.Data.ActiveRecord.Count" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
            <get access="Public" />
          </property>
          <property name="CurrentIndex" id="P:MControl.Data.ActiveRecord.CurrentIndex" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Details" id="P:MControl.Data.Util.ActiveUser.Details" access="Public" contract="Final">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <implements name="Details" id="P:MControl.Util.IPermsUser.Details" interface="IPermsUser" interfaceId="T:MControl.Util.IPermsUser" declaringType="MControl.Util.IPermsUser" />
          </property>
          <property name="HasErrors" id="P:MControl.Data.ActiveRecord.HasErrors" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
            <get access="Public" />
          </property>
          <property name="Initilaized" id="P:MControl.Data.ActiveRecord.Initilaized" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
            <get access="Public" />
          </property>
          <property name="Instance" id="P:MControl.Data.Util.ActiveUser.Instance" access="Public" contract="Static">
            <type name="ActiveUser" id="T:MControl.Data.Util.ActiveUser" />
            <get access="Public" />
          </property>
          <property name="IsEmpty" id="P:MControl.Data.ActiveBase.IsEmpty" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <get access="Public" />
          </property>
          <property name="IsOwner" id="P:MControl.Data.Util.ActiveUser.IsOwner" access="Public" contract="Final">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
            <implements name="IsOwner" id="P:MControl.Util.IPermsUser.IsOwner" interface="IPermsUser" interfaceId="T:MControl.Util.IPermsUser" declaringType="MControl.Util.IPermsUser" />
          </property>
          <propertyOverload name="Item" id="Overload:MControl.Data.Util.ActiveUser.Item" declaringType="T:MControl.Data.ActiveRecord">
            <property name="Item" id="P:MControl.Data.ActiveRecord.Item(System.String)" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
              <get access="Public" />
              <set access="Public" />
              <parameter name="columnName">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.ActiveRecord.Item(System.Int32)" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
              <get access="Public" />
              <set access="Public" />
              <parameter name="columnIndex">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </property>
          </propertyOverload>
          <property name="ItemArray" id="P:MControl.Data.ActiveRecord.ItemArray" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Lang" id="P:MControl.Data.Util.ActiveUser.Lang" access="Public" contract="Final">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <implements name="Lang" id="P:MControl.Util.IPermsUser.Lang" interface="IPermsUser" interfaceId="T:MControl.Util.IPermsUser" declaringType="MControl.Util.IPermsUser" />
          </property>
          <property name="MailAddress" id="P:MControl.Data.Util.ActiveUser.MailAddress" access="Public" contract="Final">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <implements name="MailAddress" id="P:MControl.Util.IPermsUser.MailAddress" interface="IPermsUser" interfaceId="T:MControl.Util.IPermsUser" declaringType="MControl.Util.IPermsUser" />
          </property>
          <property name="PermsGroup" id="P:MControl.Data.Util.ActiveUser.PermsGroup" access="Public" contract="Final">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <implements name="PermsGroup" id="P:MControl.Util.IPermsUser.PermsGroup" interface="IPermsUser" interfaceId="T:MControl.Util.IPermsUser" declaringType="MControl.Util.IPermsUser" />
          </property>
          <property name="Phone" id="P:MControl.Data.Util.ActiveUser.Phone" access="Public" contract="Final">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <implements name="Phone" id="P:MControl.Util.IPermsUser.Phone" interface="IPermsUser" interfaceId="T:MControl.Util.IPermsUser" declaringType="MControl.Util.IPermsUser" />
          </property>
          <property name="RowError" id="P:MControl.Data.ActiveRecord.RowError" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="RowState" id="P:MControl.Data.ActiveRecord.RowState" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
            <get access="Public" />
          </property>
          <property name="Table" id="P:MControl.Data.ActiveRecord.Table" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
            <get access="Public" />
          </property>
          <property name="UserId" id="P:MControl.Data.Util.ActiveUser.UserId" access="Public" contract="Final">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <implements name="UserId" id="P:MControl.Util.IPermsUser.UserId" interface="IPermsUser" interfaceId="T:MControl.Util.IPermsUser" declaringType="MControl.Util.IPermsUser" />
          </property>
          <property name="UserName" id="P:MControl.Data.Util.ActiveUser.UserName" access="Public" contract="Final">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <implements name="UserName" id="P:MControl.Util.IPermsUser.UserName" interface="IPermsUser" interfaceId="T:MControl.Util.IPermsUser" declaringType="MControl.Util.IPermsUser" />
          </property>
          <method name="AcceptChanges" id="M:MControl.Data.ActiveRecord.AcceptChanges" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
          <method name="AddColumnMapping" id="M:MControl.Data.ActiveBase.AddColumnMapping(System.String,System.String)" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="key">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="BeginEdit" id="M:MControl.Data.ActiveRecord.BeginEdit" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
          <method name="CancelEdit" id="M:MControl.Data.ActiveRecord.CancelEdit" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
          <method name="ClearErrors" id="M:MControl.Data.ActiveRecord.ClearErrors" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
          <method name="CreateMapping" id="M:MControl.Data.ActiveBase.CreateMapping" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveBase" />
          <method name="Delete" id="M:MControl.Data.ActiveRecord.Delete" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
          <method name="Dispose" id="M:MControl.Data.ActiveRecord.Dispose" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
          <method name="EndEdit" id="M:MControl.Data.ActiveRecord.EndEdit" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
          <method name="GetBoolValue" id="M:MControl.Data.ActiveBase.GetBoolValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetChildRows" id="M:MControl.Data.ActiveRecord.GetChildRows(System.Data.DataRelation)" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveRecord">
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetDateValue" id="M:MControl.Data.ActiveBase.GetDateValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDecimalValue" id="M:MControl.Data.ActiveBase.GetDecimalValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDoubleValue" id="M:MControl.Data.ActiveBase.GetDoubleValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIntValue" id="M:MControl.Data.ActiveBase.GetIntValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetParentRow" id="M:MControl.Data.ActiveRecord.GetParentRow(System.Data.DataRelation)" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveRecord">
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetParentRows" id="M:MControl.Data.ActiveRecord.GetParentRows(System.Data.DataRelation)" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveRecord">
            <parameter name="relation">
              <type name="DataRelation" id="T:System.Data.DataRelation" />
            </parameter>
          </method>
          <method name="GetStringValue" id="M:MControl.Data.ActiveBase.GetStringValue(System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetValue" id="Overload:MControl.Data.Util.ActiveUser.GetValue" declaringType="T:MControl.Data.ActiveRecord">
            <method name="GetValue" id="M:MControl.Data.ActiveRecord.GetValue(System.String)" access="Family" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Int32)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Decimal)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Double)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.Boolean)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.String)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.ActiveBase.GetValue(System.String,System.DateTime)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="field">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="Init" id="Overload:MControl.Data.Util.ActiveUser.Init" declaringType="T:MControl.Data.ActiveRecord">
            <method name="Init" id="M:MControl.Data.ActiveRecord.Init(System.Data.DataRow)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveRecord">
              <parameter name="row">
                <type name="DataRow" id="T:System.Data.DataRow" />
              </parameter>
            </method>
            <method name="Init" id="M:MControl.Data.ActiveRecord.Init(System.Data.IDbConnection,System.String,System.String)" access="Family" contract="Virtual" declaringType="T:MControl.Data.ActiveRecord">
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sql">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Refresh" id="M:MControl.Data.ActiveRecord.Refresh" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
          <method name="RejectChanges" id="M:MControl.Data.ActiveRecord.RejectChanges" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
          <method name="SetValue" id="M:MControl.Data.ActiveRecord.SetValue(System.String,System.Object)" access="Family" contract="Override" declaringType="T:MControl.Data.ActiveRecord">
            <parameter name="field">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <methodOverload name="ToString" id="Overload:MControl.Data.Util.ActiveUser.ToString" declaringType="T:MControl.Data.ActiveRecord">
            <method name="ToString" id="M:MControl.Data.ActiveRecord.ToString" access="Public" contract="Override" declaringType="T:MControl.Data.ActiveRecord" />
            <method name="ToString" id="M:MControl.Data.ActiveRecord.ToString(System.Boolean)" access="Public" contract="Normal" declaringType="T:MControl.Data.ActiveRecord">
              <parameter name="useCaption">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.Util.ActiveUser.UpdateChanges" declaringType="T:MControl.Data.ActiveBase">
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.Data.IDbConnection)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.ActiveBase.UpdateChanges(System.String,MControl.Data.DBProvider)" access="Public" contract="Virtual" declaringType="T:MControl.Data.ActiveBase">
              <parameter name="connectionString">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="provider">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
        </class>
        <class name="DalExceptionEventArgs" id="T:MControl.Data.Util.DalExceptionEventArgs" access="Public" namespace="MControl.Data.Util" displayName="DalExceptionEventArgs">
          <base name="EventArgs" id="T:System.EventArgs" displayName="System.EventArgs" />
          <constructor name=".ctor" id="M:MControl.Data.Util.DalExceptionEventArgs.#ctor(System.String,MControl.Data.Util.DalErrors)" access="Public" contract="Normal">
            <parameter name="msg">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="error">
              <type name="DalErrors" id="T:MControl.Data.Util.DalErrors" valueType="true" />
            </parameter>
          </constructor>
          <field name="Error" id="F:MControl.Data.Util.DalExceptionEventArgs.Error" access="Public" contract="Normal" initOnly="true">
            <type name="DalErrors" id="T:MControl.Data.Util.DalErrors" valueType="true" />
          </field>
          <field name="ErrorMessage" id="F:MControl.Data.Util.DalExceptionEventArgs.ErrorMessage" access="Public" contract="Normal" initOnly="true">
            <type name="String" id="T:System.String" />
          </field>
        </class>
        <class name="DalStorage" id="T:MControl.Data.Util.DalStorage" access="Public" namespace="MControl.Data.Util" displayName="DalStorage">
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <constructorOverload name=".ctor" id="Overload:MControl.Data.Util.DalStorage.#ctor" explicitInterfaceImplementation="true">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DalStorage" /> class.</autoText></summary></documentation>
            <constructor name=".ctor" id="M:MControl.Data.Util.DalStorage.#ctor" access="Public" contract="Normal">
              <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DalStorage" /> class.</autoText></summary></documentation>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Util.DalStorage.#ctor(System.String,MControl.Data.DBProvider)" access="Public" contract="Normal">
              <parameter name="connection">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="providerDb">
                <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Util.DalStorage.#ctor(MControl.Data.IDalBase)" access="Public" contract="Normal">
              <parameter name="dalBase">
                <type name="IDalBase" id="T:MControl.Data.IDalBase" />
              </parameter>
            </constructor>
          </constructorOverload>
          <property name="ConnectionString" id="P:MControl.Data.Util.DalStorage.ConnectionString" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="DataSource" id="P:MControl.Data.Util.DalStorage.DataSource" access="Public" contract="Normal">
            <type name="DataSet" id="T:System.Data.DataSet" />
            <get access="Public" />
          </property>
          <property name="DataStorageState" id="P:MControl.Data.Util.DalStorage.DataStorageState" access="Public" contract="Normal">
            <type name="DataStorageState" id="T:MControl.Data.Util.DataStorageState" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IntervalSetting" id="P:MControl.Data.Util.DalStorage.IntervalSetting" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <propertyOverload name="Item" id="Overload:MControl.Data.Util.DalStorage.Item">
            <property name="Item" id="P:MControl.Data.Util.DalStorage.Item(System.String)" access="Public" contract="Normal">
              <type name="DataView" id="T:System.Data.DataView" />
              <get access="Public" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
            </property>
            <property name="Item" id="P:MControl.Data.Util.DalStorage.Item(System.Int32)" access="Public" contract="Normal">
              <type name="DataView" id="T:System.Data.DataView" />
              <get access="Public" />
              <parameter name="index">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </property>
          </propertyOverload>
          <property name="LastSyncTime" id="P:MControl.Data.Util.DalStorage.LastSyncTime" access="Public" contract="Normal">
            <type name="DateTime" id="T:System.DateTime" valueType="true" />
            <get access="Public" />
          </property>
          <property name="NextSyncTime" id="P:MControl.Data.Util.DalStorage.NextSyncTime" access="Public" contract="Normal">
            <type name="DateTime" id="T:System.DateTime" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Provider" id="P:MControl.Data.Util.DalStorage.Provider" access="Public" contract="Normal">
            <type name="DBProvider" id="T:MControl.Data.DBProvider" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Storage" id="P:MControl.Data.Util.DalStorage.Storage" access="Public" contract="Static">
            <type name="DalStorage" id="T:MControl.Data.Util.DalStorage" />
            <get access="Public" />
          </property>
          <property name="StorageName" id="P:MControl.Data.Util.DalStorage.StorageName" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="StorageSyncState" id="P:MControl.Data.Util.DalStorage.StorageSyncState" access="Public" contract="Normal">
            <type name="StorageSyncState" id="T:MControl.Data.Util.StorageSyncState" valueType="true" />
            <get access="Public" />
          </property>
          <property name="SyncOption" id="P:MControl.Data.Util.DalStorage.SyncOption" access="Public" contract="Normal">
            <type name="SyncOption" id="T:MControl.Data.Util.SyncOption" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="SyncTables" id="P:MControl.Data.Util.DalStorage.SyncTables" access="Public" contract="Normal">
            <type name="List`1" id="T:System.Collections.Generic.List`1">
              <typeparam name="SYNCSOURCE" id="T:MControl.Data.Util.SYNCSOURCE" />
            </type>
            <get access="Public" />
          </property>
          <property name="SyncTime" id="P:MControl.Data.Util.DalStorage.SyncTime" access="Public" contract="Normal">
            <type name="SYNCTIME" id="T:MControl.Caching.SYNCTIME" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <methodOverload name="CreateStorage" id="Overload:MControl.Data.Util.DalStorage.CreateStorage">
            <method name="CreateStorage" id="M:MControl.Data.Util.DalStorage.CreateStorage(System.String,System.Data.XmlReadMode,System.String)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="fileName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="mode">
                <type name="XmlReadMode" id="T:System.Data.XmlReadMode" valueType="true" />
              </parameter>
              <parameter name="storageName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="CreateStorage" id="M:MControl.Data.Util.DalStorage.CreateStorage(System.Data.DataSet,System.String)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="ds">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="storageName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Dispose" id="M:MControl.Data.Util.DalStorage.Dispose" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="Finalize" id="M:MControl.Data.Util.DalStorage.Finalize" access="Family" contract="Override">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="GetChanges" id="M:MControl.Data.Util.DalStorage.GetChanges" access="Public" contract="Normal">
            <type name="DataSet" id="T:System.Data.DataSet" />
          </method>
          <method name="GetDataRow" id="M:MControl.Data.Util.DalStorage.GetDataRow(System.String,System.String)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="filterExpression">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDataRows" id="M:MControl.Data.Util.DalStorage.GetDataRows(System.String,System.String,System.String)" access="Public" contract="Normal">
            <type name="DataRow" id="T:System.Data.DataRow">
              <array rank="1" />
            </type>
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="filterExpression">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="sort">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="GetDataTable" id="Overload:MControl.Data.Util.DalStorage.GetDataTable">
            <method name="GetDataTable" id="M:MControl.Data.Util.DalStorage.GetDataTable(System.String)" access="Public" contract="Normal">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetDataTable" id="M:MControl.Data.Util.DalStorage.GetDataTable(System.Int32)" access="Public" contract="Normal">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="index">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="GetValue" id="Overload:MControl.Data.Util.DalStorage.GetValue">
            <method name="GetValue" id="M:MControl.Data.Util.DalStorage.GetValue(System.String,System.String,System.String,System.String)" access="Public" contract="Normal">
              <type name="String" id="T:System.String" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="column">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.Util.DalStorage.GetValue(System.String,System.String,System.String,System.DateTime)" access="Public" contract="Normal">
              <type name="DateTime" id="T:System.DateTime" valueType="true" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="column">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="DateTime" id="T:System.DateTime" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.Util.DalStorage.GetValue(System.String,System.String,System.String,System.Boolean)" access="Public" contract="Normal">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="column">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.Util.DalStorage.GetValue(System.String,System.String,System.String,System.Double)" access="Public" contract="Normal">
              <type name="Double" id="T:System.Double" valueType="true" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="column">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Double" id="T:System.Double" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.Util.DalStorage.GetValue(System.String,System.String,System.String,System.Decimal)" access="Public" contract="Normal">
              <type name="Decimal" id="T:System.Decimal" valueType="true" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="column">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Decimal" id="T:System.Decimal" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.Util.DalStorage.GetValue(System.String,System.String,System.String,System.Int32)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="column">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
            </method>
            <method name="GetValue" id="M:MControl.Data.Util.DalStorage.GetValue(System.String,System.String,System.String)" access="Public" contract="Normal">
              <type name="Object" id="T:System.Object" />
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="column">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="filterExpression">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetXml" id="M:MControl.Data.Util.DalStorage.GetXml" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="HasChanges" id="M:MControl.Data.Util.DalStorage.HasChanges" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </method>
          <methodOverload name="MergeStorage" id="Overload:MControl.Data.Util.DalStorage.MergeStorage">
            <method name="MergeStorage" id="M:MControl.Data.Util.DalStorage.MergeStorage(System.Data.DataSet,System.String,System.Boolean)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="ds">
                <type name="DataSet" id="T:System.Data.DataSet" />
              </parameter>
              <parameter name="storageName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="preserveChanges">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="MergeStorage" id="M:MControl.Data.Util.DalStorage.MergeStorage(System.Data.DataTable,System.String,System.Boolean,System.Data.MissingSchemaAction)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="preserveChanges">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="schemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
            </method>
            <method name="MergeStorage" id="M:MControl.Data.Util.DalStorage.MergeStorage(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="rows">
                <type name="DataRow" id="T:System.Data.DataRow">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="preserveChanges">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="schemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
          <method name="OnDalException" id="M:MControl.Data.Util.DalStorage.OnDalException(MControl.Data.Util.DalExceptionEventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="DalExceptionEventArgs" id="T:MControl.Data.Util.DalExceptionEventArgs" />
            </parameter>
          </method>
          <method name="OnDataStorageChanged" id="M:MControl.Data.Util.DalStorage.OnDataStorageChanged(System.EventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnDataStorageChanging" id="M:MControl.Data.Util.DalStorage.OnDataStorageChanging(System.EventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnDataValueChanged" id="M:MControl.Data.Util.DalStorage.OnDataValueChanged(System.EventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnStorageStateChanged" id="M:MControl.Data.Util.DalStorage.OnStorageStateChanged(System.EventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="OnSyncDataSource" id="M:MControl.Data.Util.DalStorage.OnSyncDataSource(MControl.Data.SyncDataSourceEventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="SyncDataSourceEventArgs" id="T:MControl.Data.SyncDataSourceEventArgs" />
            </parameter>
          </method>
          <method name="OnSyncTimeState" id="M:MControl.Data.Util.DalStorage.OnSyncTimeState(System.EventArgs)" access="Family" contract="Virtual">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="e">
              <type name="EventArgs" id="T:System.EventArgs" />
            </parameter>
          </method>
          <method name="RejectAllChanges" id="M:MControl.Data.Util.DalStorage.RejectAllChanges" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="RejectChanges" id="M:MControl.Data.Util.DalStorage.RejectChanges(System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="RemoveData" id="M:MControl.Data.Util.DalStorage.RemoveData(System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="RestartThreadSetting" id="M:MControl.Data.Util.DalStorage.RestartThreadSetting" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="Resume" id="M:MControl.Data.Util.DalStorage.Resume(System.Boolean)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="resumeStorage">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </method>
          <method name="SetValue" id="M:MControl.Data.Util.DalStorage.SetValue(System.String,System.String,System.String,System.Object)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="column">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="filterExpression">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="value">
              <type name="Object" id="T:System.Object" />
            </parameter>
          </method>
          <method name="Start" id="M:MControl.Data.Util.DalStorage.Start" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="Stop" id="M:MControl.Data.Util.DalStorage.Stop" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="StorageToXml" id="M:MControl.Data.Util.DalStorage.StorageToXml(System.String,System.Data.XmlWriteMode)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="fileName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="mode">
              <type name="XmlWriteMode" id="T:System.Data.XmlWriteMode" valueType="true" />
            </parameter>
          </method>
          <method name="StorageToXmlSchema" id="M:MControl.Data.Util.DalStorage.StorageToXmlSchema(System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="fileName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <methodOverload name="StoreData" id="Overload:MControl.Data.Util.DalStorage.StoreData">
            <method name="StoreData" id="M:MControl.Data.Util.DalStorage.StoreData(System.Data.DataTable[],System.String[])" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="tables">
                <type name="DataTable" id="T:System.Data.DataTable">
                  <array rank="1" />
                </type>
              </parameter>
              <parameter name="tablesName">
                <type name="String" id="T:System.String">
                  <array rank="1" />
                </type>
              </parameter>
            </method>
            <method name="StoreData" id="M:MControl.Data.Util.DalStorage.StoreData(System.Data.DataTable,System.String,System.String,System.Data.MissingSchemaAction,System.Boolean)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="sechemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="addToSyncTable">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
            </method>
            <method name="StoreData" id="M:MControl.Data.Util.DalStorage.StoreData(System.Data.DataTable,System.String)" access="Public" contract="Normal">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="dt">
                <type name="DataTable" id="T:System.Data.DataTable" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Suspend" id="M:MControl.Data.Util.DalStorage.Suspend" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="SyncAllDataSource" id="M:MControl.Data.Util.DalStorage.SyncAllDataSource" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="SyncContains" id="M:MControl.Data.Util.DalStorage.SyncContains(System.String)" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <parameter name="mappingName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="SyncRegisteredTables" id="M:MControl.Data.Util.DalStorage.SyncRegisteredTables" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
          </method>
          <method name="SyncStorage" id="M:MControl.Data.Util.DalStorage.SyncStorage(System.Data.DataSet,System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="ds">
              <type name="DataSet" id="T:System.Data.DataSet" />
            </parameter>
            <parameter name="storageName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="SyncTableSource" id="M:MControl.Data.Util.DalStorage.SyncTableSource(MControl.Data.Util.SYNCSOURCE)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="s">
              <type name="SYNCSOURCE" id="T:MControl.Data.Util.SYNCSOURCE" valueType="true" />
            </parameter>
          </method>
          <method name="ThreadSettingState" id="M:MControl.Data.Util.DalStorage.ThreadSettingState" access="Public" contract="Normal">
            <type name="StorageSettingState" id="T:MControl.Data.Util.StorageSettingState" valueType="true" />
          </method>
          <methodOverload name="UpdateChanges" id="Overload:MControl.Data.Util.DalStorage.UpdateChanges">
            <method name="UpdateChanges" id="M:MControl.Data.Util.DalStorage.UpdateChanges(System.Data.IDbConnection)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="UpdateChanges" id="M:MControl.Data.Util.DalStorage.UpdateChanges(System.Data.IDbConnection,System.String)" access="Public" contract="Normal">
              <type name="Int32" id="T:System.Int32" valueType="true" />
              <parameter name="cnn">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <event name="DalException" id="E:MControl.Data.Util.DalStorage.DalException" access="Public" contract="Normal" multicast="true">
            <type name="DalExceptionEventHandler" id="T:MControl.Data.Util.DalExceptionEventHandler" />
            <eventArgs name="DalExceptionEventArgs" id="T:MControl.Data.Util.DalExceptionEventArgs" />
          </event>
          <event name="DataStorageChanged" id="E:MControl.Data.Util.DalStorage.DataStorageChanged" access="Public" contract="Normal" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
          <event name="DataStorageChanging" id="E:MControl.Data.Util.DalStorage.DataStorageChanging" access="Public" contract="Normal" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
          <event name="DataValueChanged" id="E:MControl.Data.Util.DalStorage.DataValueChanged" access="Public" contract="Normal" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
          <event name="StorageStateChanged" id="E:MControl.Data.Util.DalStorage.StorageStateChanged" access="Public" contract="Normal" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
          <event name="SyncDataSource" id="E:MControl.Data.Util.DalStorage.SyncDataSource" access="Public" contract="Normal" multicast="true">
            <type name="SyncDataSourceEventHandler" id="T:MControl.Data.SyncDataSourceEventHandler" />
            <eventArgs name="SyncDataSourceEventArgs" id="T:MControl.Data.SyncDataSourceEventArgs">
              <property name="SourceName" id="P:MControl.Data.SyncDataSourceEventArgs.SourceName" access="Public" contract="Normal">
                <type name="String" id="T:System.String" />
                <get access="Public" />
              </property>
            </eventArgs>
          </event>
          <event name="SyncTimeState" id="E:MControl.Data.Util.DalStorage.SyncTimeState" access="Public" contract="Normal" multicast="true">
            <type name="EventHandler" id="T:System.EventHandler" />
          </event>
        </class>
        <class name="DataSource" id="T:MControl.Data.Util.DataSource" access="Public" namespace="MControl.Data.Util" displayName="DataSource">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <constructor name=".ctor" id="M:MControl.Data.Util.DataSource.#ctor(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,MControl.Data.Util.DBConnectionType,System.Boolean)" access="Public" contract="Normal">
            <parameter name="id">
              <type name="Guid" id="T:System.Guid" valueType="true" />
            </parameter>
            <parameter name="provider">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="integratedSecurity">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="name">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="friendlyName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="persistSecurityInfo">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="initialCatalog">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="userName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="password">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="timeOut">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="isConnected">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
            <parameter name="connection">
              <type name="Object" id="T:System.Object" />
            </parameter>
            <parameter name="connectionType">
              <type name="DBConnectionType" id="T:MControl.Data.Util.DBConnectionType" valueType="true" />
            </parameter>
            <parameter name="isEncrypted">
              <type name="Boolean" id="T:System.Boolean" valueType="true" />
            </parameter>
          </constructor>
          <field name="AsynchronousProcessing" id="F:MControl.Data.Util.DataSource.AsynchronousProcessing" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <property name="ConnectionString" id="P:MControl.Data.Util.DataSource.ConnectionString" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
        </class>
        <class name="DataSourceCollection" id="T:MControl.Data.Util.DataSourceCollection" access="Public" namespace="MControl.Data.Util" displayName="DataSourceCollection">
          <attribute name="SerializableAttribute" id="T:System.SerializableAttribute" />
          <attribute name="DefaultMemberAttribute" id="T:System.Reflection.DefaultMemberAttribute">
            <argument id="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)" type="System.String" value="Item" />
          </attribute>
          <base name="CollectionBase" id="T:System.Collections.CollectionBase" displayName="System.Collections.CollectionBase" />
          <implements name="IList" id="T:System.Collections.IList" inherited="true" />
          <implements name="ICollection" id="T:System.Collections.ICollection" inherited="true" />
          <implements name="IEnumerable" id="T:System.Collections.IEnumerable" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.Util.DataSourceCollection.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DataSourceCollection" /> class.</autoText></summary></documentation>
          </constructor>
          <property name="Item" id="P:MControl.Data.Util.DataSourceCollection.Item(System.Int32)" access="Public" contract="Virtual">
            <type name="DataSource" id="T:MControl.Data.Util.DataSource" />
            <get access="Public" />
            <parameter name="Index">
              <type name="Int32" id="T:System.Int32" valueType="true" />
            </parameter>
          </property>
          <methodOverload name="Add" id="Overload:MControl.Data.Util.DataSourceCollection.Add">
            <method name="Add" id="M:MControl.Data.Util.DataSourceCollection.Add(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,MControl.Data.Util.DBConnectionType)" access="Public" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="Provider">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="IntegratedSecurity">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Name">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="PersistSecurityInfo">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="InitialCatalog">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="UserName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="Password">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="TimeOut">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="IsConnected">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="connectionType">
                <type name="DBConnectionType" id="T:MControl.Data.Util.DBConnectionType" valueType="true" />
              </parameter>
            </method>
            <method name="Add" id="M:MControl.Data.Util.DataSourceCollection.Add(MControl.Data.Util.DataSource)" access="Public" contract="Virtual">
              <type name="Void" id="T:System.Void" valueType="true" />
              <parameter name="NewDataSource">
                <type name="DataSource" id="T:MControl.Data.Util.DataSource" />
              </parameter>
            </method>
          </methodOverload>
          <method name="Delete" id="M:MControl.Data.Util.DataSourceCollection.Delete(MControl.Data.Util.DataSource,System.String)" access="Public" contract="Normal">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="ds">
              <type name="DataSource" id="T:MControl.Data.Util.DataSource" />
            </parameter>
            <parameter name="filename">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="FindByID" id="M:MControl.Data.Util.DataSourceCollection.FindByID(System.Guid)" access="Public" contract="Normal">
            <type name="DataSource" id="T:MControl.Data.Util.DataSource" />
            <parameter name="id">
              <type name="Guid" id="T:System.Guid" valueType="true" />
            </parameter>
          </method>
        </class>
        <class name="DataSourceFactory" id="T:MControl.Data.Util.DataSourceFactory" access="Public" namespace="MControl.Data.Util" displayName="DataSourceFactory">
          <constructor name=".ctor" id="M:MControl.Data.Util.DataSourceFactory.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DataSourceFactory" /> class.</autoText></summary></documentation>
          </constructor>
          <method name="GetDataSources" id="M:MControl.Data.Util.DataSourceFactory.GetDataSources(System.String)" access="Public" contract="Static">
            <type name="DataSourceCollection" id="T:MControl.Data.Util.DataSourceCollection" />
            <parameter name="filename">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Save" id="M:MControl.Data.Util.DataSourceFactory.Save(MControl.Data.Util.DataSourceCollection,System.String)" access="Public" contract="Static">
            <type name="Void" id="T:System.Void" valueType="true" />
            <parameter name="dataSourceCollection">
              <type name="DataSourceCollection" id="T:MControl.Data.Util.DataSourceCollection" />
            </parameter>
            <parameter name="filename">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="DB" id="T:MControl.Data.Util.DB" access="Public" namespace="MControl.Data.Util" displayName="DB">
          <constructor name=".ctor" id="M:MControl.Data.Util.DB.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DB" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="Name" id="F:MControl.Data.Util.DB.Name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="Server" id="F:MControl.Data.Util.DB.Server" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="dbObjects" id="F:MControl.Data.Util.DB.dbObjects" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
          </field>
        </class>
        <class name="DBCommands" id="T:MControl.Data.Util.DBCommands" access="Public" namespace="MControl.Data.Util" displayName="DBCommands">
          <constructor name=".ctor" id="M:MControl.Data.Util.DBCommands.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DBCommands" /> class.</autoText></summary></documentation>
          </constructor>
          <method name="AllDatabaseObjects_" id="M:MControl.Data.Util.DBCommands.AllDatabaseObjects_" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="CreateJob" id="M:MControl.Data.Util.DBCommands.CreateJob(System.String,System.String,System.String,System.String,System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="JobName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="UserName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Server">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Description">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="JobSteps_Text">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Enabled">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="CreateJobStep" id="M:MControl.Data.Util.DBCommands.CreateJobStep(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="StepName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="StepID">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Server">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="UserName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="LogFileName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="Flags">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="cmdexec_success_code">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="on_success_action">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="on_fail_action">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="on_success_step_id">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="on_fail_step_id">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="retry_attempts">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="retry_interval">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="CommandText">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="CreateScript" id="M:MControl.Data.Util.DBCommands.CreateScript(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DatabaseObject" id="M:MControl.Data.Util.DBCommands.DatabaseObject(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="likeChar">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DatabaseObjects" id="M:MControl.Data.Util.DBCommands.DatabaseObjects" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="DatabasesObjectProperties" id="M:MControl.Data.Util.DBCommands.DatabasesObjectProperties(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DatabasesReferenceObjects" id="M:MControl.Data.Util.DBCommands.DatabasesReferenceObjects(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DatabasesReferenceObjectsClear" id="M:MControl.Data.Util.DBCommands.DatabasesReferenceObjectsClear(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DeleteJob" id="M:MControl.Data.Util.DBCommands.DeleteJob(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="JobName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DropDefault" id="M:MControl.Data.Util.DBCommands.DropDefault(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DefaultName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DropDefault_NoUse" id="M:MControl.Data.Util.DBCommands.DropDefault_NoUse(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DefaultName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DropFunction" id="M:MControl.Data.Util.DBCommands.DropFunction(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="funcName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DropProcedure" id="M:MControl.Data.Util.DBCommands.DropProcedure(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="ProcName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DropRule" id="M:MControl.Data.Util.DBCommands.DropRule(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="RuleName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DropRule_NoUse" id="M:MControl.Data.Util.DBCommands.DropRule_NoUse(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="RuleName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DropTrigger" id="M:MControl.Data.Util.DBCommands.DropTrigger(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="triggerName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DropUDT" id="M:MControl.Data.Util.DBCommands.DropUDT(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="UDTName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="DropUDT_NoUse" id="M:MControl.Data.Util.DBCommands.DropUDT_NoUse(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="UDTName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetAlerts" id="M:MControl.Data.Util.DBCommands.GetAlerts" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="GetColumns" id="M:MControl.Data.Util.DBCommands.GetColumns(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetConstraints" id="M:MControl.Data.Util.DBCommands.GetConstraints(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDBProperties" id="M:MControl.Data.Util.DBCommands.GetDBProperties(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDefaults" id="M:MControl.Data.Util.DBCommands.GetDefaults(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetDepends" id="M:MControl.Data.Util.DBCommands.GetDepends(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetForeignKeys" id="M:MControl.Data.Util.DBCommands.GetForeignKeys(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetFunctions" id="M:MControl.Data.Util.DBCommands.GetFunctions(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIndexesList" id="M:MControl.Data.Util.DBCommands.GetIndexesList(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetIndexesList_RunQuery" id="M:MControl.Data.Util.DBCommands.GetIndexesList_RunQuery(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetJobInfo" id="M:MControl.Data.Util.DBCommands.GetJobInfo(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="JobName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetJobStepInfo" id="M:MControl.Data.Util.DBCommands.GetJobStepInfo(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="JobName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetJobs" id="M:MControl.Data.Util.DBCommands.GetJobs" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="GetJoiningOptions_" id="M:MControl.Data.Util.DBCommands.GetJoiningOptions_(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetJoiningReferences" id="M:MControl.Data.Util.DBCommands.GetJoiningReferences(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetLinkedServers" id="M:MControl.Data.Util.DBCommands.GetLinkedServers" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="GetLocks" id="M:MControl.Data.Util.DBCommands.GetLocks" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="GetObjectScript" id="M:MControl.Data.Util.DBCommands.GetObjectScript(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetProcedures" id="M:MControl.Data.Util.DBCommands.GetProcedures(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetRules" id="M:MControl.Data.Util.DBCommands.GetRules(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetSprocParams" id="M:MControl.Data.Util.DBCommands.GetSprocParams(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="sprocName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetStatistics" id="M:MControl.Data.Util.DBCommands.GetStatistics" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="GetSysTables" id="M:MControl.Data.Util.DBCommands.GetSysTables(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetTableConstraints" id="M:MControl.Data.Util.DBCommands.GetTableConstraints(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="TableName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetTableIndexStatistics" id="M:MControl.Data.Util.DBCommands.GetTableIndexStatistics(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="indexName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetTablePermissions" id="M:MControl.Data.Util.DBCommands.GetTablePermissions(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetTableSpace" id="M:MControl.Data.Util.DBCommands.GetTableSpace(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetTableStatistics" id="M:MControl.Data.Util.DBCommands.GetTableStatistics(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetTrigger" id="M:MControl.Data.Util.DBCommands.GetTrigger(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetTriggerScript" id="M:MControl.Data.Util.DBCommands.GetTriggerScript(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetUDTs" id="M:MControl.Data.Util.DBCommands.GetUDTs(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetUniqueRowColumns" id="M:MControl.Data.Util.DBCommands.GetUniqueRowColumns(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetUserTables" id="M:MControl.Data.Util.DBCommands.GetUserTables(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetViews" id="M:MControl.Data.Util.DBCommands.GetViews(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetWho" id="M:MControl.Data.Util.DBCommands.GetWho" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </method>
          <method name="RefreshView" id="M:MControl.Data.Util.DBCommands.RefreshView(System.String,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="viewName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="StartJob" id="M:MControl.Data.Util.DBCommands.StartJob(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="JobName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="UpdateDBStatistics" id="M:MControl.Data.Util.DBCommands.UpdateDBStatistics(System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="dbName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="DBCommon" id="T:MControl.Data.Util.DBCommon" access="Public" namespace="MControl.Data.Util" displayName="DBCommon" abstract="true">
          <constructor name=".ctor" id="M:MControl.Data.Util.DBCommon.#ctor" access="Family" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DBCommon" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="DataAdapter" id="F:MControl.Data.Util.DBCommon.DataAdapter" access="Public" contract="Normal">
            <type name="SqlDataAdapter" id="T:System.Data.SqlClient.SqlDataAdapter" />
          </field>
          <field name="SqlInfoMessages" id="F:MControl.Data.Util.DBCommon.SqlInfoMessages" access="Public" contract="Static">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
          </field>
          <field name="xmlDocument" id="F:MControl.Data.Util.DBCommon.xmlDocument" access="Public" contract="Normal">
            <type name="XmlDocument" id="T:System.Xml.XmlDocument" />
          </field>
          <method name="ReadEmbeddedResource" id="M:MControl.Data.Util.DBCommon.ReadEmbeddedResource(System.String)" access="Public" contract="Static">
            <type name="XmlDocument" id="T:System.Xml.XmlDocument" />
            <parameter name="resource">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="DBManager" id="T:MControl.Data.Util.DBManager" access="Public" namespace="MControl.Data.Util" displayName="DBManager">
          <property name="Commands" id="P:MControl.Data.Util.DBManager.Commands" access="Public" contract="Normal">
            <type name="DBCommands" id="T:MControl.Data.Util.DBCommands" />
            <get access="Public" />
          </property>
          <property name="DataAdapter" id="P:MControl.Data.Util.DBManager.DataAdapter" access="Public" contract="Normal">
            <type name="IDataAdapter" id="T:System.Data.IDataAdapter" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="ParameterToolTip" id="P:MControl.Data.Util.DBManager.ParameterToolTip" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="SqlInfoMessages" id="P:MControl.Data.Util.DBManager.SqlInfoMessages" access="Public" contract="Static">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="xmlDocument" id="P:MControl.Data.Util.DBManager.xmlDocument" access="Public" contract="Normal">
            <type name="XmlDocument" id="T:System.Xml.XmlDocument" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <methodOverload name="ExecuteCommand" id="Overload:MControl.Data.Util.DBManager.ExecuteCommand">
            <method name="ExecuteCommand" id="M:MControl.Data.Util.DBManager.ExecuteCommand(System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="command">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="dataConnection">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="ExecuteCommand" id="M:MControl.Data.Util.DBManager.ExecuteCommand(System.String,System.Data.IDbConnection,System.String)" access="Public" contract="Normal">
              <type name="DataTable" id="T:System.Data.DataTable" />
              <parameter name="command">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="dataConnection">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="databaseName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <methodOverload name="ExecuteCommand_DataSet" id="Overload:MControl.Data.Util.DBManager.ExecuteCommand_DataSet">
            <method name="ExecuteCommand_DataSet" id="M:MControl.Data.Util.DBManager.ExecuteCommand_DataSet(System.String,System.Data.IDbConnection,System.String)" access="Public" contract="Normal">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="command">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="dataConnection">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="databaseName">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
            <method name="ExecuteCommand_DataSet" id="M:MControl.Data.Util.DBManager.ExecuteCommand_DataSet(System.String,System.Data.IDbConnection,System.String@)" access="Public" contract="Normal">
              <type name="DataSet" id="T:System.Data.DataSet" />
              <parameter name="command">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="dataConnection">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
              <parameter name="databaseName" direction="ref">
                <type name="String" id="T:System.String" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetCreateJobString" id="M:MControl.Data.Util.DBManager.GetCreateJobString(System.String,System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="JobName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetCreateObjectString" id="M:MControl.Data.Util.DBManager.GetCreateObjectString(System.String,System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetCreateTableString" id="M:MControl.Data.Util.DBManager.GetCreateTableString(System.String,System.Data.IDbConnection,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="tableName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
            <parameter name="databaseName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetCreateUDTString" id="M:MControl.Data.Util.DBManager.GetCreateUDTString(MControl.Data.Util.DBObjectAttribute,System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="objUDT">
              <type name="DBObjectAttribute" id="T:MControl.Data.Util.DBObjectAttribute" />
            </parameter>
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetDataBaseDefaults" id="M:MControl.Data.Util.DBManager.GetDataBaseDefaults(System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetDataBaseRules" id="M:MControl.Data.Util.DBManager.GetDataBaseRules(System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetDataBaseUDTs" id="M:MControl.Data.Util.DBManager.GetDataBaseUDTs(System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetDatabaseIndexes" id="M:MControl.Data.Util.DBManager.GetDatabaseIndexes(System.String,System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetDatabasesObjectProperties" id="M:MControl.Data.Util.DBManager.GetDatabasesObjectProperties(System.String,System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <methodOverload name="GetDatabasesObjects" id="Overload:MControl.Data.Util.DBManager.GetDatabasesObjects">
            <method name="GetDatabasesObjects" id="M:MControl.Data.Util.DBManager.GetDatabasesObjects(System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
              <type name="ArrayList" id="T:System.Collections.ArrayList" />
              <parameter name="ServerName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="dataConnection">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
            <method name="GetDatabasesObjects" id="M:MControl.Data.Util.DBManager.GetDatabasesObjects(System.String,System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
              <type name="ArrayList" id="T:System.Collections.ArrayList" />
              <parameter name="DBName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="likeChar">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="dataConnection">
                <type name="IDbConnection" id="T:System.Data.IDbConnection" />
              </parameter>
            </method>
          </methodOverload>
          <method name="GetDatabasesReferencedObjects" id="M:MControl.Data.Util.DBManager.GetDatabasesReferencedObjects(System.String,System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="likeChar">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetDatabasesReferencedObjectsClear" id="M:MControl.Data.Util.DBManager.GetDatabasesReferencedObjectsClear(System.String,System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="likeChar">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetDatabasesTriggers" id="M:MControl.Data.Util.DBManager.GetDatabasesTriggers(System.String,System.String,System.Data.IDbConnection)" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
          </method>
          <method name="GetInsertStatements" id="M:MControl.Data.Util.DBManager.GetInsertStatements(System.String,System.Data.IDbConnection,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
            <parameter name="databaseName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetJoiningReferences" id="M:MControl.Data.Util.DBManager.GetJoiningReferences(System.String,System.String,System.Data.IDbConnection,System.Collections.ArrayList,System.Collections.Hashtable)" access="Public" contract="Normal">
            <type name="ArrayList" id="T:System.Collections.ArrayList" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="joiningTable">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
            <parameter name="tableReferences">
              <type name="ArrayList" id="T:System.Collections.ArrayList" />
            </parameter>
            <parameter name="aliasList">
              <type name="Hashtable" id="T:System.Collections.Hashtable" />
            </parameter>
          </method>
          <method name="GetObjectConstructorString" id="M:MControl.Data.Util.DBManager.GetObjectConstructorString(System.String,System.String,System.Data.IDbConnection,MControl.Data.Util.DBCommon.ScriptType,MControl.Data.Util.DBCommon.ScriptObjectType)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="objectName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
            <parameter name="scriptType">
              <type name="DBCommon.ScriptType" id="T:MControl.Data.Util.DBCommon.ScriptType" valueType="true" />
            </parameter>
            <parameter name="scriptObjectType">
              <type name="DBCommon.ScriptObjectType" id="T:MControl.Data.Util.DBCommon.ScriptObjectType" valueType="true" />
            </parameter>
          </method>
          <method name="GetUpdateStatements" id="M:MControl.Data.Util.DBManager.GetUpdateStatements(System.String,System.Data.IDbConnection,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="command">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
            <parameter name="databaseName">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="GetXmlDoc" id="M:MControl.Data.Util.DBManager.GetXmlDoc(System.String,System.Data.IDbConnection,System.String)" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
            <parameter name="DBName">
              <type name="String" id="T:System.String" />
            </parameter>
            <parameter name="dataConnection">
              <type name="IDbConnection" id="T:System.Data.IDbConnection" />
            </parameter>
            <parameter name="whereConditions">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="StopExecuting" id="M:MControl.Data.Util.DBManager.StopExecuting" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </method>
        </class>
        <class name="DBObject" id="T:MControl.Data.Util.DBObject" access="Public" namespace="MControl.Data.Util" displayName="DBObject">
          <constructor name=".ctor" id="M:MControl.Data.Util.DBObject.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DBObject" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="Attributes" id="F:MControl.Data.Util.DBObject.Attributes" access="Public" contract="Normal">
            <type name="DBObjectAttributeCollection" id="T:MControl.Data.Util.DBObjectAttributeCollection" />
          </field>
          <field name="Name" id="F:MControl.Data.Util.DBObject.Name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="Type" id="F:MControl.Data.Util.DBObject.Type" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
        </class>
        <class name="DBObjectAttribute" id="T:MControl.Data.Util.DBObjectAttribute" access="Public" namespace="MControl.Data.Util" displayName="DBObjectAttribute">
          <constructor name=".ctor" id="M:MControl.Data.Util.DBObjectAttribute.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DBObjectAttribute" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="Length" id="F:MControl.Data.Util.DBObjectAttribute.Length" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
          </field>
          <field name="Name" id="F:MControl.Data.Util.DBObjectAttribute.Name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="Precesion" id="F:MControl.Data.Util.DBObjectAttribute.Precesion" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
          </field>
          <field name="Type" id="F:MControl.Data.Util.DBObjectAttribute.Type" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="allowNulls" id="F:MControl.Data.Util.DBObjectAttribute.allowNulls" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="default_id" id="F:MControl.Data.Util.DBObjectAttribute.default_id" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="owner" id="F:MControl.Data.Util.DBObjectAttribute.owner" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="rule_name" id="F:MControl.Data.Util.DBObjectAttribute.rule_name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
        </class>
        <class name="DBObjectAttributeCollection" id="T:MControl.Data.Util.DBObjectAttributeCollection" access="Public" namespace="MControl.Data.Util" displayName="DBObjectAttributeCollection">
          <base name="ArrayList" id="T:System.Collections.ArrayList" displayName="System.Collections.ArrayList" />
          <implements name="IList" id="T:System.Collections.IList" inherited="true" />
          <implements name="ICollection" id="T:System.Collections.ICollection" inherited="true" />
          <implements name="IEnumerable" id="T:System.Collections.IEnumerable" inherited="true" />
          <implements name="ICloneable" id="T:System.ICloneable" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.Util.DBObjectAttributeCollection.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DBObjectAttributeCollection" /> class.</autoText></summary></documentation>
          </constructor>
          <method name="Add" id="M:MControl.Data.Util.DBObjectAttributeCollection.Add(MControl.Data.Util.DBObjectAttribute)" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="attr">
              <type name="DBObjectAttribute" id="T:MControl.Data.Util.DBObjectAttribute" />
            </parameter>
          </method>
        </class>
        <class name="DBObjectCollection" id="T:MControl.Data.Util.DBObjectCollection" access="Public" namespace="MControl.Data.Util" displayName="DBObjectCollection">
          <base name="ArrayList" id="T:System.Collections.ArrayList" displayName="System.Collections.ArrayList" />
          <implements name="IList" id="T:System.Collections.IList" inherited="true" />
          <implements name="ICollection" id="T:System.Collections.ICollection" inherited="true" />
          <implements name="IEnumerable" id="T:System.Collections.IEnumerable" inherited="true" />
          <implements name="ICloneable" id="T:System.ICloneable" inherited="true" />
          <constructor name=".ctor" id="M:MControl.Data.Util.DBObjectCollection.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DBObjectCollection" /> class.</autoText></summary></documentation>
          </constructor>
          <method name="Add" id="M:MControl.Data.Util.DBObjectCollection.Add(MControl.Data.Util.DBObject)" access="Public" contract="Normal">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <parameter name="obj">
              <type name="DBObject" id="T:MControl.Data.Util.DBObject" />
            </parameter>
          </method>
          <method name="FindByType" id="M:MControl.Data.Util.DBObjectCollection.FindByType(System.String)" access="Public" contract="Normal">
            <type name="DBObjectCollection" id="T:MControl.Data.Util.DBObjectCollection" />
            <parameter name="type">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <class name="DBObjectProperties" id="T:MControl.Data.Util.DBObjectProperties" access="Public" namespace="MControl.Data.Util" displayName="DBObjectProperties">
          <constructor name=".ctor" id="M:MControl.Data.Util.DBObjectProperties.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.DBObjectProperties" /> class.</autoText></summary></documentation>
          </constructor>
          <field name="IsPrimaryKey" id="F:MControl.Data.Util.DBObjectProperties.IsPrimaryKey" access="Public" contract="Normal">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="Name" id="F:MControl.Data.Util.DBObjectProperties.Name" access="Public" contract="Normal">
            <type name="String" id="T:System.String" />
          </field>
          <field name="Tag" id="F:MControl.Data.Util.DBObjectProperties.Tag" access="Public" contract="Normal">
            <type name="Object" id="T:System.Object" />
          </field>
        </class>
        <class name="Security" id="T:MControl.Data.Util.Security" access="Public" namespace="MControl.Data.Util" displayName="Security">
          <constructor name=".ctor" id="M:MControl.Data.Util.Security.#ctor" access="Public" contract="Normal">
            <documentation><summary><autoText>Initializes a new instance of the <see cref="T:MControl.Data.Util.Security" /> class.</autoText></summary></documentation>
          </constructor>
          <method name="Decrypt" id="M:MControl.Data.Util.Security.Decrypt(System.String)" access="Public" contract="Static">
            <type name="String" id="T:System.String" />
            <parameter name="text">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
          <method name="Encrypt" id="M:MControl.Data.Util.Security.Encrypt(System.String)" access="Public" contract="Static">
            <type name="String" id="T:System.String" />
            <parameter name="text">
              <type name="String" id="T:System.String" />
            </parameter>
          </method>
        </class>
        <structure name="SYNCSOURCE" id="T:MControl.Data.Util.SYNCSOURCE" access="Public" namespace="MControl.Data.Util" displayName="SYNCSOURCE">
          <constructorOverload name=".ctor" id="Overload:MControl.Data.Util.SYNCSOURCE.#ctor" explicitInterfaceImplementation="true">
            <constructor name=".ctor" id="M:MControl.Data.Util.SYNCSOURCE.#ctor(System.String,System.String)" access="Public" contract="Normal">
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Util.SYNCSOURCE.#ctor(System.String,System.String,MControl.Caching.SYNCTIME)" access="Public" contract="Normal">
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="synctime">
                <type name="SYNCTIME" id="T:MControl.Caching.SYNCTIME" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Util.SYNCSOURCE.#ctor(System.String,System.String,System.Boolean,System.Data.MissingSchemaAction)" access="Public" contract="Normal">
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="preserveChanges">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
            </constructor>
            <constructor name=".ctor" id="M:MControl.Data.Util.SYNCSOURCE.#ctor(System.String,System.String,System.Boolean,System.Data.MissingSchemaAction,MControl.Caching.SYNCTIME)" access="Public" contract="Normal">
              <parameter name="tableName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="mappingName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="preserveChanges">
                <type name="Boolean" id="T:System.Boolean" valueType="true" />
              </parameter>
              <parameter name="missingSchemaAction">
                <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
              </parameter>
              <parameter name="synctime">
                <type name="SYNCTIME" id="T:MControl.Caching.SYNCTIME" valueType="true" />
              </parameter>
            </constructor>
          </constructorOverload>
          <field name="MappingName" id="F:MControl.Data.Util.SYNCSOURCE.MappingName" access="Public" contract="Normal" initOnly="true">
            <type name="String" id="T:System.String" />
          </field>
          <field name="MissingSchemaAction" id="F:MControl.Data.Util.SYNCSOURCE.MissingSchemaAction" access="Public" contract="Normal" initOnly="true">
            <type name="MissingSchemaAction" id="T:System.Data.MissingSchemaAction" valueType="true" />
          </field>
          <field name="PreserveChanges" id="F:MControl.Data.Util.SYNCSOURCE.PreserveChanges" access="Public" contract="Normal" initOnly="true">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
          </field>
          <field name="TableName" id="F:MControl.Data.Util.SYNCSOURCE.TableName" access="Public" contract="Normal" initOnly="true">
            <type name="String" id="T:System.String" />
          </field>
          <field name="syncTime" id="F:MControl.Data.Util.SYNCSOURCE.syncTime" access="Public" contract="Normal" initOnly="true">
            <type name="SYNCTIME" id="T:MControl.Caching.SYNCTIME" valueType="true" />
          </field>
        </structure>
        <enumeration name="DalErrors" id="T:MControl.Data.Util.DalErrors" displayName="DalErrors" namespace="MControl.Data.Util" access="Public">
          <field name="ErrorUnexpected" id="F:MControl.Data.Util.DalErrors.ErrorUnexpected" value="-1000" />
          <field name="ErrorInitilaized" id="F:MControl.Data.Util.DalErrors.ErrorInitilaized" value="-1001" />
          <field name="ErrorCreateStorage" id="F:MControl.Data.Util.DalErrors.ErrorCreateStorage" value="-1002" />
          <field name="ErrorStoreData" id="F:MControl.Data.Util.DalErrors.ErrorStoreData" value="-1003" />
          <field name="ErrorFileNotFound" id="F:MControl.Data.Util.DalErrors.ErrorFileNotFound" value="-1004" />
          <field name="ErrorReadFromXml" id="F:MControl.Data.Util.DalErrors.ErrorReadFromXml" value="-1005" />
          <field name="ErrorWriteToXml" id="F:MControl.Data.Util.DalErrors.ErrorWriteToXml" value="-1006" />
          <field name="ErrorSyncStorage" id="F:MControl.Data.Util.DalErrors.ErrorSyncStorage" value="-1007" />
          <field name="ErrorSetValue" id="F:MControl.Data.Util.DalErrors.ErrorSetValue" value="-1008" />
          <field name="ErrorReadValue" id="F:MControl.Data.Util.DalErrors.ErrorReadValue" value="-1009" />
          <field name="ErrorTableNotExist" id="F:MControl.Data.Util.DalErrors.ErrorTableNotExist" value="-1010" />
          <field name="ErrorColumnNotExist" id="F:MControl.Data.Util.DalErrors.ErrorColumnNotExist" value="-1011" />
          <field name="ErrorInFilterExspression" id="F:MControl.Data.Util.DalErrors.ErrorInFilterExspression" value="-1012" />
          <field name="ErrorCastingValue" id="F:MControl.Data.Util.DalErrors.ErrorCastingValue" value="-1013" />
          <field name="ErrorGetValue" id="F:MControl.Data.Util.DalErrors.ErrorGetValue" value="-1014" />
        </enumeration>
        <enumeration name="DataStorageState" id="T:MControl.Data.Util.DataStorageState" displayName="DataStorageState" namespace="MControl.Data.Util" access="Public">
          <field name="Open" id="F:MControl.Data.Util.DataStorageState.Open" value="0" />
          <field name="Synch" id="F:MControl.Data.Util.DataStorageState.Synch" value="1" />
          <field name="Closed" id="F:MControl.Data.Util.DataStorageState.Closed" value="2" />
        </enumeration>
        <enumeration name="DBCommon.ScriptObjectType" id="T:MControl.Data.Util.DBCommon.ScriptObjectType" displayName="DBCommon.ScriptObjectType" namespace="MControl.Data.Util" access="NestedPublic">
          <field name="TABLE" id="F:MControl.Data.Util.DBCommon.ScriptObjectType.TABLE" value="0" />
          <field name="VIEW" id="F:MControl.Data.Util.DBCommon.ScriptObjectType.VIEW" value="1" />
          <field name="PROCEDURE" id="F:MControl.Data.Util.DBCommon.ScriptObjectType.PROCEDURE" value="2" />
          <field name="TRIGGER" id="F:MControl.Data.Util.DBCommon.ScriptObjectType.TRIGGER" value="3" />
          <field name="UDTS" id="F:MControl.Data.Util.DBCommon.ScriptObjectType.UDTS" value="4" />
          <field name="RULE" id="F:MControl.Data.Util.DBCommon.ScriptObjectType.RULE" value="5" />
          <field name="DEFAULT" id="F:MControl.Data.Util.DBCommon.ScriptObjectType.DEFAULT" value="6" />
        </enumeration>
        <enumeration name="DBCommon.ScriptType" id="T:MControl.Data.Util.DBCommon.ScriptType" displayName="DBCommon.ScriptType" namespace="MControl.Data.Util" access="NestedPublic">
          <field name="CREATE" id="F:MControl.Data.Util.DBCommon.ScriptType.CREATE" value="0" />
          <field name="ALTER" id="F:MControl.Data.Util.DBCommon.ScriptType.ALTER" value="1" />
          <field name="UPDATE" id="F:MControl.Data.Util.DBCommon.ScriptType.UPDATE" value="2" />
          <field name="DELETE" id="F:MControl.Data.Util.DBCommon.ScriptType.DELETE" value="3" />
          <field name="INSERT" id="F:MControl.Data.Util.DBCommon.ScriptType.INSERT" value="4" />
        </enumeration>
        <enumeration name="DBConnectionType" id="T:MControl.Data.Util.DBConnectionType" displayName="DBConnectionType" namespace="MControl.Data.Util" access="Public">
          <field name="MicrosoftSqlClient" id="F:MControl.Data.Util.DBConnectionType.MicrosoftSqlClient" value="0" />
          <field name="MicrosoftOleDb" id="F:MControl.Data.Util.DBConnectionType.MicrosoftOleDb" value="1" />
          <field name="OracleOleDb" id="F:MControl.Data.Util.DBConnectionType.OracleOleDb" value="2" />
          <field name="MySQL" id="F:MControl.Data.Util.DBConnectionType.MySQL" value="3" />
          <field name="SybaseASE" id="F:MControl.Data.Util.DBConnectionType.SybaseASE" value="4" />
          <field name="Firebird" id="F:MControl.Data.Util.DBConnectionType.Firebird" value="5" />
          <field name="DB2" id="F:MControl.Data.Util.DBConnectionType.DB2" value="6" />
        </enumeration>
        <enumeration name="StorageSettingState" id="T:MControl.Data.Util.StorageSettingState" displayName="StorageSettingState" namespace="MControl.Data.Util" access="Public">
          <field name="Started" id="F:MControl.Data.Util.StorageSettingState.Started" value="0" />
          <field name="Stoped" id="F:MControl.Data.Util.StorageSettingState.Stoped" value="1" />
        </enumeration>
        <enumeration name="StorageSyncState" id="T:MControl.Data.Util.StorageSyncState" displayName="StorageSyncState" namespace="MControl.Data.Util" access="Public">
          <field name="Idle" id="F:MControl.Data.Util.StorageSyncState.Idle" value="0" />
          <field name="Started" id="F:MControl.Data.Util.StorageSyncState.Started" value="1" />
          <field name="Finished" id="F:MControl.Data.Util.StorageSyncState.Finished" value="2" />
        </enumeration>
        <enumeration name="SyncOption" id="T:MControl.Data.Util.SyncOption" displayName="SyncOption" namespace="MControl.Data.Util" access="Public">
          <field name="Manual" id="F:MControl.Data.Util.SyncOption.Manual" value="0" />
          <field name="Auto" id="F:MControl.Data.Util.SyncOption.Auto" value="1" />
        </enumeration>
        <delegate name="DalExceptionEventHandler" displayName="DalExceptionEventHandler" namespace="MControl.Data.Util" id="T:MControl.Data.Util.DalExceptionEventHandler" access="Public">
          <type name="Void" id="T:System.Void" valueType="true" />
          <parameter name="sender">
            <type name="Object" id="T:System.Object" />
          </parameter>
          <parameter name="e">
            <type name="DalExceptionEventArgs" id="T:MControl.Data.Util.DalExceptionEventArgs" />
          </parameter>
        </delegate>
      </namespace>
      <namespace name="MControl.Util" id="N:MControl.Util">
        <interface name="IPerms" id="T:MControl.Util.IPerms" access="Public" namespace="MControl.Util" displayName="IPerms">
          <implementedBy id="T:MControl.Data.Util.ActivePerms" displayName="MControl.Data.Util.ActivePerms" />
          <property name="GroupID" id="P:MControl.Util.IPerms.GroupID" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
          </property>
          <property name="IsOwner" id="P:MControl.Util.IPerms.IsOwner" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
          </property>
          <methodOverload name="GetPermsLevel" id="Overload:MControl.Util.IPerms.GetPermsLevel">
            <method name="GetPermsLevel" id="M:MControl.Util.IPerms.GetPermsLevel(System.String,MControl.PermsLevel)" access="Public" contract="Abstract">
              <type name="PermsLevel" id="T:MControl.PermsLevel" valueType="true" />
              <parameter name="ObjectName">
                <type name="String" id="T:System.String" />
              </parameter>
              <parameter name="defaultValue">
                <type name="PermsLevel" id="T:MControl.PermsLevel" valueType="true" />
              </parameter>
            </method>
            <method name="GetPermsLevel" id="M:MControl.Util.IPerms.GetPermsLevel(System.Int32,MControl.PermsLevel)" access="Public" contract="Abstract">
              <type name="PermsLevel" id="T:MControl.PermsLevel" valueType="true" />
              <parameter name="ObjectId">
                <type name="Int32" id="T:System.Int32" valueType="true" />
              </parameter>
              <parameter name="defaultValue">
                <type name="PermsLevel" id="T:MControl.PermsLevel" valueType="true" />
              </parameter>
            </method>
          </methodOverload>
        </interface>
        <interface name="IPermsUser" id="T:MControl.Util.IPermsUser" access="Public" namespace="MControl.Util" displayName="IPermsUser">
          <implementedBy id="T:MControl.Data.Util.ActiveUser" displayName="MControl.Data.Util.ActiveUser" />
          <property name="AccountId" id="P:MControl.Util.IPermsUser.AccountId" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Details" id="P:MControl.Util.IPermsUser.Details" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="IsOwner" id="P:MControl.Util.IPermsUser.IsOwner" access="Public" contract="Abstract">
            <type name="Boolean" id="T:System.Boolean" valueType="true" />
            <get access="Public" />
            <set access="Public" />
          </property>
          <property name="Lang" id="P:MControl.Util.IPermsUser.Lang" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="MailAddress" id="P:MControl.Util.IPermsUser.MailAddress" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="PermsGroup" id="P:MControl.Util.IPermsUser.PermsGroup" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
          </property>
          <property name="Phone" id="P:MControl.Util.IPermsUser.Phone" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
          <property name="UserId" id="P:MControl.Util.IPermsUser.UserId" access="Public" contract="Abstract">
            <type name="Int32" id="T:System.Int32" valueType="true" />
            <get access="Public" />
          </property>
          <property name="UserName" id="P:MControl.Util.IPermsUser.UserName" access="Public" contract="Abstract">
            <type name="String" id="T:System.String" />
            <get access="Public" />
          </property>
        </interface>
      </namespace>
    </module>
  </assembly>
</ndoc>